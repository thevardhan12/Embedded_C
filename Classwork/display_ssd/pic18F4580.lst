

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Jun  5 06:43:29 2023

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           	psect	idataCOMRAM
    16  002F22                     __pidataCOMRAM:
    17                           	opt stack 0
    18                           
    19                           ;initializer for main@F15925
    20  002F22  E7                 	db	231
    21  002F23  21                 	db	33
    22  002F24  CB                 	db	203
    23  002F25  6B                 	db	107
    24  002F26  6C                 	db	108
    25  002F27  B6                 	db	182
    26  002F28  EE                 	db	238
    27  002F29  23                 	db	35
    28  002F2A  EF                 	db	239
    29  002F2B  2F                 	db	47
    30  0000                     _PORTA	set	3968
    31  0000                     _PORTD	set	3971
    32  0000                     _TRISA	set	3986
    33  0000                     _TRISD	set	3989
    34                           
    35                           ; #config settings
    36                           
    37                           	psect	cinit
    38  002F3C                     __pcinit:
    39                           	opt stack 0
    40  002F3C                     start_initialization:
    41                           	opt stack 0
    42  002F3C                     __initialization:
    43                           	opt stack 0
    44                           
    45                           ; Initialize objects allocated to COMRAM (10 bytes)
    46                           ; load TBLPTR registers with __pidataCOMRAM
    47  002F3C  0E22               	movlw	low __pidataCOMRAM
    48  002F3E  6EF6               	movwf	tblptrl,c
    49  002F40  0E2F               	movlw	high __pidataCOMRAM
    50  002F42  6EF7               	movwf	tblptrh,c
    51  002F44  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    52  002F46  6EF8               	movwf	tblptru,c
    53  002F48  EE00  F018         	lfsr	0,__pdataCOMRAM
    54  002F4C  EE10 F00A          	lfsr	1,10
    55  002F50                     copy_data0:
    56  002F50  0009               	tblrd		*+
    57  002F52  CFF5 FFEE          	movff	tablat,postinc0
    58  002F56  50E5               	movf	postdec1,w,c
    59  002F58  50E1               	movf	fsr1l,w,c
    60  002F5A  E1FA               	bnz	copy_data0
    61  002F5C                     end_of_initialization:
    62                           	opt stack 0
    63  002F5C                     __end_of__initialization:
    64                           	opt stack 0
    65  002F5C  0100               	movlb	0
    66  002F5E  EFB1  F017         	goto	_main	;jump to C main() function
    67                           tblptru	equ	0xFF8
    68                           tblptrh	equ	0xFF7
    69                           tblptrl	equ	0xFF6
    70                           tablat	equ	0xFF5
    71                           postinc0	equ	0xFEE
    72                           postdec1	equ	0xFE5
    73                           fsr1l	equ	0xFE1
    74                           
    75                           	psect	dataCOMRAM
    76  000018                     __pdataCOMRAM:
    77                           	opt stack 0
    78  000018                     main@F15925:
    79                           	opt stack 0
    80  000018                     	ds	10
    81                           tblptru	equ	0xFF8
    82                           tblptrh	equ	0xFF7
    83                           tblptrl	equ	0xFF6
    84                           tablat	equ	0xFF5
    85                           postinc0	equ	0xFEE
    86                           postdec1	equ	0xFE5
    87                           fsr1l	equ	0xFE1
    88                           
    89                           	psect	cstackCOMRAM
    90  000001                     __pcstackCOMRAM:
    91                           	opt stack 0
    92  000001                     display@ssd:
    93                           	opt stack 0
    94                           
    95                           ; 2 bytes @ 0x0
    96  000001                     	ds	2
    97  000003                     ??_display:
    98                           
    99                           ; 1 bytes @ 0x2
   100  000003                     	ds	2
   101  000005                     display@j:
   102                           	opt stack 0
   103                           
   104                           ; 2 bytes @ 0x4
   105  000005                     	ds	2
   106  000007                     display@i:
   107                           	opt stack 0
   108                           
   109                           ; 2 bytes @ 0x6
   110  000007                     	ds	2
   111  000009                     main@data:
   112                           	opt stack 0
   113                           
   114                           ; 10 bytes @ 0x8
   115  000009                     	ds	10
   116  000013                     main@i:
   117                           	opt stack 0
   118                           
   119                           ; 1 bytes @ 0x12
   120  000013                     	ds	1
   121  000014                     main@ssd:
   122                           	opt stack 0
   123                           
   124                           ; 4 bytes @ 0x13
   125  000014                     	ds	4
   126                           tblptru	equ	0xFF8
   127                           tblptrh	equ	0xFF7
   128                           tblptrl	equ	0xFF6
   129                           tablat	equ	0xFF5
   130                           postinc0	equ	0xFEE
   131                           postdec1	equ	0xFE5
   132                           fsr1l	equ	0xFE1
   133                           
   134 ;;
   135 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   136 ;;
   137 ;; *************** function _main *****************
   138 ;; Defined at:
   139 ;;		line 2 in file "main.c"
   140 ;; Parameters:    Size  Location     Type
   141 ;;		None
   142 ;; Auto vars:     Size  Location     Type
   143 ;;  data           10    8[COMRAM] unsigned char [10]
   144 ;;  ssd             4   19[COMRAM] unsigned char [4]
   145 ;;  i               1   18[COMRAM] unsigned char 
   146 ;; Return value:  Size  Location     Type
   147 ;;                  2   10[None  ] int 
   148 ;; Registers used:
   149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   150 ;; Tracked objects:
   151 ;;		On entry : 0/0
   152 ;;		On exit  : 0/0
   153 ;;		Unchanged: 0/0
   154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   155 ;;      Params:         0       0       0       0       0       0       0
   156 ;;      Locals:        15       0       0       0       0       0       0
   157 ;;      Temps:          0       0       0       0       0       0       0
   158 ;;      Totals:        15       0       0       0       0       0       0
   159 ;;Total ram usage:       15 bytes
   160 ;; Hardware stack levels required when called:    1
   161 ;; This function calls:
   162 ;;		_display
   163 ;;		_init_config
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           	psect	text0
   170  002F62                     __ptext0:
   171                           	opt stack 0
   172  002F62                     _main:
   173                           	opt stack 30
   174                           
   175                           ;main.c: 4: void init_config();
   176                           ;main.c: 5: init_config();
   177                           
   178                           ;incstack = 0
   179  002F62  EC96  F017         	call	_init_config	;wreg free
   180                           
   181                           ;main.c: 6: void display(unsigned char *ssd);
   182                           ;main.c: 7: unsigned char i=5;
   183  002F66  0E05               	movlw	5
   184  002F68  6E13               	movwf	main@i,c
   185                           
   186                           ;main.c: 8: unsigned char data[]={0xe7,0x21,0xcb,0x6b,0x6c,0xb6,0xee,0x23,0xef,0x2f};
   187  002F6A  EE20  F018         	lfsr	2,main@F15925
   188  002F6E  EE10  F009         	lfsr	1,main@data
   189  002F72  0E09               	movlw	9
   190  002F74                     u121:
   191  002F74  CFDB FFE3          	movff	plusw2,plusw1
   192  002F78  06E8               	decf	wreg,f,c
   193  002F7A  E2FC               	bc	u121
   194  002F7C                     l720:
   195                           
   196                           ;main.c: 11: {
   197                           ;main.c: 12: ssd[0]=0x8e;
   198  002F7C  0E8E               	movlw	142
   199  002F7E  6E14               	movwf	main@ssd,c
   200                           
   201                           ;main.c: 13: ssd[1]=0xe5;
   202  002F80  0EE5               	movlw	229
   203  002F82  6E15               	movwf	main@ssd+1,c
   204                           
   205                           ;main.c: 14: ssd[2]=0xc6;
   206  002F84  0EC6               	movlw	198
   207  002F86  6E16               	movwf	main@ssd+2,c
   208                           
   209                           ;main.c: 15: ssd[3]=0xac;
   210  002F88  0EAC               	movlw	172
   211  002F8A  6E17               	movwf	main@ssd+3,c
   212                           
   213                           ;main.c: 18: display(ssd);
   214  002F8C  0E14               	movlw	low main@ssd
   215  002F8E  6E01               	movwf	display@ssd,c
   216  002F90  0E00               	movlw	high main@ssd
   217  002F92  6E02               	movwf	display@ssd+1,c
   218  002F94  ECCD  F017         	call	_display	;wreg free
   219  002F98  D7F1               	goto	l720
   220  002F9A                     __end_of_main:
   221                           	opt stack 0
   222                           tblptru	equ	0xFF8
   223                           tblptrh	equ	0xFF7
   224                           tblptrl	equ	0xFF6
   225                           tablat	equ	0xFF5
   226                           postinc0	equ	0xFEE
   227                           wreg	equ	0xFE8
   228                           postdec1	equ	0xFE5
   229                           plusw1	equ	0xFE3
   230                           fsr1l	equ	0xFE1
   231                           plusw2	equ	0xFDB
   232                           
   233 ;; *************** function _init_config *****************
   234 ;; Defined at:
   235 ;;		line 22 in file "main.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   249 ;;      Params:         0       0       0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0       0       0
   252 ;;      Totals:         0       0       0       0       0       0       0
   253 ;;Total ram usage:        0 bytes
   254 ;; Hardware stack levels used:    1
   255 ;; This function calls:
   256 ;;		Nothing
   257 ;; This function is called by:
   258 ;;		_main
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text1
   263  002F2C                     __ptext1:
   264                           	opt stack 0
   265  002F2C                     _init_config:
   266                           	opt stack 30
   267                           
   268                           ;main.c: 24: TRISD=0X00;
   269                           
   270                           ;incstack = 0
   271  002F2C  0E00               	movlw	0
   272  002F2E  6E95               	movwf	3989,c	;volatile
   273                           
   274                           ;main.c: 25: TRISA=TRISA & 0XF0;
   275  002F30  5092               	movf	3986,w,c	;volatile
   276  002F32  0BF0               	andlw	240
   277  002F34  6E92               	movwf	3986,c	;volatile
   278                           
   279                           ;main.c: 26: PORTD=0X00;
   280  002F36  0E00               	movlw	0
   281  002F38  6E83               	movwf	3971,c	;volatile
   282  002F3A  0012               	return		;funcret
   283  002F3C                     __end_of_init_config:
   284                           	opt stack 0
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           postdec1	equ	0xFE5
   292                           plusw1	equ	0xFE3
   293                           fsr1l	equ	0xFE1
   294                           plusw2	equ	0xFDB
   295                           
   296 ;; *************** function _display *****************
   297 ;; Defined at:
   298 ;;		line 28 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;  ssd             2    0[COMRAM] PTR unsigned char 
   301 ;;		 -> main@ssd(4), 
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  j               2    4[COMRAM] unsigned int 
   304 ;;  i               2    6[COMRAM] int 
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   314 ;;      Params:         2       0       0       0       0       0       0
   315 ;;      Locals:         4       0       0       0       0       0       0
   316 ;;      Temps:          2       0       0       0       0       0       0
   317 ;;      Totals:         8       0       0       0       0       0       0
   318 ;;Total ram usage:        8 bytes
   319 ;; Hardware stack levels used:    1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text2
   328  002F9A                     __ptext2:
   329                           	opt stack 0
   330  002F9A                     _display:
   331                           	opt stack 30
   332                           
   333                           ;main.c: 30: for(int i=0;i < 4;i++)
   334                           
   335                           ;incstack = 0
   336  002F9A  0E00               	movlw	0
   337  002F9C  6E08               	movwf	display@i+1,c
   338  002F9E  0E00               	movlw	0
   339  002FA0  6E07               	movwf	display@i,c
   340  002FA2                     l692:
   341  002FA2  BE08               	btfsc	display@i+1,7,c
   342  002FA4  D006               	goto	l696
   343  002FA6  5008               	movf	display@i+1,w,c
   344  002FA8  E12A               	bnz	l30
   345  002FAA  0E04               	movlw	4
   346  002FAC  5C07               	subwf	display@i,w,c
   347  002FAE  B0D8               	btfsc	status,0,c
   348  002FB0  0012               	return	
   349  002FB2                     l696:
   350                           
   351                           ;main.c: 31: {
   352                           ;main.c: 32: PORTD=ssd[i];
   353  002FB2  5007               	movf	display@i,w,c
   354  002FB4  2401               	addwf	display@ssd,w,c
   355  002FB6  6ED9               	movwf	fsr2l,c
   356  002FB8  5008               	movf	display@i+1,w,c
   357  002FBA  2002               	addwfc	display@ssd+1,w,c
   358  002FBC  6EDA               	movwf	fsr2h,c
   359  002FBE  50DF               	movf	indf2,w,c
   360  002FC0  6E83               	movwf	3971,c	;volatile
   361                           
   362                           ;main.c: 33: PORTA=(PORTA & 0Xf0 ) | (1<<i);
   363  002FC2  C007  F003         	movff	display@i,??_display
   364  002FC6  0E01               	movlw	1
   365  002FC8  6E04               	movwf	(??_display+1)& (0+255),c
   366  002FCA  2A03               	incf	??_display,f,c
   367  002FCC  D002               	goto	u84
   368  002FCE                     u85:
   369  002FCE  90D8               	bcf	status,0,c
   370  002FD0  3604               	rlcf	??_display+1,f,c
   371  002FD2                     u84:
   372  002FD2  2E03               	decfsz	??_display,f,c
   373  002FD4  D7FC               	goto	u85
   374  002FD6  5080               	movf	3968,w,c	;volatile
   375  002FD8  0BF0               	andlw	240
   376  002FDA  1004               	iorwf	??_display+1,w,c
   377  002FDC  6E80               	movwf	3968,c	;volatile
   378                           
   379                           ;main.c: 34: for(unsigned int j =0;j<1000;j++);
   380  002FDE  0E00               	movlw	0
   381  002FE0  6E06               	movwf	display@j+1,c
   382  002FE2  0E00               	movlw	0
   383  002FE4  6E05               	movwf	display@j,c
   384  002FE6                     l702:
   385  002FE6  0EE8               	movlw	232
   386  002FE8  5C05               	subwf	display@j,w,c
   387  002FEA  0E03               	movlw	3
   388  002FEC  5806               	subwfb	display@j+1,w,c
   389  002FEE  B0D8               	btfsc	status,0,c
   390  002FF0  D003               	goto	l710
   391  002FF2  4A05               	infsnz	display@j,f,c
   392  002FF4  2A06               	incf	display@j+1,f,c
   393  002FF6  D7F7               	goto	l702
   394  002FF8                     l710:
   395  002FF8  4A07               	infsnz	display@i,f,c
   396  002FFA  2A08               	incf	display@i+1,f,c
   397  002FFC  D7D2               	goto	l692
   398  002FFE                     l30:
   399  002FFE  0012               	return		;funcret
   400  003000                     __end_of_display:
   401                           	opt stack 0
   402  0000                     tblptru	equ	0xFF8
   403                           tblptrh	equ	0xFF7
   404                           tblptrl	equ	0xFF6
   405                           tablat	equ	0xFF5
   406                           postinc0	equ	0xFEE
   407                           wreg	equ	0xFE8
   408                           postdec1	equ	0xFE5
   409                           plusw1	equ	0xFE3
   410                           fsr1l	equ	0xFE1
   411                           indf2	equ	0xFDF
   412                           plusw2	equ	0xFDB
   413                           fsr2h	equ	0xFDA
   414                           fsr2l	equ	0xFD9
   415                           status	equ	0xFD8
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           postdec1	equ	0xFE5
   423                           plusw1	equ	0xFE3
   424                           fsr1l	equ	0xFE1
   425                           indf2	equ	0xFDF
   426                           plusw2	equ	0xFDB
   427                           fsr2h	equ	0xFDA
   428                           fsr2l	equ	0xFD9
   429                           status	equ	0xFD8
   430                           
   431                           	psect	rparam
   432  0000                     tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           postdec1	equ	0xFE5
   439                           plusw1	equ	0xFE3
   440                           fsr1l	equ	0xFE1
   441                           indf2	equ	0xFDF
   442                           plusw2	equ	0xFDB
   443                           fsr2h	equ	0xFDA
   444                           fsr2l	equ	0xFD9
   445                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@ssd	PTR unsigned char  size(2) Largest target is 4
		 -> main@ssd(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0     320
                                              8 COMRAM    15    15      0
                            _display
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              8     6      2     222
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _init_config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      21       1       34.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21       3        0.0%
DATA                 0      0      21      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Jun  5 06:43:29 2023

                     l30 2FFE                       u84 2FD2                       u85 2FCE  
                    l710 2FF8                      l702 2FE6                      l720 2F7C  
                    l692 2FA2                      l696 2FB2                      u121 2F74  
                    wreg 000FE8                     _main 2F62                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     start 0000  
           ___param_bank 000010                    ?_main 0001             ?_init_config 0001  
                  _PORTA 000F80                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISD 000F95          __end_of_display 3000                    main@i 0013  
                  tablat 000FF5                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8          __initialization 2F3C             __end_of_main 2F9A  
                 ??_main 0009            __activetblptr 000000                ??_display 0003  
           __pdataCOMRAM 0018                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 2F5C  
          ___rparam_used 000001           __pcstackCOMRAM 0001     __size_of_init_config 0010  
                __Hparam 0000                  __Lparam 0000                  __pcinit 2F3C  
                __ramtop 0600                  __ptext0 2F62                  __ptext1 2F2C  
                __ptext2 2F9A                  _display 2F9A                  main@ssd 0014  
   end_of_initialization 2F5C                  postdec1 000FE5                  postinc0 000FEE  
             main@F15925 0018               display@ssd 0001            __pidataCOMRAM 2F22  
    start_initialization 2F3C            ??_init_config 0001                 ?_display 0001  
    __end_of_init_config 2F3C                copy_data0 2F50                 __Hrparam 0000  
               __Lrparam 0000              _init_config 2F2C         __size_of_display 0066  
          __size_of_main 0038                 main@data 0009                 display@i 0007  
               display@j 0005  
