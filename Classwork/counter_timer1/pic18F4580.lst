

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Jun  7 04:44:57 2023

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	idataCOMRAM
    22  00032E                     __pidataCOMRAM:
    23                           	opt stack 0
    24                           
    25                           ;initializer for _data
    26  00032E  E7                 	db	231
    27  00032F  21                 	db	33
    28  000330  CB                 	db	203
    29  000331  6B                 	db	107
    30  000332  2D                 	db	45
    31  000333  6E                 	db	110
    32  000334  EE                 	db	238
    33  000335  23                 	db	35
    34  000336  EF                 	db	239
    35  000337  6F                 	db	111
    36  0000                     _TMR1	set	4046
    37  0000                     _PORTA	set	3968
    38  0000                     _PORTD	set	3971
    39  0000                     _T1CONbits	set	4045
    40  0000                     _TRISA	set	3986
    41  0000                     _TRISD	set	3989
    42  0000                     _GIE	set	32663
    43  0000                     _PEIE	set	32662
    44  0000                     _T1OSCEN	set	32363
    45  0000                     _TMR1CS	set	32361
    46  0000                     _TMR1IE	set	31976
    47  0000                     _TMR1IF	set	31984
    48  0000                     _TMR1ON	set	32360
    49                           
    50                           ; #config settings
    51                           
    52                           	psect	cinit
    53  0002C8                     __pcinit:
    54                           	opt stack 0
    55  0002C8                     start_initialization:
    56                           	opt stack 0
    57  0002C8                     __initialization:
    58                           	opt stack 0
    59                           
    60                           ; Clear objects allocated to COMRAM (8 bytes)
    61  0002C8  EE00  F02D         	lfsr	0,__pbssCOMRAM
    62  0002CC  0E08               	movlw	8
    63  0002CE                     clear_0:
    64  0002CE  6AEE               	clrf	postinc0,c
    65  0002D0  06E8               	decf	wreg,f,c
    66  0002D2  E1FD               	bnz	clear_0
    67                           
    68                           ; Initialize objects allocated to COMRAM (10 bytes)
    69                           ; load TBLPTR registers with __pidataCOMRAM
    70  0002D4  0E2E               	movlw	low __pidataCOMRAM
    71  0002D6  6EF6               	movwf	tblptrl,c
    72  0002D8  0E03               	movlw	high __pidataCOMRAM
    73  0002DA  6EF7               	movwf	tblptrh,c
    74  0002DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    75  0002DE  6EF8               	movwf	tblptru,c
    76  0002E0  EE00  F023         	lfsr	0,__pdataCOMRAM
    77  0002E4  EE10 F00A          	lfsr	1,10
    78  0002E8                     copy_data0:
    79  0002E8  0009               	tblrd		*+
    80  0002EA  CFF5 FFEE          	movff	tablat,postinc0
    81  0002EE  50E5               	movf	postdec1,w,c
    82  0002F0  50E1               	movf	fsr1l,w,c
    83  0002F2  E1FA               	bnz	copy_data0
    84  0002F4                     end_of_initialization:
    85                           	opt stack 0
    86  0002F4                     __end_of__initialization:
    87                           	opt stack 0
    88  0002F4  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    89  0002F6  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    90  0002F8  0100               	movlb	0
    91  0002FA  EF30  F001         	goto	_main	;jump to C main() function
    92                           tblptru	equ	0xFF8
    93                           tblptrh	equ	0xFF7
    94                           tblptrl	equ	0xFF6
    95                           tablat	equ	0xFF5
    96                           postinc0	equ	0xFEE
    97                           wreg	equ	0xFE8
    98                           postdec1	equ	0xFE5
    99                           fsr1l	equ	0xFE1
   100                           
   101                           	psect	bssCOMRAM
   102  00002D                     __pbssCOMRAM:
   103                           	opt stack 0
   104  00002D                     _ssd:
   105                           	opt stack 0
   106  00002D                     	ds	4
   107  000031                     isr@count:
   108                           	opt stack 0
   109  000031                     	ds	2
   110  000033                     isr@number:
   111                           	opt stack 0
   112  000033                     	ds	2
   113                           tblptru	equ	0xFF8
   114                           tblptrh	equ	0xFF7
   115                           tblptrl	equ	0xFF6
   116                           tablat	equ	0xFF5
   117                           postinc0	equ	0xFEE
   118                           wreg	equ	0xFE8
   119                           postdec1	equ	0xFE5
   120                           fsr1l	equ	0xFE1
   121                           
   122                           	psect	dataCOMRAM
   123  000023                     __pdataCOMRAM:
   124                           	opt stack 0
   125  000023                     _data:
   126                           	opt stack 0
   127  000023                     	ds	10
   128                           tblptru	equ	0xFF8
   129                           tblptrh	equ	0xFF7
   130                           tblptrl	equ	0xFF6
   131                           tablat	equ	0xFF5
   132                           postinc0	equ	0xFEE
   133                           wreg	equ	0xFE8
   134                           postdec1	equ	0xFE5
   135                           fsr1l	equ	0xFE1
   136                           
   137                           	psect	cstackCOMRAM
   138  000001                     __pcstackCOMRAM:
   139                           	opt stack 0
   140  000001                     ?___awdiv:
   141                           	opt stack 0
   142  000001                     ___awdiv@dividend:
   143                           	opt stack 0
   144                           
   145                           ; 2 bytes @ 0x0
   146  000001                     	ds	2
   147  000003                     ___awdiv@divisor:
   148                           	opt stack 0
   149                           
   150                           ; 2 bytes @ 0x2
   151  000003                     	ds	2
   152  000005                     ___awdiv@counter:
   153                           	opt stack 0
   154                           
   155                           ; 1 bytes @ 0x4
   156  000005                     	ds	1
   157  000006                     ___awdiv@sign:
   158                           	opt stack 0
   159                           
   160                           ; 1 bytes @ 0x5
   161  000006                     	ds	1
   162  000007                     ___awdiv@quotient:
   163                           	opt stack 0
   164                           
   165                           ; 2 bytes @ 0x6
   166  000007                     	ds	2
   167  000009                     ?___awmod:
   168                           	opt stack 0
   169  000009                     ___awmod@dividend:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0x8
   173  000009                     	ds	2
   174  00000B                     ___awmod@divisor:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0xA
   178  00000B                     	ds	2
   179  00000D                     ___awmod@counter:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0xC
   183  00000D                     	ds	1
   184  00000E                     ___awmod@sign:
   185                           	opt stack 0
   186                           
   187                           ; 1 bytes @ 0xD
   188  00000E                     	ds	1
   189  00000F                     ??_isr:
   190                           
   191                           ; 1 bytes @ 0xE
   192  00000F                     	ds	14
   193  00001D                     ??_main:
   194                           
   195                           ; 1 bytes @ 0x1C
   196  00001D                     	ds	2
   197  00001F                     main@j:
   198                           	opt stack 0
   199                           
   200                           ; 2 bytes @ 0x1E
   201  00001F                     	ds	2
   202  000021                     main@i:
   203                           	opt stack 0
   204                           
   205                           ; 2 bytes @ 0x20
   206  000021                     	ds	2
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           tblptrl	equ	0xFF6
   210                           tablat	equ	0xFF5
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           postdec1	equ	0xFE5
   214                           fsr1l	equ	0xFE1
   215                           
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 16 in file "main.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;  j               2   30[COMRAM] unsigned int 
   226 ;;  i               2   32[COMRAM] int 
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   236 ;;      Params:         0       0       0       0       0       0       0
   237 ;;      Locals:         4       0       0       0       0       0       0
   238 ;;      Temps:          2       0       0       0       0       0       0
   239 ;;      Totals:         6       0       0       0       0       0       0
   240 ;;Total ram usage:        6 bytes
   241 ;; Hardware stack levels required when called:    4
   242 ;; This function calls:
   243 ;;		_init_config
   244 ;; This function is called by:
   245 ;;		Startup code after reset
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text0
   250  000260                     __ptext0:
   251                           	opt stack 0
   252  000260                     _main:
   253                           	opt stack 27
   254                           
   255                           ;main.c: 18: init_config();
   256                           
   257                           ;incstack = 0
   258  000260  EC8C  F001         	call	_init_config	;wreg free
   259  000264                     l753:
   260                           
   261                           ;main.c: 21: {
   262                           ;main.c: 23: for(int i=0;i < 4;i++)
   263  000264  0E00               	movlw	0
   264  000266  6E22               	movwf	main@i+1,c
   265  000268  0E00               	movlw	0
   266  00026A  6E21               	movwf	main@i,c
   267  00026C                     l755:
   268  00026C  BE22               	btfsc	main@i+1,7,c
   269  00026E  D006               	goto	l759
   270  000270  5022               	movf	main@i+1,w,c
   271  000272  E1F8               	bnz	l753
   272  000274  0E04               	movlw	4
   273  000276  5C21               	subwf	main@i,w,c
   274  000278  B0D8               	btfsc	status,0,c
   275  00027A  D7F4               	goto	l753
   276  00027C                     l759:
   277                           
   278                           ;main.c: 24: {
   279                           ;main.c: 25: PORTD=ssd[i];
   280  00027C  0E2D               	movlw	low _ssd
   281  00027E  2421               	addwf	main@i,w,c
   282  000280  6ED9               	movwf	fsr2l,c
   283  000282  0E00               	movlw	high _ssd
   284  000284  2022               	addwfc	main@i+1,w,c
   285  000286  6EDA               	movwf	fsr2h,c
   286  000288  50DF               	movf	indf2,w,c
   287  00028A  6E83               	movwf	3971,c	;volatile
   288                           
   289                           ;main.c: 26: PORTA=(PORTA & 0Xf0 ) | (1<<i);
   290  00028C  C021  F01D         	movff	main@i,??_main
   291  000290  0E01               	movlw	1
   292  000292  6E1E               	movwf	(??_main+1)& (0+255),c
   293  000294  2A1D               	incf	??_main,f,c
   294  000296  D002               	goto	u144
   295  000298                     u145:
   296  000298  90D8               	bcf	status,0,c
   297  00029A  361E               	rlcf	??_main+1,f,c
   298  00029C                     u144:
   299  00029C  2E1D               	decfsz	??_main,f,c
   300  00029E  D7FC               	goto	u145
   301  0002A0  5080               	movf	3968,w,c	;volatile
   302  0002A2  0BF0               	andlw	240
   303  0002A4  101E               	iorwf	??_main+1,w,c
   304  0002A6  6E80               	movwf	3968,c	;volatile
   305                           
   306                           ;main.c: 27: for(unsigned int j =0;j<1000;j++);
   307  0002A8  0E00               	movlw	0
   308  0002AA  6E20               	movwf	main@j+1,c
   309  0002AC  0E00               	movlw	0
   310  0002AE  6E1F               	movwf	main@j,c
   311  0002B0                     l765:
   312  0002B0  0EE8               	movlw	232
   313  0002B2  5C1F               	subwf	main@j,w,c
   314  0002B4  0E03               	movlw	3
   315  0002B6  5820               	subwfb	main@j+1,w,c
   316  0002B8  B0D8               	btfsc	status,0,c
   317  0002BA  D003               	goto	l773
   318  0002BC  4A1F               	infsnz	main@j,f,c
   319  0002BE  2A20               	incf	main@j+1,f,c
   320  0002C0  D7F7               	goto	l765
   321  0002C2                     l773:
   322  0002C2  4A21               	infsnz	main@i,f,c
   323  0002C4  2A22               	incf	main@i+1,f,c
   324  0002C6  D7D2               	goto	l755
   325  0002C8                     __end_of_main:
   326                           	opt stack 0
   327                           tblptru	equ	0xFF8
   328                           tblptrh	equ	0xFF7
   329                           tblptrl	equ	0xFF6
   330                           tablat	equ	0xFF5
   331                           postinc0	equ	0xFEE
   332                           wreg	equ	0xFE8
   333                           postdec1	equ	0xFE5
   334                           fsr1l	equ	0xFE1
   335                           indf2	equ	0xFDF
   336                           fsr2h	equ	0xFDA
   337                           fsr2l	equ	0xFD9
   338                           status	equ	0xFD8
   339                           
   340 ;; *************** function _init_config *****************
   341 ;; Defined at:
   342 ;;		line 36 in file "main.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, status,2, status,0, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   356 ;;      Params:         0       0       0       0       0       0       0
   357 ;;      Locals:         0       0       0       0       0       0       0
   358 ;;      Temps:          0       0       0       0       0       0       0
   359 ;;      Totals:         0       0       0       0       0       0       0
   360 ;;Total ram usage:        0 bytes
   361 ;; Hardware stack levels used:    1
   362 ;; Hardware stack levels required when called:    3
   363 ;; This function calls:
   364 ;;		_init_timer0
   365 ;; This function is called by:
   366 ;;		_main
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text1
   371  000318                     __ptext1:
   372                           	opt stack 0
   373  000318                     _init_config:
   374                           	opt stack 27
   375                           
   376                           ;main.c: 38: TRISD=0X00;
   377                           
   378                           ;incstack = 0
   379  000318  0E00               	movlw	0
   380  00031A  6E95               	movwf	3989,c	;volatile
   381                           
   382                           ;main.c: 39: TRISA=TRISA & 0XF0;
   383  00031C  5092               	movf	3986,w,c	;volatile
   384  00031E  0BF0               	andlw	240
   385  000320  6E92               	movwf	3986,c	;volatile
   386                           
   387                           ;main.c: 40: PORTA=PORTA & 0XF0;
   388  000322  5080               	movf	3968,w,c	;volatile
   389  000324  0BF0               	andlw	240
   390  000326  6E80               	movwf	3968,c	;volatile
   391                           
   392                           ;main.c: 41: init_timer0();
   393  000328  EC7F  F001         	call	_init_timer0	;wreg free
   394  00032C  0012               	return		;funcret
   395  00032E                     __end_of_init_config:
   396                           	opt stack 0
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           postdec1	equ	0xFE5
   404                           fsr1l	equ	0xFE1
   405                           indf2	equ	0xFDF
   406                           fsr2h	equ	0xFDA
   407                           fsr2l	equ	0xFD9
   408                           status	equ	0xFD8
   409                           
   410 ;; *************** function _init_timer0 *****************
   411 ;; Defined at:
   412 ;;		line 44 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   426 ;;      Params:         0       0       0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels used:    1
   432 ;; Hardware stack levels required when called:    2
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		_init_config
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text2
   441  0002FE                     __ptext2:
   442                           	opt stack 0
   443  0002FE                     _init_timer0:
   444                           	opt stack 27
   445                           
   446                           ;main.c: 46: GIE=1;
   447                           
   448                           ;incstack = 0
   449  0002FE  8EF2               	bsf	intcon,7,c	;volatile
   450                           
   451                           ;main.c: 47: PEIE=1;
   452  000300  8CF2               	bsf	intcon,6,c	;volatile
   453                           
   454                           ;main.c: 48: TMR1IE=1;
   455  000302  809D               	bsf	3997,0,c	;volatile
   456                           
   457                           ;main.c: 49: TMR1IF=0;
   458  000304  909E               	bcf	3998,0,c	;volatile
   459                           
   460                           ;main.c: 50: TMR1ON=1;
   461  000306  80CD               	bsf	4045,0,c	;volatile
   462                           
   463                           ;main.c: 51: TMR1CS=0;
   464  000308  92CD               	bcf	4045,1,c	;volatile
   465                           
   466                           ;main.c: 52: T1CONbits.RD16=1;
   467  00030A  8ECD               	bsf	4045,7,c	;volatile
   468                           
   469                           ;main.c: 53: TMR1=3036;
   470  00030C  0E0B               	movlw	11
   471  00030E  6ECF               	movwf	4047,c	;volatile
   472  000310  0EDC               	movlw	220
   473  000312  6ECE               	movwf	4046,c	;volatile
   474                           
   475                           ;main.c: 54: T1OSCEN=0;
   476  000314  96CD               	bcf	4045,3,c	;volatile
   477  000316  0012               	return		;funcret
   478  000318                     __end_of_init_timer0:
   479                           	opt stack 0
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           intcon	equ	0xFF2
   485                           postinc0	equ	0xFEE
   486                           wreg	equ	0xFE8
   487                           postdec1	equ	0xFE5
   488                           fsr1l	equ	0xFE1
   489                           indf2	equ	0xFDF
   490                           fsr2h	equ	0xFDA
   491                           fsr2l	equ	0xFD9
   492                           status	equ	0xFD8
   493                           
   494 ;; *************** function _isr *****************
   495 ;; Defined at:
   496 ;;		line 56 in file "main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   510 ;;      Params:         0       0       0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0       0       0
   512 ;;      Temps:         14       0       0       0       0       0       0
   513 ;;      Totals:        14       0       0       0       0       0       0
   514 ;;Total ram usage:       14 bytes
   515 ;; Hardware stack levels used:    1
   516 ;; Hardware stack levels required when called:    1
   517 ;; This function calls:
   518 ;;		___awdiv
   519 ;;		___awmod
   520 ;; This function is called by:
   521 ;;		Interrupt level 2
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	intcode
   526  000008                     __pintcode:
   527                           	opt stack 0
   528  000008                     _isr:
   529                           	opt stack 27
   530                           
   531                           ;incstack = 0
   532  000008  8235               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   533  00000A  CFFA F00F          	movff	pclath,??_isr
   534  00000E  CFFB F010          	movff	pclatu,??_isr+1
   535  000012  ED0D  F000         	call	int_func,f	;refresh shadow registers
   536                           pclatu	equ	0xFFB
   537                           pclath	equ	0xFFA
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           intcon	equ	0xFF2
   543                           postinc0	equ	0xFEE
   544                           wreg	equ	0xFE8
   545                           postdec1	equ	0xFE5
   546                           fsr1l	equ	0xFE1
   547                           indf2	equ	0xFDF
   548                           fsr2h	equ	0xFDA
   549                           fsr2l	equ	0xFD9
   550                           status	equ	0xFD8
   551                           
   552                           	psect	intcode_body
   553  00001A                     __pintcode_body:
   554                           	opt stack 27
   555  00001A                     int_func:
   556                           	opt stack 27
   557  00001A  0006               	pop		; remove dummy address from shadow register refresh
   558  00001C  CFE9 F011          	movff	fsr0l,??_isr+2
   559  000020  CFEA F012          	movff	fsr0h,??_isr+3
   560  000024  CFE1 F013          	movff	fsr1l,??_isr+4
   561  000028  CFE2 F014          	movff	fsr1h,??_isr+5
   562  00002C  CFD9 F015          	movff	fsr2l,??_isr+6
   563  000030  CFDA F016          	movff	fsr2h,??_isr+7
   564  000034  CFF3 F017          	movff	prodl,??_isr+8
   565  000038  CFF4 F018          	movff	prodh,??_isr+9
   566  00003C  CFF6 F019          	movff	tblptrl,??_isr+10
   567  000040  CFF7 F01A          	movff	tblptrh,??_isr+11
   568  000044  CFF8 F01B          	movff	tblptru,??_isr+12
   569  000048  CFF5 F01C          	movff	tablat,??_isr+13
   570                           
   571                           ;main.c: 60: static int count;
   572                           ;main.c: 61: static int number;
   573                           ;main.c: 62: if(TMR1IF)
   574  00004C  A09E               	btfss	3998,0,c	;volatile
   575  00004E  D070               	goto	i2l59
   576                           
   577                           ;main.c: 63: {
   578                           ;main.c: 64: TMR1=TMR1+3038;
   579  000050  0EDE               	movlw	222
   580  000052  24CE               	addwf	4046,w,c	;volatile
   581  000054  6ECE               	movwf	4046,c	;volatile
   582  000056  0E0B               	movlw	11
   583  000058  20CF               	addwfc	4047,w,c	;volatile
   584  00005A  6ECF               	movwf	4047,c	;volatile
   585                           
   586                           ;main.c: 65: if(count++ == 80)
   587  00005C  4A31               	infsnz	isr@count,f,c
   588  00005E  2A32               	incf	isr@count+1,f,c
   589  000060  0E51               	movlw	81
   590  000062  1831               	xorwf	isr@count,w,c
   591  000064  1032               	iorwf	isr@count+1,w,c
   592  000066  A4D8               	btfss	status,2,c
   593  000068  D062               	goto	i2l891
   594                           
   595                           ;main.c: 66: {
   596                           ;main.c: 67: number++;
   597  00006A  4A33               	infsnz	isr@number,f,c
   598  00006C  2A34               	incf	isr@number+1,f,c
   599                           
   600                           ;main.c: 68: count=0;
   601  00006E  0E00               	movlw	0
   602  000070  6E32               	movwf	isr@count+1,c
   603  000072  0E00               	movlw	0
   604  000074  6E31               	movwf	isr@count,c
   605                           
   606                           ;main.c: 69: ssd[3]=data[number % 10];
   607  000076  C033  F009         	movff	isr@number,___awmod@dividend
   608  00007A  C034  F00A         	movff	isr@number+1,___awmod@dividend+1
   609  00007E  0E00               	movlw	0
   610  000080  6E0C               	movwf	___awmod@divisor+1,c
   611  000082  0E0A               	movlw	10
   612  000084  6E0B               	movwf	___awmod@divisor,c
   613  000086  ECF8  F000         	call	___awmod	;wreg free
   614  00008A  0E23               	movlw	low _data
   615  00008C  2409               	addwf	?___awmod,w,c
   616  00008E  6ED9               	movwf	fsr2l,c
   617  000090  0E00               	movlw	high _data
   618  000092  200A               	addwfc	?___awmod+1,w,c
   619  000094  6EDA               	movwf	fsr2h,c
   620  000096  50DF               	movf	indf2,w,c
   621  000098  6E30               	movwf	_ssd+3,c
   622                           
   623                           ;main.c: 70: ssd[2]=data[(number / 10)%10];
   624  00009A  0E00               	movlw	0
   625  00009C  6E04               	movwf	___awdiv@divisor+1,c
   626  00009E  0E0A               	movlw	10
   627  0000A0  6E03               	movwf	___awdiv@divisor,c
   628  0000A2  C033  F001         	movff	isr@number,___awdiv@dividend
   629  0000A6  C034  F002         	movff	isr@number+1,___awdiv@dividend+1
   630  0000AA  ECB6  F000         	call	___awdiv	;wreg free
   631  0000AE  C001  F009         	movff	?___awdiv,___awmod@dividend
   632  0000B2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   633  0000B6  0E00               	movlw	0
   634  0000B8  6E0C               	movwf	___awmod@divisor+1,c
   635  0000BA  0E0A               	movlw	10
   636  0000BC  6E0B               	movwf	___awmod@divisor,c
   637  0000BE  ECF8  F000         	call	___awmod	;wreg free
   638  0000C2  0E23               	movlw	low _data
   639  0000C4  2409               	addwf	?___awmod,w,c
   640  0000C6  6ED9               	movwf	fsr2l,c
   641  0000C8  0E00               	movlw	high _data
   642  0000CA  200A               	addwfc	?___awmod+1,w,c
   643  0000CC  6EDA               	movwf	fsr2h,c
   644  0000CE  50DF               	movf	indf2,w,c
   645  0000D0  6E2F               	movwf	_ssd+2,c
   646                           
   647                           ;main.c: 71: ssd[1]=data[(number /100)%10];
   648  0000D2  0E00               	movlw	0
   649  0000D4  6E04               	movwf	___awdiv@divisor+1,c
   650  0000D6  0E64               	movlw	100
   651  0000D8  6E03               	movwf	___awdiv@divisor,c
   652  0000DA  C033  F001         	movff	isr@number,___awdiv@dividend
   653  0000DE  C034  F002         	movff	isr@number+1,___awdiv@dividend+1
   654  0000E2  ECB6  F000         	call	___awdiv	;wreg free
   655  0000E6  C001  F009         	movff	?___awdiv,___awmod@dividend
   656  0000EA  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   657  0000EE  0E00               	movlw	0
   658  0000F0  6E0C               	movwf	___awmod@divisor+1,c
   659  0000F2  0E0A               	movlw	10
   660  0000F4  6E0B               	movwf	___awmod@divisor,c
   661  0000F6  ECF8  F000         	call	___awmod	;wreg free
   662  0000FA  0E23               	movlw	low _data
   663  0000FC  2409               	addwf	?___awmod,w,c
   664  0000FE  6ED9               	movwf	fsr2l,c
   665  000100  0E00               	movlw	high _data
   666  000102  200A               	addwfc	?___awmod+1,w,c
   667  000104  6EDA               	movwf	fsr2h,c
   668  000106  50DF               	movf	indf2,w,c
   669  000108  6E2E               	movwf	_ssd+1,c
   670                           
   671                           ;main.c: 72: ssd[0]=data[(number/1000)];
   672  00010A  C033  F001         	movff	isr@number,___awdiv@dividend
   673  00010E  C034  F002         	movff	isr@number+1,___awdiv@dividend+1
   674  000112  0E03               	movlw	3
   675  000114  6E04               	movwf	___awdiv@divisor+1,c
   676  000116  0EE8               	movlw	232
   677  000118  6E03               	movwf	___awdiv@divisor,c
   678  00011A  ECB6  F000         	call	___awdiv	;wreg free
   679  00011E  0E23               	movlw	low _data
   680  000120  2401               	addwf	?___awdiv,w,c
   681  000122  6ED9               	movwf	fsr2l,c
   682  000124  0E00               	movlw	high _data
   683  000126  2002               	addwfc	?___awdiv+1,w,c
   684  000128  6EDA               	movwf	fsr2h,c
   685  00012A  50DF               	movf	indf2,w,c
   686  00012C  6E2D               	movwf	_ssd,c
   687  00012E                     i2l891:
   688                           
   689                           ;main.c: 77: }
   690                           ;main.c: 78: TMR1IF=0;
   691  00012E  909E               	bcf	3998,0,c	;volatile
   692  000130                     i2l59:
   693  000130  C01C  FFF5         	movff	??_isr+13,tablat
   694  000134  C01B  FFF8         	movff	??_isr+12,tblptru
   695  000138  C01A  FFF7         	movff	??_isr+11,tblptrh
   696  00013C  C019  FFF6         	movff	??_isr+10,tblptrl
   697  000140  C018  FFF4         	movff	??_isr+9,prodh
   698  000144  C017  FFF3         	movff	??_isr+8,prodl
   699  000148  C016  FFDA         	movff	??_isr+7,fsr2h
   700  00014C  C015  FFD9         	movff	??_isr+6,fsr2l
   701  000150  C014  FFE2         	movff	??_isr+5,fsr1h
   702  000154  C013  FFE1         	movff	??_isr+4,fsr1l
   703  000158  C012  FFEA         	movff	??_isr+3,fsr0h
   704  00015C  C011  FFE9         	movff	??_isr+2,fsr0l
   705  000160  C010  FFFB         	movff	??_isr+1,pclatu
   706  000164  C00F  FFFA         	movff	??_isr,pclath
   707  000168  9235               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   708  00016A  0011               	retfie		f
   709  00016C                     __end_of_isr:
   710                           	opt stack 0
   711                           pclatu	equ	0xFFB
   712                           pclath	equ	0xFFA
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           prodh	equ	0xFF4
   718                           prodl	equ	0xFF3
   719                           intcon	equ	0xFF2
   720                           postinc0	equ	0xFEE
   721                           fsr0h	equ	0xFEA
   722                           fsr0l	equ	0xFE9
   723                           wreg	equ	0xFE8
   724                           postdec1	equ	0xFE5
   725                           fsr1h	equ	0xFE2
   726                           fsr1l	equ	0xFE1
   727                           indf2	equ	0xFDF
   728                           fsr2h	equ	0xFDA
   729                           fsr2l	equ	0xFD9
   730                           status	equ	0xFD8
   731                           
   732 ;; *************** function ___awmod *****************
   733 ;; Defined at:
   734 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/awmod.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  dividend        2    8[COMRAM] int 
   737 ;;  divisor         2   10[COMRAM] int 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  sign            1   13[COMRAM] unsigned char 
   740 ;;  counter         1   12[COMRAM] unsigned char 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  2    8[COMRAM] int 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   750 ;;      Params:         4       0       0       0       0       0       0
   751 ;;      Locals:         2       0       0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0       0       0
   753 ;;      Totals:         6       0       0       0       0       0       0
   754 ;;Total ram usage:        6 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_isr
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text4
   764  0001F0                     __ptext4:
   765                           	opt stack 0
   766  0001F0                     ___awmod:
   767                           	opt stack 27
   768                           
   769                           ;incstack = 0
   770  0001F0  0E00               	movlw	0
   771  0001F2  6E0E               	movwf	___awmod@sign,c
   772  0001F4  AE0A               	btfss	___awmod@dividend+1,7,c
   773  0001F6  D006               	goto	i2l847
   774  0001F8  6C09               	negf	___awmod@dividend,c
   775  0001FA  1E0A               	comf	___awmod@dividend+1,f,c
   776  0001FC  B0D8               	btfsc	status,0,c
   777  0001FE  2A0A               	incf	___awmod@dividend+1,f,c
   778  000200  0E01               	movlw	1
   779  000202  6E0E               	movwf	___awmod@sign,c
   780  000204                     i2l847:
   781  000204  AE0C               	btfss	___awmod@divisor+1,7,c
   782  000206  D004               	goto	i2l851
   783  000208  6C0B               	negf	___awmod@divisor,c
   784  00020A  1E0C               	comf	___awmod@divisor+1,f,c
   785  00020C  B0D8               	btfsc	status,0,c
   786  00020E  2A0C               	incf	___awmod@divisor+1,f,c
   787  000210                     i2l851:
   788  000210  500B               	movf	___awmod@divisor,w,c
   789  000212  100C               	iorwf	___awmod@divisor+1,w,c
   790  000214  B4D8               	btfsc	status,2,c
   791  000216  D018               	goto	i2l867
   792  000218  0E01               	movlw	1
   793  00021A  6E0D               	movwf	___awmod@counter,c
   794  00021C  D004               	goto	i2l857
   795  00021E                     i2l855:
   796  00021E  90D8               	bcf	status,0,c
   797  000220  360B               	rlcf	___awmod@divisor,f,c
   798  000222  360C               	rlcf	___awmod@divisor+1,f,c
   799  000224  2A0D               	incf	___awmod@counter,f,c
   800  000226                     i2l857:
   801  000226  AE0C               	btfss	___awmod@divisor+1,7,c
   802  000228  D7FA               	goto	i2l855
   803  00022A                     i2l859:
   804  00022A  500B               	movf	___awmod@divisor,w,c
   805  00022C  5C09               	subwf	___awmod@dividend,w,c
   806  00022E  500C               	movf	___awmod@divisor+1,w,c
   807  000230  580A               	subwfb	___awmod@dividend+1,w,c
   808  000232  A0D8               	btfss	status,0,c
   809  000234  D004               	goto	i2l863
   810  000236  500B               	movf	___awmod@divisor,w,c
   811  000238  5E09               	subwf	___awmod@dividend,f,c
   812  00023A  500C               	movf	___awmod@divisor+1,w,c
   813  00023C  5A0A               	subwfb	___awmod@dividend+1,f,c
   814  00023E                     i2l863:
   815  00023E  90D8               	bcf	status,0,c
   816  000240  320C               	rrcf	___awmod@divisor+1,f,c
   817  000242  320B               	rrcf	___awmod@divisor,f,c
   818  000244  2E0D               	decfsz	___awmod@counter,f,c
   819  000246  D7F1               	goto	i2l859
   820  000248                     i2l867:
   821  000248  500E               	movf	___awmod@sign,w,c
   822  00024A  B4D8               	btfsc	status,2,c
   823  00024C  D004               	goto	i2l871
   824  00024E  6C09               	negf	___awmod@dividend,c
   825  000250  1E0A               	comf	___awmod@dividend+1,f,c
   826  000252  B0D8               	btfsc	status,0,c
   827  000254  2A0A               	incf	___awmod@dividend+1,f,c
   828  000256                     i2l871:
   829  000256  C009  F009         	movff	___awmod@dividend,?___awmod
   830  00025A  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
   831  00025E  0012               	return	
   832  000260                     __end_of___awmod:
   833                           	opt stack 0
   834                           pclatu	equ	0xFFB
   835                           pclath	equ	0xFFA
   836                           tblptru	equ	0xFF8
   837                           tblptrh	equ	0xFF7
   838                           tblptrl	equ	0xFF6
   839                           tablat	equ	0xFF5
   840                           prodh	equ	0xFF4
   841                           prodl	equ	0xFF3
   842                           intcon	equ	0xFF2
   843                           postinc0	equ	0xFEE
   844                           fsr0h	equ	0xFEA
   845                           fsr0l	equ	0xFE9
   846                           wreg	equ	0xFE8
   847                           postdec1	equ	0xFE5
   848                           fsr1h	equ	0xFE2
   849                           fsr1l	equ	0xFE1
   850                           indf2	equ	0xFDF
   851                           fsr2h	equ	0xFDA
   852                           fsr2l	equ	0xFD9
   853                           status	equ	0xFD8
   854                           
   855 ;; *************** function ___awdiv *****************
   856 ;; Defined at:
   857 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/awdiv.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  dividend        2    0[COMRAM] int 
   860 ;;  divisor         2    2[COMRAM] int 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  quotient        2    6[COMRAM] int 
   863 ;;  sign            1    5[COMRAM] unsigned char 
   864 ;;  counter         1    4[COMRAM] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  2    0[COMRAM] int 
   867 ;; Registers used:
   868 ;;		wreg, status,2, status,0
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   874 ;;      Params:         4       0       0       0       0       0       0
   875 ;;      Locals:         4       0       0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0       0       0
   877 ;;      Totals:         8       0       0       0       0       0       0
   878 ;;Total ram usage:        8 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_isr
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text5
   888  00016C                     __ptext5:
   889                           	opt stack 0
   890  00016C                     ___awdiv:
   891                           	opt stack 27
   892                           
   893                           ;incstack = 0
   894  00016C  0E00               	movlw	0
   895  00016E  6E06               	movwf	___awdiv@sign,c
   896  000170  AE04               	btfss	___awdiv@divisor+1,7,c
   897  000172  D006               	goto	i2l803
   898  000174  6C03               	negf	___awdiv@divisor,c
   899  000176  1E04               	comf	___awdiv@divisor+1,f,c
   900  000178  B0D8               	btfsc	status,0,c
   901  00017A  2A04               	incf	___awdiv@divisor+1,f,c
   902  00017C  0E01               	movlw	1
   903  00017E  6E06               	movwf	___awdiv@sign,c
   904  000180                     i2l803:
   905  000180  AE02               	btfss	___awdiv@dividend+1,7,c
   906  000182  D006               	goto	i2l809
   907  000184  6C01               	negf	___awdiv@dividend,c
   908  000186  1E02               	comf	___awdiv@dividend+1,f,c
   909  000188  B0D8               	btfsc	status,0,c
   910  00018A  2A02               	incf	___awdiv@dividend+1,f,c
   911  00018C  0E01               	movlw	1
   912  00018E  1A06               	xorwf	___awdiv@sign,f,c
   913  000190                     i2l809:
   914  000190  0E00               	movlw	0
   915  000192  6E08               	movwf	___awdiv@quotient+1,c
   916  000194  0E00               	movlw	0
   917  000196  6E07               	movwf	___awdiv@quotient,c
   918  000198  5003               	movf	___awdiv@divisor,w,c
   919  00019A  1004               	iorwf	___awdiv@divisor+1,w,c
   920  00019C  B4D8               	btfsc	status,2,c
   921  00019E  D01C               	goto	i2l831
   922  0001A0  0E01               	movlw	1
   923  0001A2  6E05               	movwf	___awdiv@counter,c
   924  0001A4  D004               	goto	i2l817
   925  0001A6                     i2l815:
   926  0001A6  90D8               	bcf	status,0,c
   927  0001A8  3603               	rlcf	___awdiv@divisor,f,c
   928  0001AA  3604               	rlcf	___awdiv@divisor+1,f,c
   929  0001AC  2A05               	incf	___awdiv@counter,f,c
   930  0001AE                     i2l817:
   931  0001AE  AE04               	btfss	___awdiv@divisor+1,7,c
   932  0001B0  D7FA               	goto	i2l815
   933  0001B2                     i2l819:
   934  0001B2  90D8               	bcf	status,0,c
   935  0001B4  3607               	rlcf	___awdiv@quotient,f,c
   936  0001B6  3608               	rlcf	___awdiv@quotient+1,f,c
   937  0001B8  5003               	movf	___awdiv@divisor,w,c
   938  0001BA  5C01               	subwf	___awdiv@dividend,w,c
   939  0001BC  5004               	movf	___awdiv@divisor+1,w,c
   940  0001BE  5802               	subwfb	___awdiv@dividend+1,w,c
   941  0001C0  A0D8               	btfss	status,0,c
   942  0001C2  D005               	goto	i2l827
   943  0001C4  5003               	movf	___awdiv@divisor,w,c
   944  0001C6  5E01               	subwf	___awdiv@dividend,f,c
   945  0001C8  5004               	movf	___awdiv@divisor+1,w,c
   946  0001CA  5A02               	subwfb	___awdiv@dividend+1,f,c
   947  0001CC  8007               	bsf	___awdiv@quotient,0,c
   948  0001CE                     i2l827:
   949  0001CE  90D8               	bcf	status,0,c
   950  0001D0  3204               	rrcf	___awdiv@divisor+1,f,c
   951  0001D2  3203               	rrcf	___awdiv@divisor,f,c
   952  0001D4  2E05               	decfsz	___awdiv@counter,f,c
   953  0001D6  D7ED               	goto	i2l819
   954  0001D8                     i2l831:
   955  0001D8  5006               	movf	___awdiv@sign,w,c
   956  0001DA  B4D8               	btfsc	status,2,c
   957  0001DC  D004               	goto	i2l835
   958  0001DE  6C07               	negf	___awdiv@quotient,c
   959  0001E0  1E08               	comf	___awdiv@quotient+1,f,c
   960  0001E2  B0D8               	btfsc	status,0,c
   961  0001E4  2A08               	incf	___awdiv@quotient+1,f,c
   962  0001E6                     i2l835:
   963  0001E6  C007  F001         	movff	___awdiv@quotient,?___awdiv
   964  0001EA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   965  0001EE  0012               	return	
   966  0001F0                     __end_of___awdiv:
   967                           	opt stack 0
   968  0000                     pclatu	equ	0xFFB
   969                           pclath	equ	0xFFA
   970                           tblptru	equ	0xFF8
   971                           tblptrh	equ	0xFF7
   972                           tblptrl	equ	0xFF6
   973                           tablat	equ	0xFF5
   974                           prodh	equ	0xFF4
   975                           prodl	equ	0xFF3
   976                           intcon	equ	0xFF2
   977                           postinc0	equ	0xFEE
   978                           fsr0h	equ	0xFEA
   979                           fsr0l	equ	0xFE9
   980                           wreg	equ	0xFE8
   981                           postdec1	equ	0xFE5
   982                           fsr1h	equ	0xFE2
   983                           fsr1l	equ	0xFE1
   984                           indf2	equ	0xFDF
   985                           fsr2h	equ	0xFDA
   986                           fsr2l	equ	0xFD9
   987                           status	equ	0xFD8
   988                           pclatu	equ	0xFFB
   989                           pclath	equ	0xFFA
   990                           tblptru	equ	0xFF8
   991                           tblptrh	equ	0xFF7
   992                           tblptrl	equ	0xFF6
   993                           tablat	equ	0xFF5
   994                           prodh	equ	0xFF4
   995                           prodl	equ	0xFF3
   996                           intcon	equ	0xFF2
   997                           postinc0	equ	0xFEE
   998                           fsr0h	equ	0xFEA
   999                           fsr0l	equ	0xFE9
  1000                           wreg	equ	0xFE8
  1001                           postdec1	equ	0xFE5
  1002                           fsr1h	equ	0xFE2
  1003                           fsr1l	equ	0xFE1
  1004                           indf2	equ	0xFDF
  1005                           fsr2h	equ	0xFDA
  1006                           fsr2l	equ	0xFD9
  1007                           status	equ	0xFD8
  1008                           
  1009                           	psect	rparam
  1010  0000                     pclatu	equ	0xFFB
  1011                           pclath	equ	0xFFA
  1012                           tblptru	equ	0xFF8
  1013                           tblptrh	equ	0xFF7
  1014                           tblptrl	equ	0xFF6
  1015                           tablat	equ	0xFF5
  1016                           prodh	equ	0xFF4
  1017                           prodl	equ	0xFF3
  1018                           intcon	equ	0xFF2
  1019                           postinc0	equ	0xFEE
  1020                           fsr0h	equ	0xFEA
  1021                           fsr0l	equ	0xFE9
  1022                           wreg	equ	0xFE8
  1023                           postdec1	equ	0xFE5
  1024                           fsr1h	equ	0xFE2
  1025                           fsr1l	equ	0xFE1
  1026                           indf2	equ	0xFDF
  1027                           fsr2h	equ	0xFDA
  1028                           fsr2l	equ	0xFD9
  1029                           status	equ	0xFD8
  1030                           
  1031                           	psect	temp
  1032  000035                     btemp:
  1033                           	opt stack 0
  1034  000035                     	ds	1
  1035  0000                     int$flags	set	btemp
  1036                           pclatu	equ	0xFFB
  1037                           pclath	equ	0xFFA
  1038                           tblptru	equ	0xFF8
  1039                           tblptrh	equ	0xFF7
  1040                           tblptrl	equ	0xFF6
  1041                           tablat	equ	0xFF5
  1042                           prodh	equ	0xFF4
  1043                           prodl	equ	0xFF3
  1044                           intcon	equ	0xFF2
  1045                           postinc0	equ	0xFEE
  1046                           fsr0h	equ	0xFEA
  1047                           fsr0l	equ	0xFE9
  1048                           wreg	equ	0xFE8
  1049                           postdec1	equ	0xFE5
  1050                           fsr1h	equ	0xFE2
  1051                           fsr1l	equ	0xFE1
  1052                           indf2	equ	0xFDF
  1053                           fsr2h	equ	0xFDA
  1054                           fsr2l	equ	0xFD9
  1055                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      90
                                             28 COMRAM     6     6      0
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 14    14      0    1112
                                             14 COMRAM    14    14      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     554
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_timer0

 _isr (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      34       1       55.3%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34       3        0.0%
DATA                 0      0      34      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Jun  7 04:44:57 2023

           ___awdiv@sign 0006                      l753 0264                      l755 026C  
                    l773 02C2                      l765 02B0                      l759 027C  
                    _GIE 007F97                      u144 029C                      u145 0298  
                    _isr 0008                      _ssd 002D             ___awmod@sign 000E  
                    wreg 000FE8                     ?_isr 0001                     _PEIE 007F96  
                   i2l59 0130                     _TMR1 000FCE                     _data 0023  
                   _main 0260                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     btemp 0035  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 0016             ___param_bank 000010                    ??_isr 000F  
                  ?_main 0001          __end_of___awdiv 01F0          __end_of___awmod 0260  
        ___awdiv@divisor 0003             ?_init_config 0001                    i2l803 0180  
                  i2l815 01A6                    i2l831 01D8                    i2l817 01AE  
                  i2l809 0190                    i2l835 01E6                    i2l827 01CE  
                  i2l819 01B2                    i2l851 0210                    i2l871 0256  
                  i2l863 023E                    i2l855 021E                    i2l847 0204  
                  i2l857 0226                    i2l859 022A                    i2l867 0248  
                  i2l891 012E          ___awdiv@counter 0005                    _PORTA 000F80  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISD 000F95  
           ?_init_timer0 0001                    main@i 0021                    main@j 001F  
                  tablat 000FF5                    status 000FD8          __initialization 02C8  
           __end_of_main 02C8                   ??_main 001D            __activetblptr 000000  
       ___awdiv@dividend 0001                   _TMR1IE 007CE8                   _TMR1IF 007CF0  
                 _TMR1CS 007E69                   _TMR1ON 007E68                ??___awdiv 0005  
              ??___awmod 000D                   clear_0 02CE         ___awdiv@quotient 0007  
        ___awmod@divisor 000B          ___awmod@counter 000D             __pdataCOMRAM 0023  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 02F4            ___rparam_used 000001  
         __pcstackCOMRAM 0001     __size_of_init_config 0016     __size_of_init_timer0 001A  
                _T1OSCEN 007E6B                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 016C                  ___awmod 01F0                  __pcinit 02C8  
                __ramtop 0600                  __ptext0 0260                  __ptext1 0318  
                __ptext2 02FE                  __ptext4 01F0                  __ptext5 016C  
              _T1CONbits 000FCD             __size_of_isr 0164         ___awmod@dividend 0009  
         __pintcode_body 001A     end_of_initialization 02F4                  int_func 001A  
                postdec1 000FE5                  postinc0 000FEE            __pidataCOMRAM 032E  
    start_initialization 02C8              __end_of_isr 016C            ??_init_config 001D  
          ??_init_timer0 001D              __pbssCOMRAM 002D                __pintcode 0008  
               ?___awdiv 0001                 ?___awmod 0009      __end_of_init_config 032E  
    __end_of_init_timer0 0318                copy_data0 02E8                 __Hrparam 0000  
               __Lrparam 0000                isr@number 0033         __size_of___awdiv 0084  
       __size_of___awmod 0070              _init_config 0318              _init_timer0 02FE  
          __size_of_main 0068                 int$flags 0035                 isr@count 0031  
               intlevel2 0000  
