

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Jun  7 02:36:17 2023

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	idataCOMRAM
    22  000332                     __pidataCOMRAM:
    23                           	opt stack 0
    24                           
    25                           ;initializer for _data
    26  000332  E7                 	db	231
    27  000333  21                 	db	33
    28  000334  CB                 	db	203
    29  000335  6B                 	db	107
    30  000336  2D                 	db	45
    31  000337  6E                 	db	110
    32  000338  EE                 	db	238
    33  000339  23                 	db	35
    34  00033A  EF                 	db	239
    35  00033B  6F                 	db	111
    36  0000                     _TMR0	set	4054
    37  0000                     _PORTA	set	3968
    38  0000                     _PORTD	set	3971
    39  0000                     _TRISA	set	3986
    40  0000                     _TRISD	set	3989
    41  0000                     _GIE	set	32663
    42  0000                     _PEIE	set	32662
    43  0000                     _PSA	set	32427
    44  0000                     _T08BIT	set	32430
    45  0000                     _T0CS	set	32429
    46  0000                     _TMR0IE	set	32661
    47  0000                     _TMR0IF	set	32658
    48  0000                     _TMR0ON	set	32431
    49                           
    50                           ; #config settings
    51                           
    52                           	psect	cinit
    53  0002CC                     __pcinit:
    54                           	opt stack 0
    55  0002CC                     start_initialization:
    56                           	opt stack 0
    57  0002CC                     __initialization:
    58                           	opt stack 0
    59                           
    60                           ; Clear objects allocated to COMRAM (8 bytes)
    61  0002CC  EE00  F02D         	lfsr	0,__pbssCOMRAM
    62  0002D0  0E08               	movlw	8
    63  0002D2                     clear_0:
    64  0002D2  6AEE               	clrf	postinc0,c
    65  0002D4  06E8               	decf	wreg,f,c
    66  0002D6  E1FD               	bnz	clear_0
    67                           
    68                           ; Initialize objects allocated to COMRAM (10 bytes)
    69                           ; load TBLPTR registers with __pidataCOMRAM
    70  0002D8  0E32               	movlw	low __pidataCOMRAM
    71  0002DA  6EF6               	movwf	tblptrl,c
    72  0002DC  0E03               	movlw	high __pidataCOMRAM
    73  0002DE  6EF7               	movwf	tblptrh,c
    74  0002E0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    75  0002E2  6EF8               	movwf	tblptru,c
    76  0002E4  EE00  F023         	lfsr	0,__pdataCOMRAM
    77  0002E8  EE10 F00A          	lfsr	1,10
    78  0002EC                     copy_data0:
    79  0002EC  0009               	tblrd		*+
    80  0002EE  CFF5 FFEE          	movff	tablat,postinc0
    81  0002F2  50E5               	movf	postdec1,w,c
    82  0002F4  50E1               	movf	fsr1l,w,c
    83  0002F6  E1FA               	bnz	copy_data0
    84  0002F8                     end_of_initialization:
    85                           	opt stack 0
    86  0002F8                     __end_of__initialization:
    87                           	opt stack 0
    88  0002F8  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    89  0002FA  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    90  0002FC  0100               	movlb	0
    91  0002FE  EF32  F001         	goto	_main	;jump to C main() function
    92                           tblptru	equ	0xFF8
    93                           tblptrh	equ	0xFF7
    94                           tblptrl	equ	0xFF6
    95                           tablat	equ	0xFF5
    96                           postinc0	equ	0xFEE
    97                           wreg	equ	0xFE8
    98                           postdec1	equ	0xFE5
    99                           fsr1l	equ	0xFE1
   100                           
   101                           	psect	bssCOMRAM
   102  00002D                     __pbssCOMRAM:
   103                           	opt stack 0
   104  00002D                     _ssd:
   105                           	opt stack 0
   106  00002D                     	ds	4
   107  000031                     isr@count:
   108                           	opt stack 0
   109  000031                     	ds	2
   110  000033                     isr@number:
   111                           	opt stack 0
   112  000033                     	ds	2
   113                           tblptru	equ	0xFF8
   114                           tblptrh	equ	0xFF7
   115                           tblptrl	equ	0xFF6
   116                           tablat	equ	0xFF5
   117                           postinc0	equ	0xFEE
   118                           wreg	equ	0xFE8
   119                           postdec1	equ	0xFE5
   120                           fsr1l	equ	0xFE1
   121                           
   122                           	psect	dataCOMRAM
   123  000023                     __pdataCOMRAM:
   124                           	opt stack 0
   125  000023                     _data:
   126                           	opt stack 0
   127  000023                     	ds	10
   128                           tblptru	equ	0xFF8
   129                           tblptrh	equ	0xFF7
   130                           tblptrl	equ	0xFF6
   131                           tablat	equ	0xFF5
   132                           postinc0	equ	0xFEE
   133                           wreg	equ	0xFE8
   134                           postdec1	equ	0xFE5
   135                           fsr1l	equ	0xFE1
   136                           
   137                           	psect	cstackCOMRAM
   138  000001                     __pcstackCOMRAM:
   139                           	opt stack 0
   140  000001                     ?___awdiv:
   141                           	opt stack 0
   142  000001                     ___awdiv@dividend:
   143                           	opt stack 0
   144                           
   145                           ; 2 bytes @ 0x0
   146  000001                     	ds	2
   147  000003                     ___awdiv@divisor:
   148                           	opt stack 0
   149                           
   150                           ; 2 bytes @ 0x2
   151  000003                     	ds	2
   152  000005                     ___awdiv@counter:
   153                           	opt stack 0
   154                           
   155                           ; 1 bytes @ 0x4
   156  000005                     	ds	1
   157  000006                     ___awdiv@sign:
   158                           	opt stack 0
   159                           
   160                           ; 1 bytes @ 0x5
   161  000006                     	ds	1
   162  000007                     ___awdiv@quotient:
   163                           	opt stack 0
   164                           
   165                           ; 2 bytes @ 0x6
   166  000007                     	ds	2
   167  000009                     ?___awmod:
   168                           	opt stack 0
   169  000009                     ___awmod@dividend:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0x8
   173  000009                     	ds	2
   174  00000B                     ___awmod@divisor:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0xA
   178  00000B                     	ds	2
   179  00000D                     ___awmod@counter:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0xC
   183  00000D                     	ds	1
   184  00000E                     ___awmod@sign:
   185                           	opt stack 0
   186                           
   187                           ; 1 bytes @ 0xD
   188  00000E                     	ds	1
   189  00000F                     ??_isr:
   190                           
   191                           ; 1 bytes @ 0xE
   192  00000F                     	ds	14
   193  00001D                     ??_main:
   194                           
   195                           ; 1 bytes @ 0x1C
   196  00001D                     	ds	2
   197  00001F                     main@j:
   198                           	opt stack 0
   199                           
   200                           ; 2 bytes @ 0x1E
   201  00001F                     	ds	2
   202  000021                     main@i:
   203                           	opt stack 0
   204                           
   205                           ; 2 bytes @ 0x20
   206  000021                     	ds	2
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           tblptrl	equ	0xFF6
   210                           tablat	equ	0xFF5
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           postdec1	equ	0xFE5
   214                           fsr1l	equ	0xFE1
   215                           
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 16 in file "main.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;  j               2   30[COMRAM] unsigned int 
   226 ;;  i               2   32[COMRAM] int 
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   236 ;;      Params:         0       0       0       0       0       0       0
   237 ;;      Locals:         4       0       0       0       0       0       0
   238 ;;      Temps:          2       0       0       0       0       0       0
   239 ;;      Totals:         6       0       0       0       0       0       0
   240 ;;Total ram usage:        6 bytes
   241 ;; Hardware stack levels required when called:    4
   242 ;; This function calls:
   243 ;;		_init_config
   244 ;; This function is called by:
   245 ;;		Startup code after reset
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text0
   250  000264                     __ptext0:
   251                           	opt stack 0
   252  000264                     _main:
   253                           	opt stack 27
   254                           
   255                           ;main.c: 18: init_config();
   256                           
   257                           ;incstack = 0
   258  000264  EC8E  F001         	call	_init_config	;wreg free
   259  000268                     l751:
   260                           
   261                           ;main.c: 21: {
   262                           ;main.c: 23: for(int i=0;i < 4;i++)
   263  000268  0E00               	movlw	0
   264  00026A  6E22               	movwf	main@i+1,c
   265  00026C  0E00               	movlw	0
   266  00026E  6E21               	movwf	main@i,c
   267  000270                     l753:
   268  000270  BE22               	btfsc	main@i+1,7,c
   269  000272  D006               	goto	l757
   270  000274  5022               	movf	main@i+1,w,c
   271  000276  E1F8               	bnz	l751
   272  000278  0E04               	movlw	4
   273  00027A  5C21               	subwf	main@i,w,c
   274  00027C  B0D8               	btfsc	status,0,c
   275  00027E  D7F4               	goto	l751
   276  000280                     l757:
   277                           
   278                           ;main.c: 24: {
   279                           ;main.c: 25: PORTD=ssd[i];
   280  000280  0E2D               	movlw	low _ssd
   281  000282  2421               	addwf	main@i,w,c
   282  000284  6ED9               	movwf	fsr2l,c
   283  000286  0E00               	movlw	high _ssd
   284  000288  2022               	addwfc	main@i+1,w,c
   285  00028A  6EDA               	movwf	fsr2h,c
   286  00028C  50DF               	movf	indf2,w,c
   287  00028E  6E83               	movwf	3971,c	;volatile
   288                           
   289                           ;main.c: 26: PORTA=(PORTA & 0Xf0 ) | (1<<i);
   290  000290  C021  F01D         	movff	main@i,??_main
   291  000294  0E01               	movlw	1
   292  000296  6E1E               	movwf	(??_main+1)& (0+255),c
   293  000298  2A1D               	incf	??_main,f,c
   294  00029A  D002               	goto	u144
   295  00029C                     u145:
   296  00029C  90D8               	bcf	status,0,c
   297  00029E  361E               	rlcf	??_main+1,f,c
   298  0002A0                     u144:
   299  0002A0  2E1D               	decfsz	??_main,f,c
   300  0002A2  D7FC               	goto	u145
   301  0002A4  5080               	movf	3968,w,c	;volatile
   302  0002A6  0BF0               	andlw	240
   303  0002A8  101E               	iorwf	??_main+1,w,c
   304  0002AA  6E80               	movwf	3968,c	;volatile
   305                           
   306                           ;main.c: 27: for(unsigned int j =0;j<1000;j++);
   307  0002AC  0E00               	movlw	0
   308  0002AE  6E20               	movwf	main@j+1,c
   309  0002B0  0E00               	movlw	0
   310  0002B2  6E1F               	movwf	main@j,c
   311  0002B4                     l763:
   312  0002B4  0EE8               	movlw	232
   313  0002B6  5C1F               	subwf	main@j,w,c
   314  0002B8  0E03               	movlw	3
   315  0002BA  5820               	subwfb	main@j+1,w,c
   316  0002BC  B0D8               	btfsc	status,0,c
   317  0002BE  D003               	goto	l771
   318  0002C0  4A1F               	infsnz	main@j,f,c
   319  0002C2  2A20               	incf	main@j+1,f,c
   320  0002C4  D7F7               	goto	l763
   321  0002C6                     l771:
   322  0002C6  4A21               	infsnz	main@i,f,c
   323  0002C8  2A22               	incf	main@i+1,f,c
   324  0002CA  D7D2               	goto	l753
   325  0002CC                     __end_of_main:
   326                           	opt stack 0
   327                           tblptru	equ	0xFF8
   328                           tblptrh	equ	0xFF7
   329                           tblptrl	equ	0xFF6
   330                           tablat	equ	0xFF5
   331                           postinc0	equ	0xFEE
   332                           wreg	equ	0xFE8
   333                           postdec1	equ	0xFE5
   334                           fsr1l	equ	0xFE1
   335                           indf2	equ	0xFDF
   336                           fsr2h	equ	0xFDA
   337                           fsr2l	equ	0xFD9
   338                           status	equ	0xFD8
   339                           
   340 ;; *************** function _init_config *****************
   341 ;; Defined at:
   342 ;;		line 36 in file "main.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, status,2, status,0, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   356 ;;      Params:         0       0       0       0       0       0       0
   357 ;;      Locals:         0       0       0       0       0       0       0
   358 ;;      Temps:          0       0       0       0       0       0       0
   359 ;;      Totals:         0       0       0       0       0       0       0
   360 ;;Total ram usage:        0 bytes
   361 ;; Hardware stack levels used:    1
   362 ;; Hardware stack levels required when called:    3
   363 ;; This function calls:
   364 ;;		_init_timer0
   365 ;; This function is called by:
   366 ;;		_main
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text1
   371  00031C                     __ptext1:
   372                           	opt stack 0
   373  00031C                     _init_config:
   374                           	opt stack 27
   375                           
   376                           ;main.c: 38: TRISD=0X00;
   377                           
   378                           ;incstack = 0
   379  00031C  0E00               	movlw	0
   380  00031E  6E95               	movwf	3989,c	;volatile
   381                           
   382                           ;main.c: 39: TRISA=TRISA & 0XF0;
   383  000320  5092               	movf	3986,w,c	;volatile
   384  000322  0BF0               	andlw	240
   385  000324  6E92               	movwf	3986,c	;volatile
   386                           
   387                           ;main.c: 40: PORTA=PORTA & 0XF0;
   388  000326  5080               	movf	3968,w,c	;volatile
   389  000328  0BF0               	andlw	240
   390  00032A  6E80               	movwf	3968,c	;volatile
   391                           
   392                           ;main.c: 41: init_timer0();
   393  00032C  EC81  F001         	call	_init_timer0	;wreg free
   394  000330  0012               	return		;funcret
   395  000332                     __end_of_init_config:
   396                           	opt stack 0
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           postdec1	equ	0xFE5
   404                           fsr1l	equ	0xFE1
   405                           indf2	equ	0xFDF
   406                           fsr2h	equ	0xFDA
   407                           fsr2l	equ	0xFD9
   408                           status	equ	0xFD8
   409                           
   410 ;; *************** function _init_timer0 *****************
   411 ;; Defined at:
   412 ;;		line 44 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   426 ;;      Params:         0       0       0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels used:    1
   432 ;; Hardware stack levels required when called:    2
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		_init_config
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text2
   441  000302                     __ptext2:
   442                           	opt stack 0
   443  000302                     _init_timer0:
   444                           	opt stack 27
   445                           
   446                           ;main.c: 46: GIE=1;
   447                           
   448                           ;incstack = 0
   449  000302  8EF2               	bsf	intcon,7,c	;volatile
   450                           
   451                           ;main.c: 47: PEIE=1;
   452  000304  8CF2               	bsf	intcon,6,c	;volatile
   453                           
   454                           ;main.c: 48: TMR0IE=1;
   455  000306  8AF2               	bsf	intcon,5,c	;volatile
   456                           
   457                           ;main.c: 49: TMR0IF=0;
   458  000308  94F2               	bcf	intcon,2,c	;volatile
   459                           
   460                           ;main.c: 50: TMR0ON=1;
   461  00030A  8ED5               	bsf	4053,7,c	;volatile
   462                           
   463                           ;main.c: 51: T08BIT=1;
   464  00030C  8CD5               	bsf	4053,6,c	;volatile
   465                           
   466                           ;main.c: 52: T0CS=0;
   467  00030E  9AD5               	bcf	4053,5,c	;volatile
   468                           
   469                           ;main.c: 53: PSA=1;
   470  000310  86D5               	bsf	4053,3,c	;volatile
   471                           
   472                           ;main.c: 54: TMR0=6;
   473  000312  0E00               	movlw	0
   474  000314  6ED7               	movwf	4055,c	;volatile
   475  000316  0E06               	movlw	6
   476  000318  6ED6               	movwf	4054,c	;volatile
   477  00031A  0012               	return		;funcret
   478  00031C                     __end_of_init_timer0:
   479                           	opt stack 0
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           intcon	equ	0xFF2
   485                           postinc0	equ	0xFEE
   486                           wreg	equ	0xFE8
   487                           postdec1	equ	0xFE5
   488                           fsr1l	equ	0xFE1
   489                           indf2	equ	0xFDF
   490                           fsr2h	equ	0xFDA
   491                           fsr2l	equ	0xFD9
   492                           status	equ	0xFD8
   493                           
   494 ;; *************** function _isr *****************
   495 ;; Defined at:
   496 ;;		line 56 in file "main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   510 ;;      Params:         0       0       0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0       0       0
   512 ;;      Temps:         14       0       0       0       0       0       0
   513 ;;      Totals:        14       0       0       0       0       0       0
   514 ;;Total ram usage:       14 bytes
   515 ;; Hardware stack levels used:    1
   516 ;; Hardware stack levels required when called:    1
   517 ;; This function calls:
   518 ;;		___awdiv
   519 ;;		___awmod
   520 ;; This function is called by:
   521 ;;		Interrupt level 2
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	intcode
   526  000008                     __pintcode:
   527                           	opt stack 0
   528  000008                     _isr:
   529                           	opt stack 27
   530                           
   531                           ;incstack = 0
   532  000008  8235               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   533  00000A  CFFA F00F          	movff	pclath,??_isr
   534  00000E  CFFB F010          	movff	pclatu,??_isr+1
   535  000012  ED0D  F000         	call	int_func,f	;refresh shadow registers
   536                           pclatu	equ	0xFFB
   537                           pclath	equ	0xFFA
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           intcon	equ	0xFF2
   543                           postinc0	equ	0xFEE
   544                           wreg	equ	0xFE8
   545                           postdec1	equ	0xFE5
   546                           fsr1l	equ	0xFE1
   547                           indf2	equ	0xFDF
   548                           fsr2h	equ	0xFDA
   549                           fsr2l	equ	0xFD9
   550                           status	equ	0xFD8
   551                           
   552                           	psect	intcode_body
   553  00001A                     __pintcode_body:
   554                           	opt stack 27
   555  00001A                     int_func:
   556                           	opt stack 27
   557  00001A  0006               	pop		; remove dummy address from shadow register refresh
   558  00001C  CFE9 F011          	movff	fsr0l,??_isr+2
   559  000020  CFEA F012          	movff	fsr0h,??_isr+3
   560  000024  CFE1 F013          	movff	fsr1l,??_isr+4
   561  000028  CFE2 F014          	movff	fsr1h,??_isr+5
   562  00002C  CFD9 F015          	movff	fsr2l,??_isr+6
   563  000030  CFDA F016          	movff	fsr2h,??_isr+7
   564  000034  CFF3 F017          	movff	prodl,??_isr+8
   565  000038  CFF4 F018          	movff	prodh,??_isr+9
   566  00003C  CFF6 F019          	movff	tblptrl,??_isr+10
   567  000040  CFF7 F01A          	movff	tblptrh,??_isr+11
   568  000044  CFF8 F01B          	movff	tblptru,??_isr+12
   569  000048  CFF5 F01C          	movff	tablat,??_isr+13
   570                           
   571                           ;main.c: 60: static int count;
   572                           ;main.c: 61: static int number;
   573                           ;main.c: 62: if(TMR0IF)
   574  00004C  A4F2               	btfss	intcon,2,c	;volatile
   575  00004E  D072               	goto	i2l59
   576                           
   577                           ;main.c: 63: {
   578                           ;main.c: 64: TMR0=TMR0 +8;
   579  000050  0E08               	movlw	8
   580  000052  24D6               	addwf	4054,w,c	;volatile
   581  000054  6ED6               	movwf	4054,c	;volatile
   582  000056  0E00               	movlw	0
   583  000058  20D7               	addwfc	4055,w,c	;volatile
   584  00005A  6ED7               	movwf	4055,c	;volatile
   585                           
   586                           ;main.c: 65: if(count++ == 20000)
   587  00005C  4A31               	infsnz	isr@count,f,c
   588  00005E  2A32               	incf	isr@count+1,f,c
   589  000060  0E21               	movlw	33
   590  000062  1831               	xorwf	isr@count,w,c
   591  000064  E166               	bnz	i2l889
   592  000066  0E4E               	movlw	78
   593  000068  1832               	xorwf	isr@count+1,w,c
   594  00006A  A4D8               	btfss	status,2,c
   595  00006C  D062               	goto	i2l889
   596                           
   597                           ;main.c: 66: {
   598                           ;main.c: 67: number++;
   599  00006E  4A33               	infsnz	isr@number,f,c
   600  000070  2A34               	incf	isr@number+1,f,c
   601                           
   602                           ;main.c: 68: count=0;
   603  000072  0E00               	movlw	0
   604  000074  6E32               	movwf	isr@count+1,c
   605  000076  0E00               	movlw	0
   606  000078  6E31               	movwf	isr@count,c
   607                           
   608                           ;main.c: 69: ssd[3]=data[number % 10];
   609  00007A  C033  F009         	movff	isr@number,___awmod@dividend
   610  00007E  C034  F00A         	movff	isr@number+1,___awmod@dividend+1
   611  000082  0E00               	movlw	0
   612  000084  6E0C               	movwf	___awmod@divisor+1,c
   613  000086  0E0A               	movlw	10
   614  000088  6E0B               	movwf	___awmod@divisor,c
   615  00008A  ECFA  F000         	call	___awmod	;wreg free
   616  00008E  0E23               	movlw	low _data
   617  000090  2409               	addwf	?___awmod,w,c
   618  000092  6ED9               	movwf	fsr2l,c
   619  000094  0E00               	movlw	high _data
   620  000096  200A               	addwfc	?___awmod+1,w,c
   621  000098  6EDA               	movwf	fsr2h,c
   622  00009A  50DF               	movf	indf2,w,c
   623  00009C  6E30               	movwf	_ssd+3,c
   624                           
   625                           ;main.c: 70: ssd[2]=data[(number / 10)%10];
   626  00009E  0E00               	movlw	0
   627  0000A0  6E04               	movwf	___awdiv@divisor+1,c
   628  0000A2  0E0A               	movlw	10
   629  0000A4  6E03               	movwf	___awdiv@divisor,c
   630  0000A6  C033  F001         	movff	isr@number,___awdiv@dividend
   631  0000AA  C034  F002         	movff	isr@number+1,___awdiv@dividend+1
   632  0000AE  ECB8  F000         	call	___awdiv	;wreg free
   633  0000B2  C001  F009         	movff	?___awdiv,___awmod@dividend
   634  0000B6  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   635  0000BA  0E00               	movlw	0
   636  0000BC  6E0C               	movwf	___awmod@divisor+1,c
   637  0000BE  0E0A               	movlw	10
   638  0000C0  6E0B               	movwf	___awmod@divisor,c
   639  0000C2  ECFA  F000         	call	___awmod	;wreg free
   640  0000C6  0E23               	movlw	low _data
   641  0000C8  2409               	addwf	?___awmod,w,c
   642  0000CA  6ED9               	movwf	fsr2l,c
   643  0000CC  0E00               	movlw	high _data
   644  0000CE  200A               	addwfc	?___awmod+1,w,c
   645  0000D0  6EDA               	movwf	fsr2h,c
   646  0000D2  50DF               	movf	indf2,w,c
   647  0000D4  6E2F               	movwf	_ssd+2,c
   648                           
   649                           ;main.c: 71: ssd[1]=data[(number /100)%10];
   650  0000D6  0E00               	movlw	0
   651  0000D8  6E04               	movwf	___awdiv@divisor+1,c
   652  0000DA  0E64               	movlw	100
   653  0000DC  6E03               	movwf	___awdiv@divisor,c
   654  0000DE  C033  F001         	movff	isr@number,___awdiv@dividend
   655  0000E2  C034  F002         	movff	isr@number+1,___awdiv@dividend+1
   656  0000E6  ECB8  F000         	call	___awdiv	;wreg free
   657  0000EA  C001  F009         	movff	?___awdiv,___awmod@dividend
   658  0000EE  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   659  0000F2  0E00               	movlw	0
   660  0000F4  6E0C               	movwf	___awmod@divisor+1,c
   661  0000F6  0E0A               	movlw	10
   662  0000F8  6E0B               	movwf	___awmod@divisor,c
   663  0000FA  ECFA  F000         	call	___awmod	;wreg free
   664  0000FE  0E23               	movlw	low _data
   665  000100  2409               	addwf	?___awmod,w,c
   666  000102  6ED9               	movwf	fsr2l,c
   667  000104  0E00               	movlw	high _data
   668  000106  200A               	addwfc	?___awmod+1,w,c
   669  000108  6EDA               	movwf	fsr2h,c
   670  00010A  50DF               	movf	indf2,w,c
   671  00010C  6E2E               	movwf	_ssd+1,c
   672                           
   673                           ;main.c: 72: ssd[0]=data[(number/1000)];
   674  00010E  C033  F001         	movff	isr@number,___awdiv@dividend
   675  000112  C034  F002         	movff	isr@number+1,___awdiv@dividend+1
   676  000116  0E03               	movlw	3
   677  000118  6E04               	movwf	___awdiv@divisor+1,c
   678  00011A  0EE8               	movlw	232
   679  00011C  6E03               	movwf	___awdiv@divisor,c
   680  00011E  ECB8  F000         	call	___awdiv	;wreg free
   681  000122  0E23               	movlw	low _data
   682  000124  2401               	addwf	?___awdiv,w,c
   683  000126  6ED9               	movwf	fsr2l,c
   684  000128  0E00               	movlw	high _data
   685  00012A  2002               	addwfc	?___awdiv+1,w,c
   686  00012C  6EDA               	movwf	fsr2h,c
   687  00012E  50DF               	movf	indf2,w,c
   688  000130  6E2D               	movwf	_ssd,c
   689  000132                     i2l889:
   690                           
   691                           ;main.c: 77: }
   692                           ;main.c: 78: TMR0IF=0;
   693  000132  94F2               	bcf	intcon,2,c	;volatile
   694  000134                     i2l59:
   695  000134  C01C  FFF5         	movff	??_isr+13,tablat
   696  000138  C01B  FFF8         	movff	??_isr+12,tblptru
   697  00013C  C01A  FFF7         	movff	??_isr+11,tblptrh
   698  000140  C019  FFF6         	movff	??_isr+10,tblptrl
   699  000144  C018  FFF4         	movff	??_isr+9,prodh
   700  000148  C017  FFF3         	movff	??_isr+8,prodl
   701  00014C  C016  FFDA         	movff	??_isr+7,fsr2h
   702  000150  C015  FFD9         	movff	??_isr+6,fsr2l
   703  000154  C014  FFE2         	movff	??_isr+5,fsr1h
   704  000158  C013  FFE1         	movff	??_isr+4,fsr1l
   705  00015C  C012  FFEA         	movff	??_isr+3,fsr0h
   706  000160  C011  FFE9         	movff	??_isr+2,fsr0l
   707  000164  C010  FFFB         	movff	??_isr+1,pclatu
   708  000168  C00F  FFFA         	movff	??_isr,pclath
   709  00016C  9235               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   710  00016E  0011               	retfie		f
   711  000170                     __end_of_isr:
   712                           	opt stack 0
   713                           pclatu	equ	0xFFB
   714                           pclath	equ	0xFFA
   715                           tblptru	equ	0xFF8
   716                           tblptrh	equ	0xFF7
   717                           tblptrl	equ	0xFF6
   718                           tablat	equ	0xFF5
   719                           prodh	equ	0xFF4
   720                           prodl	equ	0xFF3
   721                           intcon	equ	0xFF2
   722                           postinc0	equ	0xFEE
   723                           fsr0h	equ	0xFEA
   724                           fsr0l	equ	0xFE9
   725                           wreg	equ	0xFE8
   726                           postdec1	equ	0xFE5
   727                           fsr1h	equ	0xFE2
   728                           fsr1l	equ	0xFE1
   729                           indf2	equ	0xFDF
   730                           fsr2h	equ	0xFDA
   731                           fsr2l	equ	0xFD9
   732                           status	equ	0xFD8
   733                           
   734 ;; *************** function ___awmod *****************
   735 ;; Defined at:
   736 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/awmod.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;  dividend        2    8[COMRAM] int 
   739 ;;  divisor         2   10[COMRAM] int 
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  sign            1   13[COMRAM] unsigned char 
   742 ;;  counter         1   12[COMRAM] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  2    8[COMRAM] int 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   752 ;;      Params:         4       0       0       0       0       0       0
   753 ;;      Locals:         2       0       0       0       0       0       0
   754 ;;      Temps:          0       0       0       0       0       0       0
   755 ;;      Totals:         6       0       0       0       0       0       0
   756 ;;Total ram usage:        6 bytes
   757 ;; Hardware stack levels used:    1
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_isr
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text4
   766  0001F4                     __ptext4:
   767                           	opt stack 0
   768  0001F4                     ___awmod:
   769                           	opt stack 27
   770                           
   771                           ;incstack = 0
   772  0001F4  0E00               	movlw	0
   773  0001F6  6E0E               	movwf	___awmod@sign,c
   774  0001F8  AE0A               	btfss	___awmod@dividend+1,7,c
   775  0001FA  D006               	goto	i2l845
   776  0001FC  6C09               	negf	___awmod@dividend,c
   777  0001FE  1E0A               	comf	___awmod@dividend+1,f,c
   778  000200  B0D8               	btfsc	status,0,c
   779  000202  2A0A               	incf	___awmod@dividend+1,f,c
   780  000204  0E01               	movlw	1
   781  000206  6E0E               	movwf	___awmod@sign,c
   782  000208                     i2l845:
   783  000208  AE0C               	btfss	___awmod@divisor+1,7,c
   784  00020A  D004               	goto	i2l849
   785  00020C  6C0B               	negf	___awmod@divisor,c
   786  00020E  1E0C               	comf	___awmod@divisor+1,f,c
   787  000210  B0D8               	btfsc	status,0,c
   788  000212  2A0C               	incf	___awmod@divisor+1,f,c
   789  000214                     i2l849:
   790  000214  500B               	movf	___awmod@divisor,w,c
   791  000216  100C               	iorwf	___awmod@divisor+1,w,c
   792  000218  B4D8               	btfsc	status,2,c
   793  00021A  D018               	goto	i2l865
   794  00021C  0E01               	movlw	1
   795  00021E  6E0D               	movwf	___awmod@counter,c
   796  000220  D004               	goto	i2l855
   797  000222                     i2l853:
   798  000222  90D8               	bcf	status,0,c
   799  000224  360B               	rlcf	___awmod@divisor,f,c
   800  000226  360C               	rlcf	___awmod@divisor+1,f,c
   801  000228  2A0D               	incf	___awmod@counter,f,c
   802  00022A                     i2l855:
   803  00022A  AE0C               	btfss	___awmod@divisor+1,7,c
   804  00022C  D7FA               	goto	i2l853
   805  00022E                     i2l857:
   806  00022E  500B               	movf	___awmod@divisor,w,c
   807  000230  5C09               	subwf	___awmod@dividend,w,c
   808  000232  500C               	movf	___awmod@divisor+1,w,c
   809  000234  580A               	subwfb	___awmod@dividend+1,w,c
   810  000236  A0D8               	btfss	status,0,c
   811  000238  D004               	goto	i2l861
   812  00023A  500B               	movf	___awmod@divisor,w,c
   813  00023C  5E09               	subwf	___awmod@dividend,f,c
   814  00023E  500C               	movf	___awmod@divisor+1,w,c
   815  000240  5A0A               	subwfb	___awmod@dividend+1,f,c
   816  000242                     i2l861:
   817  000242  90D8               	bcf	status,0,c
   818  000244  320C               	rrcf	___awmod@divisor+1,f,c
   819  000246  320B               	rrcf	___awmod@divisor,f,c
   820  000248  2E0D               	decfsz	___awmod@counter,f,c
   821  00024A  D7F1               	goto	i2l857
   822  00024C                     i2l865:
   823  00024C  500E               	movf	___awmod@sign,w,c
   824  00024E  B4D8               	btfsc	status,2,c
   825  000250  D004               	goto	i2l869
   826  000252  6C09               	negf	___awmod@dividend,c
   827  000254  1E0A               	comf	___awmod@dividend+1,f,c
   828  000256  B0D8               	btfsc	status,0,c
   829  000258  2A0A               	incf	___awmod@dividend+1,f,c
   830  00025A                     i2l869:
   831  00025A  C009  F009         	movff	___awmod@dividend,?___awmod
   832  00025E  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
   833  000262  0012               	return	
   834  000264                     __end_of___awmod:
   835                           	opt stack 0
   836                           pclatu	equ	0xFFB
   837                           pclath	equ	0xFFA
   838                           tblptru	equ	0xFF8
   839                           tblptrh	equ	0xFF7
   840                           tblptrl	equ	0xFF6
   841                           tablat	equ	0xFF5
   842                           prodh	equ	0xFF4
   843                           prodl	equ	0xFF3
   844                           intcon	equ	0xFF2
   845                           postinc0	equ	0xFEE
   846                           fsr0h	equ	0xFEA
   847                           fsr0l	equ	0xFE9
   848                           wreg	equ	0xFE8
   849                           postdec1	equ	0xFE5
   850                           fsr1h	equ	0xFE2
   851                           fsr1l	equ	0xFE1
   852                           indf2	equ	0xFDF
   853                           fsr2h	equ	0xFDA
   854                           fsr2l	equ	0xFD9
   855                           status	equ	0xFD8
   856                           
   857 ;; *************** function ___awdiv *****************
   858 ;; Defined at:
   859 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/awdiv.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  dividend        2    0[COMRAM] int 
   862 ;;  divisor         2    2[COMRAM] int 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  quotient        2    6[COMRAM] int 
   865 ;;  sign            1    5[COMRAM] unsigned char 
   866 ;;  counter         1    4[COMRAM] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  2    0[COMRAM] int 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   876 ;;      Params:         4       0       0       0       0       0       0
   877 ;;      Locals:         4       0       0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0
   879 ;;      Totals:         8       0       0       0       0       0       0
   880 ;;Total ram usage:        8 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_isr
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text5
   890  000170                     __ptext5:
   891                           	opt stack 0
   892  000170                     ___awdiv:
   893                           	opt stack 27
   894                           
   895                           ;incstack = 0
   896  000170  0E00               	movlw	0
   897  000172  6E06               	movwf	___awdiv@sign,c
   898  000174  AE04               	btfss	___awdiv@divisor+1,7,c
   899  000176  D006               	goto	i2l801
   900  000178  6C03               	negf	___awdiv@divisor,c
   901  00017A  1E04               	comf	___awdiv@divisor+1,f,c
   902  00017C  B0D8               	btfsc	status,0,c
   903  00017E  2A04               	incf	___awdiv@divisor+1,f,c
   904  000180  0E01               	movlw	1
   905  000182  6E06               	movwf	___awdiv@sign,c
   906  000184                     i2l801:
   907  000184  AE02               	btfss	___awdiv@dividend+1,7,c
   908  000186  D006               	goto	i2l807
   909  000188  6C01               	negf	___awdiv@dividend,c
   910  00018A  1E02               	comf	___awdiv@dividend+1,f,c
   911  00018C  B0D8               	btfsc	status,0,c
   912  00018E  2A02               	incf	___awdiv@dividend+1,f,c
   913  000190  0E01               	movlw	1
   914  000192  1A06               	xorwf	___awdiv@sign,f,c
   915  000194                     i2l807:
   916  000194  0E00               	movlw	0
   917  000196  6E08               	movwf	___awdiv@quotient+1,c
   918  000198  0E00               	movlw	0
   919  00019A  6E07               	movwf	___awdiv@quotient,c
   920  00019C  5003               	movf	___awdiv@divisor,w,c
   921  00019E  1004               	iorwf	___awdiv@divisor+1,w,c
   922  0001A0  B4D8               	btfsc	status,2,c
   923  0001A2  D01C               	goto	i2l829
   924  0001A4  0E01               	movlw	1
   925  0001A6  6E05               	movwf	___awdiv@counter,c
   926  0001A8  D004               	goto	i2l815
   927  0001AA                     i2l813:
   928  0001AA  90D8               	bcf	status,0,c
   929  0001AC  3603               	rlcf	___awdiv@divisor,f,c
   930  0001AE  3604               	rlcf	___awdiv@divisor+1,f,c
   931  0001B0  2A05               	incf	___awdiv@counter,f,c
   932  0001B2                     i2l815:
   933  0001B2  AE04               	btfss	___awdiv@divisor+1,7,c
   934  0001B4  D7FA               	goto	i2l813
   935  0001B6                     i2l817:
   936  0001B6  90D8               	bcf	status,0,c
   937  0001B8  3607               	rlcf	___awdiv@quotient,f,c
   938  0001BA  3608               	rlcf	___awdiv@quotient+1,f,c
   939  0001BC  5003               	movf	___awdiv@divisor,w,c
   940  0001BE  5C01               	subwf	___awdiv@dividend,w,c
   941  0001C0  5004               	movf	___awdiv@divisor+1,w,c
   942  0001C2  5802               	subwfb	___awdiv@dividend+1,w,c
   943  0001C4  A0D8               	btfss	status,0,c
   944  0001C6  D005               	goto	i2l825
   945  0001C8  5003               	movf	___awdiv@divisor,w,c
   946  0001CA  5E01               	subwf	___awdiv@dividend,f,c
   947  0001CC  5004               	movf	___awdiv@divisor+1,w,c
   948  0001CE  5A02               	subwfb	___awdiv@dividend+1,f,c
   949  0001D0  8007               	bsf	___awdiv@quotient,0,c
   950  0001D2                     i2l825:
   951  0001D2  90D8               	bcf	status,0,c
   952  0001D4  3204               	rrcf	___awdiv@divisor+1,f,c
   953  0001D6  3203               	rrcf	___awdiv@divisor,f,c
   954  0001D8  2E05               	decfsz	___awdiv@counter,f,c
   955  0001DA  D7ED               	goto	i2l817
   956  0001DC                     i2l829:
   957  0001DC  5006               	movf	___awdiv@sign,w,c
   958  0001DE  B4D8               	btfsc	status,2,c
   959  0001E0  D004               	goto	i2l833
   960  0001E2  6C07               	negf	___awdiv@quotient,c
   961  0001E4  1E08               	comf	___awdiv@quotient+1,f,c
   962  0001E6  B0D8               	btfsc	status,0,c
   963  0001E8  2A08               	incf	___awdiv@quotient+1,f,c
   964  0001EA                     i2l833:
   965  0001EA  C007  F001         	movff	___awdiv@quotient,?___awdiv
   966  0001EE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   967  0001F2  0012               	return	
   968  0001F4                     __end_of___awdiv:
   969                           	opt stack 0
   970  0000                     pclatu	equ	0xFFB
   971                           pclath	equ	0xFFA
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           prodh	equ	0xFF4
   977                           prodl	equ	0xFF3
   978                           intcon	equ	0xFF2
   979                           postinc0	equ	0xFEE
   980                           fsr0h	equ	0xFEA
   981                           fsr0l	equ	0xFE9
   982                           wreg	equ	0xFE8
   983                           postdec1	equ	0xFE5
   984                           fsr1h	equ	0xFE2
   985                           fsr1l	equ	0xFE1
   986                           indf2	equ	0xFDF
   987                           fsr2h	equ	0xFDA
   988                           fsr2l	equ	0xFD9
   989                           status	equ	0xFD8
   990                           pclatu	equ	0xFFB
   991                           pclath	equ	0xFFA
   992                           tblptru	equ	0xFF8
   993                           tblptrh	equ	0xFF7
   994                           tblptrl	equ	0xFF6
   995                           tablat	equ	0xFF5
   996                           prodh	equ	0xFF4
   997                           prodl	equ	0xFF3
   998                           intcon	equ	0xFF2
   999                           postinc0	equ	0xFEE
  1000                           fsr0h	equ	0xFEA
  1001                           fsr0l	equ	0xFE9
  1002                           wreg	equ	0xFE8
  1003                           postdec1	equ	0xFE5
  1004                           fsr1h	equ	0xFE2
  1005                           fsr1l	equ	0xFE1
  1006                           indf2	equ	0xFDF
  1007                           fsr2h	equ	0xFDA
  1008                           fsr2l	equ	0xFD9
  1009                           status	equ	0xFD8
  1010                           
  1011                           	psect	rparam
  1012  0000                     pclatu	equ	0xFFB
  1013                           pclath	equ	0xFFA
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           prodh	equ	0xFF4
  1019                           prodl	equ	0xFF3
  1020                           intcon	equ	0xFF2
  1021                           postinc0	equ	0xFEE
  1022                           fsr0h	equ	0xFEA
  1023                           fsr0l	equ	0xFE9
  1024                           wreg	equ	0xFE8
  1025                           postdec1	equ	0xFE5
  1026                           fsr1h	equ	0xFE2
  1027                           fsr1l	equ	0xFE1
  1028                           indf2	equ	0xFDF
  1029                           fsr2h	equ	0xFDA
  1030                           fsr2l	equ	0xFD9
  1031                           status	equ	0xFD8
  1032                           
  1033                           	psect	temp
  1034  000035                     btemp:
  1035                           	opt stack 0
  1036  000035                     	ds	1
  1037  0000                     int$flags	set	btemp
  1038                           pclatu	equ	0xFFB
  1039                           pclath	equ	0xFFA
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           prodh	equ	0xFF4
  1045                           prodl	equ	0xFF3
  1046                           intcon	equ	0xFF2
  1047                           postinc0	equ	0xFEE
  1048                           fsr0h	equ	0xFEA
  1049                           fsr0l	equ	0xFE9
  1050                           wreg	equ	0xFE8
  1051                           postdec1	equ	0xFE5
  1052                           fsr1h	equ	0xFE2
  1053                           fsr1l	equ	0xFE1
  1054                           indf2	equ	0xFDF
  1055                           fsr2h	equ	0xFDA
  1056                           fsr2l	equ	0xFD9
  1057                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      90
                                             28 COMRAM     6     6      0
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 14    14      0    1112
                                             14 COMRAM    14    14      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     554
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_timer0

 _isr (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      34       1       55.3%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34       3        0.0%
DATA                 0      0      34      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Jun  7 02:36:17 2023

           ___awdiv@sign 0006                      l751 0268                      l753 0270  
                    l771 02C6                      l763 02B4                      l757 0280  
                    _GIE 007F97                      u144 02A0                      u145 029C  
                    _PSA 007EAB                      _isr 0008                      _ssd 002D  
           ___awmod@sign 000E                      wreg 000FE8                     ?_isr 0001  
                   _T0CS 007EAD                     _PEIE 007F96                     i2l59 0134  
                   _TMR0 000FD6                     _data 0023                     _main 0264  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     btemp 0035                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 0016  
           ___param_bank 000010                    ??_isr 000F                    ?_main 0001  
        __end_of___awdiv 01F4          __end_of___awmod 0264          ___awdiv@divisor 0003  
           ?_init_config 0001                    i2l801 0184                    i2l813 01AA  
                  i2l815 01B2                    i2l807 0194                    i2l833 01EA  
                  i2l825 01D2                    i2l817 01B6                    i2l829 01DC  
                  i2l861 0242                    i2l853 0222                    i2l845 0208  
                  i2l855 022A                    i2l857 022E                    i2l865 024C  
                  i2l849 0214          ___awdiv@counter 0005                    i2l869 025A  
                  i2l889 0132                    _PORTA 000F80                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISD 000F95             ?_init_timer0 0001  
                  main@i 0021                    main@j 001F                    tablat 000FF5  
                  status 000FD8          __initialization 02CC             __end_of_main 02CC  
                 ??_main 001D            __activetblptr 000000                   _T08BIT 007EAE  
       ___awdiv@dividend 0001                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 _TMR0ON 007EAF                ??___awdiv 0005                ??___awmod 000D  
                 clear_0 02D2         ___awdiv@quotient 0007          ___awmod@divisor 000B  
        ___awmod@counter 000D             __pdataCOMRAM 0023                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 02F8            ___rparam_used 000001           __pcstackCOMRAM 0001  
   __size_of_init_config 0016     __size_of_init_timer0 001A                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 0170                  ___awmod 01F4  
                __pcinit 02CC                  __ramtop 0600                  __ptext0 0264  
                __ptext1 031C                  __ptext2 0302                  __ptext4 01F4  
                __ptext5 0170             __size_of_isr 0168         ___awmod@dividend 0009  
         __pintcode_body 001A     end_of_initialization 02F8                  int_func 001A  
                postdec1 000FE5                  postinc0 000FEE            __pidataCOMRAM 0332  
    start_initialization 02CC              __end_of_isr 0170            ??_init_config 001D  
          ??_init_timer0 001D              __pbssCOMRAM 002D                __pintcode 0008  
               ?___awdiv 0001                 ?___awmod 0009      __end_of_init_config 0332  
    __end_of_init_timer0 031C                copy_data0 02EC                 __Hrparam 0000  
               __Lrparam 0000                isr@number 0033         __size_of___awdiv 0084  
       __size_of___awmod 0070              _init_config 031C              _init_timer0 0302  
          __size_of_main 0068                 int$flags 0035                 isr@count 0031  
               intlevel2 0000  
