

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue Jun  6 06:36:19 2023

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     _PORTA	set	3968
    17  0000                     _PORTD	set	3971
    18  0000                     _TRISA	set	3986
    19  0000                     _TRISD	set	3989
    20  0000                     _GIE	set	32663
    21  0000                     _INT0IE	set	32660
    22  0000                     _INT0IF	set	32657
    23  0000                     _INTEDG0	set	32654
    24  0000                     _PEIE	set	32662
    25  0000                     _RB1	set	31753
    26  0000                     _TRISB0	set	31896
    27  0000                     _TRISB1	set	31897
    28                           
    29                           ; #config settings
    30                           
    31                           	psect	cinit
    32  000180                     __pcinit:
    33                           	opt stack 0
    34  000180                     start_initialization:
    35                           	opt stack 0
    36  000180                     __initialization:
    37                           	opt stack 0
    38  000180                     end_of_initialization:
    39                           	opt stack 0
    40  000180                     __end_of__initialization:
    41                           	opt stack 0
    42  000180  901E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    43  000182  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    44  000184  0100               	movlb	0
    45  000186  EF7B  F000         	goto	_main	;jump to C main() function
    46                           
    47                           	psect	cstackCOMRAM
    48  000001                     __pcstackCOMRAM:
    49                           	opt stack 0
    50  000001                     ??_isr:
    51                           
    52                           ; 1 bytes @ 0x0
    53  000001                     	ds	14
    54  00000F                     display@ssd:
    55                           	opt stack 0
    56                           
    57                           ; 2 bytes @ 0xE
    58  00000F                     	ds	2
    59  000011                     ??_display:
    60                           
    61                           ; 1 bytes @ 0x10
    62  000011                     	ds	2
    63  000013                     display@j:
    64                           	opt stack 0
    65                           
    66                           ; 2 bytes @ 0x12
    67  000013                     	ds	2
    68  000015                     display@i:
    69                           	opt stack 0
    70                           
    71                           ; 2 bytes @ 0x14
    72  000015                     	ds	2
    73  000017                     main@ssd:
    74                           	opt stack 0
    75                           
    76                           ; 4 bytes @ 0x16
    77  000017                     	ds	4
    78  00001B                     main@delay:
    79                           	opt stack 0
    80                           
    81                           ; 2 bytes @ 0x1A
    82  00001B                     	ds	2
    83  00001D                     main@count:
    84                           	opt stack 0
    85                           
    86                           ; 1 bytes @ 0x1C
    87  00001D                     	ds	1
    88                           
    89 ;;
    90 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    91 ;;
    92 ;; *************** function _main *****************
    93 ;; Defined at:
    94 ;;		line 13 in file "main.c"
    95 ;; Parameters:    Size  Location     Type
    96 ;;		None
    97 ;; Auto vars:     Size  Location     Type
    98 ;;  ssd             4   22[COMRAM] unsigned char [4]
    99 ;;  delay           2   26[COMRAM] unsigned int 
   100 ;;  count           1   28[COMRAM] unsigned char 
   101 ;; Return value:  Size  Location     Type
   102 ;;                  1    wreg      void 
   103 ;; Registers used:
   104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   105 ;; Tracked objects:
   106 ;;		On entry : 0/0
   107 ;;		On exit  : 0/0
   108 ;;		Unchanged: 0/0
   109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   110 ;;      Params:         0       0       0       0       0       0       0
   111 ;;      Locals:         7       0       0       0       0       0       0
   112 ;;      Temps:          0       0       0       0       0       0       0
   113 ;;      Totals:         7       0       0       0       0       0       0
   114 ;;Total ram usage:        7 bytes
   115 ;; Hardware stack levels required when called:    3
   116 ;; This function calls:
   117 ;;		_display
   118 ;;		_init_config
   119 ;; This function is called by:
   120 ;;		Startup code after reset
   121 ;; This function uses a non-reentrant model
   122 ;;
   123                           
   124                           	psect	text0
   125  0000F6                     __ptext0:
   126                           	opt stack 0
   127  0000F6                     _main:
   128                           	opt stack 28
   129                           
   130                           ;main.c: 15: init_config();
   131                           
   132                           ;incstack = 0
   133  0000F6  ECAA  F000         	call	_init_config	;wreg free
   134                           
   135                           ;main.c: 16: unsigned char ssd[4];
   136                           ;main.c: 17: unsigned char count=0;
   137  0000FA  0E00               	movlw	0
   138  0000FC  6E1D               	movwf	main@count,c
   139                           
   140                           ;main.c: 18: unsigned int delay=0;
   141  0000FE  0E00               	movlw	0
   142  000100  6E1C               	movwf	main@delay+1,c
   143  000102  0E00               	movlw	0
   144  000104  6E1B               	movwf	main@delay,c
   145  000106                     l771:
   146                           
   147                           ;main.c: 21: {
   148                           ;main.c: 22: ssd[0]=0x21;
   149  000106  0E21               	movlw	33
   150  000108  6E17               	movwf	main@ssd,c
   151                           
   152                           ;main.c: 23: ssd[1]=0xcb;
   153  00010A  0ECB               	movlw	203
   154  00010C  6E18               	movwf	main@ssd+1,c
   155                           
   156                           ;main.c: 24: ssd[2]=0x6b;
   157  00010E  0E6B               	movlw	107
   158  000110  6E19               	movwf	main@ssd+2,c
   159                           
   160                           ;main.c: 25: ssd[3]=0x2d;
   161  000112  0E2D               	movlw	45
   162  000114  6E1A               	movwf	main@ssd+3,c
   163                           
   164                           ;main.c: 26: display(ssd);
   165  000116  0E17               	movlw	low main@ssd
   166  000118  6E0F               	movwf	display@ssd,c
   167  00011A  0E00               	movlw	high main@ssd
   168  00011C  6E10               	movwf	display@ssd+1,c
   169  00011E  EC46  F000         	call	_display	;wreg free
   170                           
   171                           ;main.c: 27: if(delay++ == 100)
   172  000122  4A1B               	infsnz	main@delay,f,c
   173  000124  2A1C               	incf	main@delay+1,f,c
   174  000126  0E65               	movlw	101
   175  000128  181B               	xorwf	main@delay,w,c
   176  00012A  101C               	iorwf	main@delay+1,w,c
   177  00012C  A4D8               	btfss	status,2,c
   178  00012E  D00A               	goto	l789
   179                           
   180                           ;main.c: 28: {
   181                           ;main.c: 29: count++;
   182  000130  2A1D               	incf	main@count,f,c
   183                           
   184                           ;main.c: 30: RB1=~RB1;
   185  000132  B281               	btfsc	3969,1,c	;volatile
   186  000134  D002               	goto	u170
   187  000136  8281               	bsf	3969,1,c	;volatile
   188  000138  D001               	goto	l787
   189  00013A                     u170:
   190  00013A  9281               	bcf	3969,1,c	;volatile
   191  00013C                     l787:
   192                           
   193                           ;main.c: 31: delay=0;
   194  00013C  0E00               	movlw	0
   195  00013E  6E1C               	movwf	main@delay+1,c
   196  000140  0E00               	movlw	0
   197  000142  6E1B               	movwf	main@delay,c
   198  000144                     l789:
   199                           
   200                           ;main.c: 32: }
   201                           ;main.c: 33: if(count == 5)
   202  000144  0E05               	movlw	5
   203  000146  181D               	xorwf	main@count,w,c
   204  000148  A4D8               	btfss	status,2,c
   205  00014A  D7DD               	goto	l771
   206                           
   207                           ;main.c: 34: {
   208                           ;main.c: 35: count = 0;
   209  00014C  0E00               	movlw	0
   210  00014E  6E1D               	movwf	main@count,c
   211  000150  0003               	sleep		;# 
   212  000152  D7D9               	goto	l771
   213  000154                     __end_of_main:
   214                           	opt stack 0
   215                           status	equ	0xFD8
   216                           
   217 ;; *************** function _init_config *****************
   218 ;; Defined at:
   219 ;;		line 45 in file "main.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, status,2, status,0, cstack
   228 ;; Tracked objects:
   229 ;;		On entry : 0/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   233 ;;      Params:         0       0       0       0       0       0       0
   234 ;;      Locals:         0       0       0       0       0       0       0
   235 ;;      Temps:          0       0       0       0       0       0       0
   236 ;;      Totals:         0       0       0       0       0       0       0
   237 ;;Total ram usage:        0 bytes
   238 ;; Hardware stack levels used:    1
   239 ;; Hardware stack levels required when called:    2
   240 ;; This function calls:
   241 ;;		_init_interrupt
   242 ;; This function is called by:
   243 ;;		_main
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           	psect	text1
   248  000154                     __ptext1:
   249                           	opt stack 0
   250  000154                     _init_config:
   251                           	opt stack 28
   252                           
   253                           ;main.c: 47: TRISD=0X00;
   254                           
   255                           ;incstack = 0
   256  000154  0E00               	movlw	0
   257  000156  6E95               	movwf	3989,c	;volatile
   258                           
   259                           ;main.c: 48: TRISA=TRISA & 0XF0;
   260  000158  5092               	movf	3986,w,c	;volatile
   261  00015A  0BF0               	andlw	240
   262  00015C  6E92               	movwf	3986,c	;volatile
   263                           
   264                           ;main.c: 49: RB1=0;
   265  00015E  9281               	bcf	3969,1,c	;volatile
   266                           
   267                           ;main.c: 50: TRISB0=1;
   268  000160  8093               	bsf	3987,0,c	;volatile
   269                           
   270                           ;main.c: 51: TRISB1=0;
   271  000162  9293               	bcf	3987,1,c	;volatile
   272                           
   273                           ;main.c: 52: PORTA=PORTA & 0XF0;
   274  000164  5080               	movf	3968,w,c	;volatile
   275  000166  0BF0               	andlw	240
   276  000168  6E80               	movwf	3968,c	;volatile
   277                           
   278                           ;main.c: 53: PORTD=0X00;
   279  00016A  0E00               	movlw	0
   280  00016C  6E83               	movwf	3971,c	;volatile
   281                           
   282                           ;main.c: 54: init_interrupt();
   283  00016E  ECBA  F000         	call	_init_interrupt	;wreg free
   284  000172  0012               	return		;funcret
   285  000174                     __end_of_init_config:
   286                           	opt stack 0
   287                           status	equ	0xFD8
   288                           
   289 ;; *************** function _init_interrupt *****************
   290 ;; Defined at:
   291 ;;		line 71 in file "main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		None
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   305 ;;      Params:         0       0       0       0       0       0       0
   306 ;;      Locals:         0       0       0       0       0       0       0
   307 ;;      Temps:          0       0       0       0       0       0       0
   308 ;;      Totals:         0       0       0       0       0       0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels used:    1
   311 ;; Hardware stack levels required when called:    1
   312 ;; This function calls:
   313 ;;		Nothing
   314 ;; This function is called by:
   315 ;;		_init_config
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319                           	psect	text2
   320  000174                     __ptext2:
   321                           	opt stack 0
   322  000174                     _init_interrupt:
   323                           	opt stack 28
   324                           
   325                           ;main.c: 73: GIE=1;
   326                           
   327                           ;incstack = 0
   328  000174  8EF2               	bsf	intcon,7,c	;volatile
   329                           
   330                           ;main.c: 74: PEIE=1;
   331  000176  8CF2               	bsf	intcon,6,c	;volatile
   332                           
   333                           ;main.c: 75: INT0IF=0;
   334  000178  92F2               	bcf	intcon,1,c	;volatile
   335                           
   336                           ;main.c: 76: INT0IE=1;
   337  00017A  88F2               	bsf	intcon,4,c	;volatile
   338                           
   339                           ;main.c: 77: INTEDG0=0;
   340  00017C  9CF1               	bcf	intcon2,6,c	;volatile
   341  00017E  0012               	return		;funcret
   342  000180                     __end_of_init_interrupt:
   343                           	opt stack 0
   344                           intcon	equ	0xFF2
   345                           intcon2	equ	0xFF1
   346                           status	equ	0xFD8
   347                           
   348 ;; *************** function _display *****************
   349 ;; Defined at:
   350 ;;		line 57 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;  ssd             2   14[COMRAM] PTR unsigned char 
   353 ;;		 -> main@ssd(4), 
   354 ;; Auto vars:     Size  Location     Type
   355 ;;  j               2   18[COMRAM] int 
   356 ;;  i               2   20[COMRAM] int 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   366 ;;      Params:         2       0       0       0       0       0       0
   367 ;;      Locals:         4       0       0       0       0       0       0
   368 ;;      Temps:          2       0       0       0       0       0       0
   369 ;;      Totals:         8       0       0       0       0       0       0
   370 ;;Total ram usage:        8 bytes
   371 ;; Hardware stack levels used:    1
   372 ;; Hardware stack levels required when called:    1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text3
   381  00008C                     __ptext3:
   382                           	opt stack 0
   383  00008C                     _display:
   384                           	opt stack 29
   385                           
   386                           ;main.c: 59: for (int i = 0; i <4; i++)
   387                           
   388                           ;incstack = 0
   389  00008C  0E00               	movlw	0
   390  00008E  6E16               	movwf	display@i+1,c
   391  000090  0E00               	movlw	0
   392  000092  6E15               	movwf	display@i,c
   393  000094                     l743:
   394  000094  BE16               	btfsc	display@i+1,7,c
   395  000096  D006               	goto	l747
   396  000098  5016               	movf	display@i+1,w,c
   397  00009A  E12C               	bnz	l48
   398  00009C  0E04               	movlw	4
   399  00009E  5C15               	subwf	display@i,w,c
   400  0000A0  B0D8               	btfsc	status,0,c
   401  0000A2  0012               	return	
   402  0000A4                     l747:
   403                           
   404                           ;main.c: 60: {
   405                           ;main.c: 61: PORTD=ssd[i];
   406  0000A4  5015               	movf	display@i,w,c
   407  0000A6  240F               	addwf	display@ssd,w,c
   408  0000A8  6ED9               	movwf	fsr2l,c
   409  0000AA  5016               	movf	display@i+1,w,c
   410  0000AC  2010               	addwfc	display@ssd+1,w,c
   411  0000AE  6EDA               	movwf	fsr2h,c
   412  0000B0  50DF               	movf	indf2,w,c
   413  0000B2  6E83               	movwf	3971,c	;volatile
   414                           
   415                           ;main.c: 62: PORTA=(PORTA & 0XF0) | (1<<i);
   416  0000B4  C015  F011         	movff	display@i,??_display
   417  0000B8  0E01               	movlw	1
   418  0000BA  6E12               	movwf	(??_display+1)& (0+255),c
   419  0000BC  2A11               	incf	??_display,f,c
   420  0000BE  D002               	goto	u124
   421  0000C0                     u125:
   422  0000C0  90D8               	bcf	status,0,c
   423  0000C2  3612               	rlcf	??_display+1,f,c
   424  0000C4                     u124:
   425  0000C4  2E11               	decfsz	??_display,f,c
   426  0000C6  D7FC               	goto	u125
   427  0000C8  5080               	movf	3968,w,c	;volatile
   428  0000CA  0BF0               	andlw	240
   429  0000CC  1012               	iorwf	??_display+1,w,c
   430  0000CE  6E80               	movwf	3968,c	;volatile
   431                           
   432                           ;main.c: 63: for (int j = 0; j < 1000; j++)
   433  0000D0  0E00               	movlw	0
   434  0000D2  6E14               	movwf	display@j+1,c
   435  0000D4  0E00               	movlw	0
   436  0000D6  6E13               	movwf	display@j,c
   437  0000D8                     l753:
   438  0000D8  BE14               	btfsc	display@j+1,7,c
   439  0000DA  D006               	goto	l757
   440  0000DC  0EE8               	movlw	232
   441  0000DE  5C13               	subwf	display@j,w,c
   442  0000E0  0E03               	movlw	3
   443  0000E2  5814               	subwfb	display@j+1,w,c
   444  0000E4  B0D8               	btfsc	status,0,c
   445  0000E6  D003               	goto	l761
   446  0000E8                     l757:
   447                           
   448                           ;main.c: 64: {
   449  0000E8  4A13               	infsnz	display@j,f,c
   450  0000EA  2A14               	incf	display@j+1,f,c
   451  0000EC  D7F5               	goto	l753
   452  0000EE                     l761:
   453  0000EE  4A15               	infsnz	display@i,f,c
   454  0000F0  2A16               	incf	display@i+1,f,c
   455  0000F2  D7D0               	goto	l743
   456  0000F4                     l48:
   457  0000F4  0012               	return		;funcret
   458  0000F6                     __end_of_display:
   459                           	opt stack 0
   460                           intcon	equ	0xFF2
   461                           intcon2	equ	0xFF1
   462                           indf2	equ	0xFDF
   463                           fsr2h	equ	0xFDA
   464                           fsr2l	equ	0xFD9
   465                           status	equ	0xFD8
   466                           
   467 ;; *************** function _isr *****************
   468 ;; Defined at:
   469 ;;		line 79 in file "main.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		None
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   483 ;;      Params:         0       0       0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0       0       0
   485 ;;      Temps:         14       0       0       0       0       0       0
   486 ;;      Totals:        14       0       0       0       0       0       0
   487 ;;Total ram usage:       14 bytes
   488 ;; Hardware stack levels used:    1
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		Interrupt level 2
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	intcode
   497  000008                     __pintcode:
   498                           	opt stack 0
   499  000008                     _isr:
   500                           	opt stack 28
   501                           
   502                           ;incstack = 0
   503  000008  821E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   504  00000A  CFFA F001          	movff	pclath,??_isr
   505  00000E  CFFB F002          	movff	pclatu,??_isr+1
   506  000012  ED0D  F000         	call	int_func,f	;refresh shadow registers
   507                           pclatu	equ	0xFFB
   508                           pclath	equ	0xFFA
   509                           intcon	equ	0xFF2
   510                           intcon2	equ	0xFF1
   511                           indf2	equ	0xFDF
   512                           fsr2h	equ	0xFDA
   513                           fsr2l	equ	0xFD9
   514                           status	equ	0xFD8
   515                           
   516                           	psect	intcode_body
   517  00001A                     __pintcode_body:
   518                           	opt stack 28
   519  00001A                     int_func:
   520                           	opt stack 28
   521  00001A  0006               	pop		; remove dummy address from shadow register refresh
   522  00001C  CFE9 F003          	movff	fsr0l,??_isr+2
   523  000020  CFEA F004          	movff	fsr0h,??_isr+3
   524  000024  CFE1 F005          	movff	fsr1l,??_isr+4
   525  000028  CFE2 F006          	movff	fsr1h,??_isr+5
   526  00002C  CFD9 F007          	movff	fsr2l,??_isr+6
   527  000030  CFDA F008          	movff	fsr2h,??_isr+7
   528  000034  CFF3 F009          	movff	prodl,??_isr+8
   529  000038  CFF4 F00A          	movff	prodh,??_isr+9
   530  00003C  CFF6 F00B          	movff	tblptrl,??_isr+10
   531  000040  CFF7 F00C          	movff	tblptrh,??_isr+11
   532  000044  CFF8 F00D          	movff	tblptru,??_isr+12
   533  000048  CFF5 F00E          	movff	tablat,??_isr+13
   534                           
   535                           ;main.c: 81: if(INT0IF)
   536  00004C  B2F2               	btfsc	intcon,1,c	;volatile
   537                           
   538                           ;main.c: 82: {
   539                           ;main.c: 83: INT0IF=0;
   540  00004E  92F2               	bcf	intcon,1,c	;volatile
   541  000050  C00E  FFF5         	movff	??_isr+13,tablat
   542  000054  C00D  FFF8         	movff	??_isr+12,tblptru
   543  000058  C00C  FFF7         	movff	??_isr+11,tblptrh
   544  00005C  C00B  FFF6         	movff	??_isr+10,tblptrl
   545  000060  C00A  FFF4         	movff	??_isr+9,prodh
   546  000064  C009  FFF3         	movff	??_isr+8,prodl
   547  000068  C008  FFDA         	movff	??_isr+7,fsr2h
   548  00006C  C007  FFD9         	movff	??_isr+6,fsr2l
   549  000070  C006  FFE2         	movff	??_isr+5,fsr1h
   550  000074  C005  FFE1         	movff	??_isr+4,fsr1l
   551  000078  C004  FFEA         	movff	??_isr+3,fsr0h
   552  00007C  C003  FFE9         	movff	??_isr+2,fsr0l
   553  000080  C002  FFFB         	movff	??_isr+1,pclatu
   554  000084  C001  FFFA         	movff	??_isr,pclath
   555  000088  921E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   556  00008A  0011               	retfie		f
   557  00008C                     __end_of_isr:
   558                           	opt stack 0
   559  0000                     pclatu	equ	0xFFB
   560                           pclath	equ	0xFFA
   561                           tblptru	equ	0xFF8
   562                           tblptrh	equ	0xFF7
   563                           tblptrl	equ	0xFF6
   564                           tablat	equ	0xFF5
   565                           prodh	equ	0xFF4
   566                           prodl	equ	0xFF3
   567                           intcon	equ	0xFF2
   568                           intcon2	equ	0xFF1
   569                           fsr0h	equ	0xFEA
   570                           fsr0l	equ	0xFE9
   571                           fsr1h	equ	0xFE2
   572                           fsr1l	equ	0xFE1
   573                           indf2	equ	0xFDF
   574                           fsr2h	equ	0xFDA
   575                           fsr2l	equ	0xFD9
   576                           status	equ	0xFD8
   577                           pclatu	equ	0xFFB
   578                           pclath	equ	0xFFA
   579                           tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           tblptrl	equ	0xFF6
   582                           tablat	equ	0xFF5
   583                           prodh	equ	0xFF4
   584                           prodl	equ	0xFF3
   585                           intcon	equ	0xFF2
   586                           intcon2	equ	0xFF1
   587                           fsr0h	equ	0xFEA
   588                           fsr0l	equ	0xFE9
   589                           fsr1h	equ	0xFE2
   590                           fsr1l	equ	0xFE1
   591                           indf2	equ	0xFDF
   592                           fsr2h	equ	0xFDA
   593                           fsr2l	equ	0xFD9
   594                           status	equ	0xFD8
   595                           
   596                           	psect	rparam
   597  0000                     pclatu	equ	0xFFB
   598                           pclath	equ	0xFFA
   599                           tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           prodh	equ	0xFF4
   604                           prodl	equ	0xFF3
   605                           intcon	equ	0xFF2
   606                           intcon2	equ	0xFF1
   607                           fsr0h	equ	0xFEA
   608                           fsr0l	equ	0xFE9
   609                           fsr1h	equ	0xFE2
   610                           fsr1l	equ	0xFE1
   611                           indf2	equ	0xFDF
   612                           fsr2h	equ	0xFDA
   613                           fsr2l	equ	0xFD9
   614                           status	equ	0xFD8
   615                           
   616                           	psect	temp
   617  00001E                     btemp:
   618                           	opt stack 0
   619  00001E                     	ds	1
   620  0000                     int$flags	set	btemp
   621                           pclatu	equ	0xFFB
   622                           pclath	equ	0xFFA
   623                           tblptru	equ	0xFF8
   624                           tblptrh	equ	0xFF7
   625                           tblptrl	equ	0xFF6
   626                           tablat	equ	0xFF5
   627                           prodh	equ	0xFF4
   628                           prodl	equ	0xFF3
   629                           intcon	equ	0xFF2
   630                           intcon2	equ	0xFF1
   631                           fsr0h	equ	0xFEA
   632                           fsr0l	equ	0xFE9
   633                           fsr1h	equ	0xFE2
   634                           fsr1l	equ	0xFE1
   635                           indf2	equ	0xFDF
   636                           fsr2h	equ	0xFDA
   637                           fsr2l	equ	0xFD9
   638                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@ssd	PTR unsigned char  size(2) Largest target is 4
		 -> main@ssd(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_display

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     367
                                             22 COMRAM     7     7      0
                            _display
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                     _init_interrupt
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              8     6      2     222
                                             14 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _init_config
     _init_interrupt

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     1D      1D       1       30.9%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BIGRAM             5FF      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue Jun  6 06:36:19 2023

       ??_init_interrupt 000F                       l48 00F4                      l743 0094  
                    l761 00EE                      l753 00D8                      l747 00A4  
                    l771 0106                      l757 00E8                      l787 013C  
                    l789 0144                      _GIE 007F97                      _RB1 007C09  
                    u124 00C4                      u125 00C0                      u170 013A  
                    _isr 0008                     ?_isr 0001                     _PEIE 007F96  
                   _main 00F6                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     btemp 001E  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 0016             ___param_bank 000010                    ??_isr 0001  
                  ?_main 0001             ?_init_config 0001                    _PORTA 000F80  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISD 000F95  
        __end_of_display 00F6                    tablat 000FF5                    status 000FD8  
        __initialization 0180             __end_of_main 0154                   ??_main 0017  
          __activetblptr 000000                   _INT0IE 007F94                   _INT0IF 007F91  
                 _TRISB0 007C98                   _TRISB1 007C99                ??_display 0011  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0180            ___rparam_used 000001  
         __pcstackCOMRAM 0001     __size_of_init_config 0020                  _INTEDG0 007F8E  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0180  
                __ramtop 0600                  __ptext0 00F6                  __ptext1 0154  
                __ptext2 0174                  __ptext3 008C                  _display 008C  
           __size_of_isr 0084  __size_of_init_interrupt 000C                  main@ssd 0017  
         __pintcode_body 001A     end_of_initialization 0180                  int_func 001A  
             display@ssd 000F      start_initialization 0180              __end_of_isr 008C  
          ??_init_config 000F           _init_interrupt 0174                __pintcode 0008  
               ?_display 000F   __end_of_init_interrupt 0180      __end_of_init_config 0174  
        ?_init_interrupt 0001                main@delay 001B                main@count 001D  
               __Hrparam 0000                 __Lrparam 0000              _init_config 0154  
       __size_of_display 006A            __size_of_main 005E                 int$flags 001E  
               display@i 0015                 display@j 0013                 intlevel2 0000  
