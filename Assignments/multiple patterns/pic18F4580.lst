

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Jun  5 07:36:08 2023

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           	psect	idataCOMRAM
    20  003000                     __pidataCOMRAM:
    21                           	opt stack 0
    22                           
    23                           ;initializer for read_digital_keypad@once
    24  003000  01                 	db	1
    25  0000                     _PORTB	set	3969
    26  0000                     _PORTC	set	3970
    27  0000                     _TRISB	set	3987
    28  0000                     _TRISC	set	3988
    29                           
    30                           ; #config settings
    31                           
    32                           	psect	cinit
    33  002DD6                     __pcinit:
    34                           	opt stack 0
    35  002DD6                     start_initialization:
    36                           	opt stack 0
    37  002DD6                     __initialization:
    38                           	opt stack 0
    39                           
    40                           ; Initialize objects allocated to COMRAM (1 bytes)
    41                           ; load TBLPTR registers with __pidataCOMRAM
    42  002DD6  0E00               	movlw	low __pidataCOMRAM
    43  002DD8  6EF6               	movwf	tblptrl,c
    44  002DDA  0E30               	movlw	high __pidataCOMRAM
    45  002DDC  6EF7               	movwf	tblptrh,c
    46  002DDE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    47  002DE0  6EF8               	movwf	tblptru,c
    48  002DE2  0009               	tblrd		*+	;fetch initializer
    49  002DE4  CFF5 F00B          	movff	tablat,__pdataCOMRAM
    50  002DE8                     end_of_initialization:
    51                           	opt stack 0
    52  002DE8                     __end_of__initialization:
    53                           	opt stack 0
    54  002DE8  0100               	movlb	0
    55  002DEA  EF11  F017         	goto	_main	;jump to C main() function
    56                           tblptru	equ	0xFF8
    57                           tblptrh	equ	0xFF7
    58                           tblptrl	equ	0xFF6
    59                           tablat	equ	0xFF5
    60                           
    61                           	psect	dataCOMRAM
    62  00000B                     __pdataCOMRAM:
    63                           	opt stack 0
    64  00000B                     read_digital_keypad@once:
    65                           	opt stack 0
    66  00000B                     	ds	1
    67                           tblptru	equ	0xFF8
    68                           tblptrh	equ	0xFF7
    69                           tblptrl	equ	0xFF6
    70                           tablat	equ	0xFF5
    71                           
    72                           	psect	cstackCOMRAM
    73  000001                     __pcstackCOMRAM:
    74                           	opt stack 0
    75  000001                     ??_patteren3:
    76  000001                     ??_patteren4:
    77  000001                     read_digital_keypad@detection:
    78                           	opt stack 0
    79  000001                     patteren1@delay:
    80                           	opt stack 0
    81  000001                     patteren2@delay:
    82                           	opt stack 0
    83                           
    84                           ; 4 bytes @ 0x0
    85  000001                     	ds	4
    86  000005                     patteren1@count:
    87                           	opt stack 0
    88  000005                     patteren2@count:
    89                           	opt stack 0
    90  000005                     patteren3@delay:
    91                           	opt stack 0
    92  000005                     patteren4@delay:
    93                           	opt stack 0
    94                           
    95                           ; 4 bytes @ 0x4
    96  000005                     	ds	4
    97  000009                     patteren3@flag:
    98                           	opt stack 0
    99  000009                     patteren4@flag:
   100                           	opt stack 0
   101                           
   102                           ; 1 bytes @ 0x8
   103  000009                     	ds	1
   104  00000A                     main@key:
   105                           	opt stack 0
   106                           
   107                           ; 1 bytes @ 0x9
   108  00000A                     	ds	1
   109                           tblptru	equ	0xFF8
   110                           tblptrh	equ	0xFF7
   111                           tblptrl	equ	0xFF6
   112                           tablat	equ	0xFF5
   113                           
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 23 in file "main.c"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;  key             1    9[COMRAM] unsigned char 
   124 ;; Return value:  Size  Location     Type
   125 ;;                  1    wreg      void 
   126 ;; Registers used:
   127 ;;		wreg, status,2, status,0, cstack
   128 ;; Tracked objects:
   129 ;;		On entry : 0/0
   130 ;;		On exit  : 0/0
   131 ;;		Unchanged: 0/0
   132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   133 ;;      Params:         0       0       0       0       0       0       0
   134 ;;      Locals:         1       0       0       0       0       0       0
   135 ;;      Temps:          0       0       0       0       0       0       0
   136 ;;      Totals:         1       0       0       0       0       0       0
   137 ;;Total ram usage:        1 bytes
   138 ;; Hardware stack levels required when called:    1
   139 ;; This function calls:
   140 ;;		_init_config
   141 ;;		_patteren1
   142 ;;		_patteren2
   143 ;;		_patteren3
   144 ;;		_patteren4
   145 ;;		_read_digital_keypad
   146 ;; This function is called by:
   147 ;;		Startup code after reset
   148 ;; This function uses a non-reentrant model
   149 ;;
   150                           
   151                           	psect	text0
   152  002E22                     __ptext0:
   153                           	opt stack 0
   154  002E22                     _main:
   155                           	opt stack 30
   156                           
   157                           ;main.c: 25: init_config();
   158                           
   159                           ;incstack = 0
   160  002E22  ECE3  F016         	call	_init_config	;wreg free
   161                           
   162                           ;main.c: 26: unsigned char key;
   163                           ;main.c: 27: patteren1();
   164  002E26  ECC5  F017         	call	_patteren1	;wreg free
   165  002E2A                     l23:
   166                           
   167                           ;main.c: 29: {
   168                           ;main.c: 31: key=read_digital_keypad(1);
   169  002E2A  0E01               	movlw	1
   170  002E2C  ECF7  F016         	call	_read_digital_keypad
   171  002E30  6E0A               	movwf	main@key,c
   172                           
   173                           ;main.c: 32: if(key==0x0e)
   174  002E32  0E0E               	movlw	14
   175  002E34  180A               	xorwf	main@key,w,c
   176  002E36  A4D8               	btfss	status,2,c
   177  002E38  D003               	goto	l782
   178                           
   179                           ;main.c: 33: {
   180                           ;main.c: 34: patteren1();
   181  002E3A  ECC5  F017         	call	_patteren1	;wreg free
   182                           
   183                           ;main.c: 35: }
   184  002E3E  D7F5               	goto	l23
   185  002E40                     l782:
   186                           
   187                           ;main.c: 36: else if(key==0x0d)
   188  002E40  0E0D               	movlw	13
   189  002E42  180A               	xorwf	main@key,w,c
   190  002E44  A4D8               	btfss	status,2,c
   191  002E46  D003               	goto	l786
   192                           
   193                           ;main.c: 37: {
   194                           ;main.c: 38: patteren2();
   195  002E48  EC38  F017         	call	_patteren2	;wreg free
   196                           
   197                           ;main.c: 39: }
   198  002E4C  D7EE               	goto	l23
   199  002E4E                     l786:
   200                           
   201                           ;main.c: 40: else if(key==0x0b)
   202  002E4E  0E0B               	movlw	11
   203  002E50  180A               	xorwf	main@key,w,c
   204  002E52  A4D8               	btfss	status,2,c
   205  002E54  D003               	goto	l790
   206                           
   207                           ;main.c: 41: {
   208                           ;main.c: 42: patteren3();
   209  002E56  EC67  F017         	call	_patteren3	;wreg free
   210                           
   211                           ;main.c: 43: }
   212  002E5A  D7E7               	goto	l23
   213  002E5C                     l790:
   214                           
   215                           ;main.c: 44: else if(key==0x07)
   216  002E5C  0E07               	movlw	7
   217  002E5E  180A               	xorwf	main@key,w,c
   218  002E60  A4D8               	btfss	status,2,c
   219  002E62  D003               	goto	l794
   220                           
   221                           ;main.c: 45: {
   222                           ;main.c: 46: patteren4();
   223  002E64  EC96  F017         	call	_patteren4	;wreg free
   224                           
   225                           ;main.c: 47: }
   226  002E68  D7E0               	goto	l23
   227  002E6A                     l794:
   228                           
   229                           ;main.c: 48: else
   230                           ;main.c: 49: {
   231                           ;main.c: 50: patteren1();
   232  002E6A  ECC5  F017         	call	_patteren1	;wreg free
   233  002E6E  D7DD               	goto	l23
   234  002E70                     __end_of_main:
   235                           	opt stack 0
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           status	equ	0xFD8
   241                           
   242 ;; *************** function _read_digital_keypad *****************
   243 ;; Defined at:
   244 ;;		line 70 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;  detection       1    wreg     unsigned char 
   247 ;; Auto vars:     Size  Location     Type
   248 ;;  detection       1    0[COMRAM] unsigned char 
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      unsigned char 
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0
   253 ;; Tracked objects:
   254 ;;		On entry : 0/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   258 ;;      Params:         0       0       0       0       0       0       0
   259 ;;      Locals:         1       0       0       0       0       0       0
   260 ;;      Temps:          0       0       0       0       0       0       0
   261 ;;      Totals:         1       0       0       0       0       0       0
   262 ;;Total ram usage:        1 bytes
   263 ;; Hardware stack levels used:    1
   264 ;; This function calls:
   265 ;;		Nothing
   266 ;; This function is called by:
   267 ;;		_main
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           	psect	text1
   272  002DEE                     __ptext1:
   273                           	opt stack 0
   274  002DEE                     _read_digital_keypad:
   275                           	opt stack 30
   276                           
   277                           ;incstack = 0
   278                           ;read_digital_keypad@detection stored from wreg
   279  002DEE  6E01               	movwf	read_digital_keypad@detection,c
   280                           
   281                           ;main.c: 72: static unsigned char once=1;
   282                           ;main.c: 74: if(detection ==1)
   283  002DF0  0401               	decf	read_digital_keypad@detection,w,c
   284  002DF2  A4D8               	btfss	status,2,c
   285  002DF4  0012               	return	
   286                           
   287                           ;main.c: 75: {
   288                           ;main.c: 76: if(((PORTC & 0x0f) != 0x0f) && once)
   289  002DF6  5082               	movf	3970,w,c	;volatile
   290  002DF8  0B0F               	andlw	15
   291  002DFA  0A0F               	xorlw	15
   292  002DFC  B4D8               	btfsc	status,2,c
   293  002DFE  D008               	goto	l720
   294  002E00  500B               	movf	read_digital_keypad@once,w,c
   295  002E02  B4D8               	btfsc	status,2,c
   296  002E04  D005               	goto	l720
   297                           
   298                           ;main.c: 77: {
   299                           ;main.c: 78: once =0;
   300  002E06  0E00               	movlw	0
   301  002E08  6E0B               	movwf	read_digital_keypad@once,c
   302                           
   303                           ;main.c: 79: return (PORTC & 0x0f);
   304  002E0A  5082               	movf	3970,w,c	;volatile
   305  002E0C  0B0F               	andlw	15
   306  002E0E  0012               	return	
   307  002E10                     l720:
   308                           
   309                           ;main.c: 83: else if( (PORTC & 0x0f)==0x0f)
   310  002E10  5082               	movf	3970,w,c	;volatile
   311  002E12  0B0F               	andlw	15
   312  002E14  0A0F               	xorlw	15
   313  002E16  A4D8               	btfss	status,2,c
   314  002E18  D002               	goto	l724
   315                           
   316                           ;main.c: 84: {
   317                           ;main.c: 85: once=1;
   318  002E1A  0E01               	movlw	1
   319  002E1C  6E0B               	movwf	read_digital_keypad@once,c
   320  002E1E                     l724:
   321                           
   322                           ;main.c: 86: }
   323                           ;main.c: 87: return 0x0f;
   324  002E1E  0E0F               	movlw	15
   325  002E20  0012               	return	
   326  002E22                     __end_of_read_digital_keypad:
   327                           	opt stack 0
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           status	equ	0xFD8
   333                           
   334 ;; *************** function _patteren4 *****************
   335 ;; Defined at:
   336 ;;		line 184 in file "main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  delay           4    4[COMRAM] unsigned long 
   341 ;;  flag            1    8[COMRAM] unsigned char 
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, status,2, status,0
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   351 ;;      Params:         0       0       0       0       0       0       0
   352 ;;      Locals:         5       0       0       0       0       0       0
   353 ;;      Temps:          4       0       0       0       0       0       0
   354 ;;      Totals:         9       0       0       0       0       0       0
   355 ;;Total ram usage:        9 bytes
   356 ;; Hardware stack levels used:    1
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text2
   365  002F2C                     __ptext2:
   366                           	opt stack 0
   367  002F2C                     _patteren4:
   368                           	opt stack 30
   369                           
   370                           ;main.c: 186: unsigned long int delay=0;
   371                           
   372                           ;incstack = 0
   373  002F2C  0E00               	movlw	0
   374  002F2E  6E05               	movwf	patteren4@delay,c
   375  002F30  0E00               	movlw	0
   376  002F32  6E06               	movwf	patteren4@delay+1,c
   377  002F34  0E00               	movlw	0
   378  002F36  6E07               	movwf	patteren4@delay+2,c
   379  002F38  0E00               	movlw	0
   380  002F3A  6E08               	movwf	patteren4@delay+3,c
   381                           
   382                           ;main.c: 187: unsigned char flag=1;
   383  002F3C  0E01               	movlw	1
   384  002F3E  6E09               	movwf	patteren4@flag,c
   385                           
   386                           ;main.c: 188: if(delay++ >= 50000)
   387  002F40  C005  F001         	movff	patteren4@delay,??_patteren4
   388  002F44  C006  F002         	movff	patteren4@delay+1,??_patteren4+1
   389  002F48  C007  F003         	movff	patteren4@delay+2,??_patteren4+2
   390  002F4C  C008  F004         	movff	patteren4@delay+3,??_patteren4+3
   391  002F50  2A05               	incf	patteren4@delay,f,c
   392  002F52  0E00               	movlw	0
   393  002F54  2206               	addwfc	patteren4@delay+1,f,c
   394  002F56  2207               	addwfc	patteren4@delay+2,f,c
   395  002F58  2208               	addwfc	patteren4@delay+3,f,c
   396  002F5A  5004               	movf	??_patteren4+3,w,c
   397  002F5C  1003               	iorwf	??_patteren4+2,w,c
   398  002F5E  E106               	bnz	u160
   399  002F60  0E50               	movlw	80
   400  002F62  5C01               	subwf	??_patteren4,w,c
   401  002F64  0EC3               	movlw	195
   402  002F66  5802               	subwfb	??_patteren4+1,w,c
   403  002F68  A0D8               	btfss	status,0,c
   404  002F6A  0012               	return	
   405  002F6C                     u160:
   406                           
   407                           ;main.c: 189: {
   408                           ;main.c: 190: if(flag==1)
   409  002F6C  0409               	decf	patteren4@flag,w,c
   410  002F6E  A4D8               	btfss	status,2,c
   411  002F70  D004               	goto	l770
   412                           
   413                           ;main.c: 191: {
   414                           ;main.c: 192: PORTB=0xf0;
   415  002F72  0EF0               	movlw	240
   416  002F74  6E81               	movwf	3969,c	;volatile
   417                           
   418                           ;main.c: 193: flag++;
   419  002F76  2A09               	incf	patteren4@flag,f,c
   420                           
   421                           ;main.c: 195: }
   422  002F78  0012               	return	
   423  002F7A                     l770:
   424                           
   425                           ;main.c: 196: else if(flag==2)
   426  002F7A  0E02               	movlw	2
   427  002F7C  1809               	xorwf	patteren4@flag,w,c
   428  002F7E  A4D8               	btfss	status,2,c
   429  002F80  0012               	return	
   430                           
   431                           ;main.c: 197: {
   432                           ;main.c: 198: PORTB=~PORTB;
   433  002F82  1E81               	comf	3969,f,c	;volatile
   434                           
   435                           ;main.c: 199: flag=1;
   436  002F84  0E01               	movlw	1
   437  002F86  6E09               	movwf	patteren4@flag,c
   438  002F88  0012               	return	
   439  002F8A                     __end_of_patteren4:
   440                           	opt stack 0
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           status	equ	0xFD8
   446                           
   447 ;; *************** function _patteren3 *****************
   448 ;; Defined at:
   449 ;;		line 158 in file "main.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;  delay           4    4[COMRAM] unsigned long 
   454 ;;  flag            1    8[COMRAM] unsigned char 
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, status,2, status,0
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   464 ;;      Params:         0       0       0       0       0       0       0
   465 ;;      Locals:         5       0       0       0       0       0       0
   466 ;;      Temps:          4       0       0       0       0       0       0
   467 ;;      Totals:         9       0       0       0       0       0       0
   468 ;;Total ram usage:        9 bytes
   469 ;; Hardware stack levels used:    1
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text3
   478  002ECE                     __ptext3:
   479                           	opt stack 0
   480  002ECE                     _patteren3:
   481                           	opt stack 30
   482                           
   483                           ;main.c: 161: unsigned long int delay=0;
   484                           
   485                           ;incstack = 0
   486  002ECE  0E00               	movlw	0
   487  002ED0  6E05               	movwf	patteren3@delay,c
   488  002ED2  0E00               	movlw	0
   489  002ED4  6E06               	movwf	patteren3@delay+1,c
   490  002ED6  0E00               	movlw	0
   491  002ED8  6E07               	movwf	patteren3@delay+2,c
   492  002EDA  0E00               	movlw	0
   493  002EDC  6E08               	movwf	patteren3@delay+3,c
   494                           
   495                           ;main.c: 162: unsigned char flag=1;
   496  002EDE  0E01               	movlw	1
   497  002EE0  6E09               	movwf	patteren3@flag,c
   498                           
   499                           ;main.c: 163: if(delay++ >= 50000)
   500  002EE2  C005  F001         	movff	patteren3@delay,??_patteren3
   501  002EE6  C006  F002         	movff	patteren3@delay+1,??_patteren3+1
   502  002EEA  C007  F003         	movff	patteren3@delay+2,??_patteren3+2
   503  002EEE  C008  F004         	movff	patteren3@delay+3,??_patteren3+3
   504  002EF2  2A05               	incf	patteren3@delay,f,c
   505  002EF4  0E00               	movlw	0
   506  002EF6  2206               	addwfc	patteren3@delay+1,f,c
   507  002EF8  2207               	addwfc	patteren3@delay+2,f,c
   508  002EFA  2208               	addwfc	patteren3@delay+3,f,c
   509  002EFC  5004               	movf	??_patteren3+3,w,c
   510  002EFE  1003               	iorwf	??_patteren3+2,w,c
   511  002F00  E106               	bnz	u130
   512  002F02  0E50               	movlw	80
   513  002F04  5C01               	subwf	??_patteren3,w,c
   514  002F06  0EC3               	movlw	195
   515  002F08  5802               	subwfb	??_patteren3+1,w,c
   516  002F0A  A0D8               	btfss	status,0,c
   517  002F0C  0012               	return	
   518  002F0E                     u130:
   519                           
   520                           ;main.c: 164: {
   521                           ;main.c: 165: if(flag==1)
   522  002F0E  0409               	decf	patteren3@flag,w,c
   523  002F10  A4D8               	btfss	status,2,c
   524  002F12  D004               	goto	l754
   525                           
   526                           ;main.c: 166: {
   527                           ;main.c: 167: PORTB=0xaa;
   528  002F14  0EAA               	movlw	170
   529  002F16  6E81               	movwf	3969,c	;volatile
   530                           
   531                           ;main.c: 168: flag++;
   532  002F18  2A09               	incf	patteren3@flag,f,c
   533                           
   534                           ;main.c: 170: }
   535  002F1A  0012               	return	
   536  002F1C                     l754:
   537                           
   538                           ;main.c: 172: else if(flag==2)
   539  002F1C  0E02               	movlw	2
   540  002F1E  1809               	xorwf	patteren3@flag,w,c
   541  002F20  A4D8               	btfss	status,2,c
   542  002F22  0012               	return	
   543                           
   544                           ;main.c: 173: {
   545                           ;main.c: 174: PORTB=~PORTB;
   546  002F24  1E81               	comf	3969,f,c	;volatile
   547                           
   548                           ;main.c: 175: flag=1;
   549  002F26  0E01               	movlw	1
   550  002F28  6E09               	movwf	patteren3@flag,c
   551  002F2A  0012               	return	
   552  002F2C                     __end_of_patteren3:
   553                           	opt stack 0
   554                           tblptru	equ	0xFF8
   555                           tblptrh	equ	0xFF7
   556                           tblptrl	equ	0xFF6
   557                           tablat	equ	0xFF5
   558                           status	equ	0xFD8
   559                           
   560 ;; *************** function _patteren2 *****************
   561 ;; Defined at:
   562 ;;		line 132 in file "main.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  delay           4    0[COMRAM] unsigned long 
   567 ;;  count           1    4[COMRAM] unsigned char 
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   577 ;;      Params:         0       0       0       0       0       0       0
   578 ;;      Locals:         5       0       0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0
   580 ;;      Totals:         5       0       0       0       0       0       0
   581 ;;Total ram usage:        5 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_main
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text4
   591  002E70                     __ptext4:
   592                           	opt stack 0
   593  002E70                     _patteren2:
   594                           	opt stack 30
   595                           
   596                           ;main.c: 134: unsigned char count=0;
   597                           
   598                           ;incstack = 0
   599  002E70  0E00               	movlw	0
   600  002E72  6E05               	movwf	patteren2@count,c
   601                           
   602                           ;main.c: 135: unsigned long int delay=0;
   603  002E74  0E00               	movlw	0
   604  002E76  6E01               	movwf	patteren2@delay,c
   605  002E78  0E00               	movlw	0
   606  002E7A  6E02               	movwf	patteren2@delay+1,c
   607  002E7C  0E00               	movlw	0
   608  002E7E  6E03               	movwf	patteren2@delay+2,c
   609  002E80  0E00               	movlw	0
   610  002E82  6E04               	movwf	patteren2@delay+3,c
   611                           
   612                           ;main.c: 136: if(++delay >=5000)
   613  002E84  0E01               	movlw	1
   614  002E86  2601               	addwf	patteren2@delay,f,c
   615  002E88  0E00               	movlw	0
   616  002E8A  2202               	addwfc	patteren2@delay+1,f,c
   617  002E8C  2203               	addwfc	patteren2@delay+2,f,c
   618  002E8E  2204               	addwfc	patteren2@delay+3,f,c
   619  002E90  5004               	movf	patteren2@delay+3,w,c
   620  002E92  1003               	iorwf	patteren2@delay+2,w,c
   621  002E94  E106               	bnz	u100
   622  002E96  0E88               	movlw	136
   623  002E98  5C01               	subwf	patteren2@delay,w,c
   624  002E9A  0E13               	movlw	19
   625  002E9C  5802               	subwfb	patteren2@delay+1,w,c
   626  002E9E  A0D8               	btfss	status,0,c
   627  002EA0  D00C               	goto	l740
   628  002EA2                     u100:
   629                           
   630                           ;main.c: 137: {
   631                           ;main.c: 138: if(count <8)
   632  002EA2  0E08               	movlw	8
   633  002EA4  6005               	cpfslt	patteren2@count,c
   634  002EA6  D003               	goto	l736
   635                           
   636                           ;main.c: 139: {
   637                           ;main.c: 140: PORTB=PORTB<<1 | 1;
   638  002EA8  80D8               	bsf	status,0,c
   639  002EAA  3681               	rlcf	3969,f,c	;volatile
   640                           
   641                           ;main.c: 141: }
   642  002EAC  D006               	goto	l740
   643  002EAE                     l736:
   644                           
   645                           ;main.c: 142: else if( count <16)
   646  002EAE  0E10               	movlw	16
   647  002EB0  6005               	cpfslt	patteren2@count,c
   648  002EB2  D003               	goto	l740
   649                           
   650                           ;main.c: 143: {
   651                           ;main.c: 144: PORTB=PORTB<<1;
   652  002EB4  5081               	movf	3969,w,c	;volatile
   653  002EB6  2481               	addwf	3969,w,c	;volatile
   654  002EB8  6E81               	movwf	3969,c	;volatile
   655  002EBA                     l740:
   656                           
   657                           ;main.c: 145: }
   658                           ;main.c: 147: }
   659                           ;main.c: 148: count ++;
   660  002EBA  2A05               	incf	patteren2@count,f,c
   661                           
   662                           ;main.c: 149: delay=0;
   663  002EBC  0E00               	movlw	0
   664  002EBE  6E01               	movwf	patteren2@delay,c
   665  002EC0  0E00               	movlw	0
   666  002EC2  6E02               	movwf	patteren2@delay+1,c
   667  002EC4  0E00               	movlw	0
   668  002EC6  6E03               	movwf	patteren2@delay+2,c
   669  002EC8  0E00               	movlw	0
   670  002ECA  6E04               	movwf	patteren2@delay+3,c
   671  002ECC  0012               	return		;funcret
   672  002ECE                     __end_of_patteren2:
   673                           	opt stack 0
   674                           tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           tblptrl	equ	0xFF6
   677                           tablat	equ	0xFF5
   678                           status	equ	0xFD8
   679                           
   680 ;; *************** function _patteren1 *****************
   681 ;; Defined at:
   682 ;;		line 94 in file "main.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  delay           4    0[COMRAM] unsigned long 
   687 ;;  count           1    4[COMRAM] unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   697 ;;      Params:         0       0       0       0       0       0       0
   698 ;;      Locals:         5       0       0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0       0       0
   700 ;;      Totals:         5       0       0       0       0       0       0
   701 ;;Total ram usage:        5 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text5
   711  002F8A                     __ptext5:
   712                           	opt stack 0
   713  002F8A                     _patteren1:
   714                           	opt stack 30
   715                           
   716                           ;main.c: 96: unsigned char count=0;
   717                           
   718                           ;incstack = 0
   719  002F8A  0E00               	movlw	0
   720  002F8C  6E05               	movwf	patteren1@count,c
   721                           
   722                           ;main.c: 97: unsigned long int delay=0;
   723  002F8E  0E00               	movlw	0
   724  002F90  6E01               	movwf	patteren1@delay,c
   725  002F92  0E00               	movlw	0
   726  002F94  6E02               	movwf	patteren1@delay+1,c
   727  002F96  0E00               	movlw	0
   728  002F98  6E03               	movwf	patteren1@delay+2,c
   729  002F9A  0E00               	movlw	0
   730  002F9C  6E04               	movwf	patteren1@delay+3,c
   731                           
   732                           ;main.c: 99: if(++delay >=5000)
   733  002F9E  0E01               	movlw	1
   734  002FA0  2601               	addwf	patteren1@delay,f,c
   735  002FA2  0E00               	movlw	0
   736  002FA4  2202               	addwfc	patteren1@delay+1,f,c
   737  002FA6  2203               	addwfc	patteren1@delay+2,f,c
   738  002FA8  2204               	addwfc	patteren1@delay+3,f,c
   739  002FAA  5004               	movf	patteren1@delay+3,w,c
   740  002FAC  1003               	iorwf	patteren1@delay+2,w,c
   741  002FAE  E106               	bnz	u10
   742  002FB0  0E88               	movlw	136
   743  002FB2  5C01               	subwf	patteren1@delay,w,c
   744  002FB4  0E13               	movlw	19
   745  002FB6  5802               	subwfb	patteren1@delay+1,w,c
   746  002FB8  A0D8               	btfss	status,0,c
   747  002FBA  0012               	return	
   748  002FBC                     u10:
   749                           
   750                           ;main.c: 100: {
   751                           ;main.c: 101: if(count <8)
   752  002FBC  0E08               	movlw	8
   753  002FBE  6005               	cpfslt	patteren1@count,c
   754  002FC0  D003               	goto	l690
   755                           
   756                           ;main.c: 102: {
   757                           ;main.c: 103: PORTB=PORTB<<1 | 1;
   758  002FC2  80D8               	bsf	status,0,c
   759  002FC4  3681               	rlcf	3969,f,c	;volatile
   760                           
   761                           ;main.c: 104: }
   762  002FC6  D012               	goto	l702
   763  002FC8                     l690:
   764                           
   765                           ;main.c: 105: else if( count <16)
   766  002FC8  0E10               	movlw	16
   767  002FCA  6005               	cpfslt	patteren1@count,c
   768  002FCC  D003               	goto	l694
   769                           
   770                           ;main.c: 106: {
   771                           ;main.c: 107: PORTB=PORTB<<1;
   772  002FCE  5081               	movf	3969,w,c	;volatile
   773  002FD0  2481               	addwf	3969,w,c	;volatile
   774  002FD2  D00B               	goto	L1
   775  002FD4                     l694:
   776                           
   777                           ;main.c: 111: else if(count <23)
   778  002FD4  0E17               	movlw	23
   779  002FD6  6005               	cpfslt	patteren1@count,c
   780  002FD8  D003               	goto	l698
   781                           
   782                           ;main.c: 112: {
   783                           ;main.c: 113: PORTB=PORTB>>1 | 0x80;
   784  002FDA  80D8               	bsf	status,0,c
   785  002FDC  3281               	rrcf	3969,f,c	;volatile
   786                           
   787                           ;main.c: 115: }
   788  002FDE  D006               	goto	l702
   789  002FE0                     l698:
   790                           
   791                           ;main.c: 116: else if(count <31)
   792  002FE0  0E1F               	movlw	31
   793  002FE2  6005               	cpfslt	patteren1@count,c
   794  002FE4  D003               	goto	l702
   795                           
   796                           ;main.c: 117: {
   797                           ;main.c: 118: PORTB=PORTB>>1;
   798  002FE6  90D8               	bcf	status,0,c
   799  002FE8  3081               	rrcf	3969,w,c	;volatile
   800  002FEA                     L1:
   801  002FEA  6E81               	movwf	3969,c	;volatile
   802  002FEC                     l702:
   803                           
   804                           ;main.c: 120: }
   805                           ;main.c: 121: count ++;
   806  002FEC  2A05               	incf	patteren1@count,f,c
   807                           
   808                           ;main.c: 122: delay=0;
   809  002FEE  0E00               	movlw	0
   810  002FF0  6E01               	movwf	patteren1@delay,c
   811  002FF2  0E00               	movlw	0
   812  002FF4  6E02               	movwf	patteren1@delay+1,c
   813  002FF6  0E00               	movlw	0
   814  002FF8  6E03               	movwf	patteren1@delay+2,c
   815  002FFA  0E00               	movlw	0
   816  002FFC  6E04               	movwf	patteren1@delay+3,c
   817  002FFE  0012               	return	
   818  003000                     __end_of_patteren1:
   819                           	opt stack 0
   820                           tblptru	equ	0xFF8
   821                           tblptrh	equ	0xFF7
   822                           tblptrl	equ	0xFF6
   823                           tablat	equ	0xFF5
   824                           status	equ	0xFD8
   825                           
   826 ;; *************** function _init_config *****************
   827 ;; Defined at:
   828 ;;		line 61 in file "main.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, status,2, status,0
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   842 ;;      Params:         0       0       0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0       0       0
   845 ;;      Totals:         0       0       0       0       0       0       0
   846 ;;Total ram usage:        0 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text6
   856  002DC6                     __ptext6:
   857                           	opt stack 0
   858  002DC6                     _init_config:
   859                           	opt stack 30
   860                           
   861                           ;main.c: 63: TRISB=0x00;
   862                           
   863                           ;incstack = 0
   864  002DC6  0E00               	movlw	0
   865  002DC8  6E93               	movwf	3987,c	;volatile
   866                           
   867                           ;main.c: 64: TRISC=TRISC|0x0F;
   868  002DCA  5094               	movf	3988,w,c	;volatile
   869  002DCC  090F               	iorlw	15
   870  002DCE  6E94               	movwf	3988,c	;volatile
   871                           
   872                           ;main.c: 65: PORTB=0x00;
   873  002DD0  0E00               	movlw	0
   874  002DD2  6E81               	movwf	3969,c	;volatile
   875  002DD4  0012               	return		;funcret
   876  002DD6                     __end_of_init_config:
   877                           	opt stack 0
   878  0000                     tblptru	equ	0xFF8
   879                           tblptrh	equ	0xFF7
   880                           tblptrl	equ	0xFF6
   881                           tablat	equ	0xFF5
   882                           status	equ	0xFD8
   883                           tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           status	equ	0xFD8
   888                           
   889                           	psect	rparam
   890  0000                     tblptru	equ	0xFF8
   891                           tblptrh	equ	0xFF7
   892                           tblptrl	equ	0xFF6
   893                           tablat	equ	0xFF5
   894                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_patteren3
    _main->_patteren4

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     285
                                              9 COMRAM     1     1      0
                        _init_config
                          _patteren1
                          _patteren2
                          _patteren3
                          _patteren4
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _patteren4                                            9     9      0      45
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _patteren3                                            9     9      0      45
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _patteren2                                            5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _patteren1                                            5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
   _patteren1
   _patteren2
   _patteren3
   _patteren4
   _read_digital_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       B       1       11.6%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B       3        0.0%
DATA                 0      0       B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Jun  5 07:36:08 2023

                          l23 2E2A                            u10 2FBC                           l702 2FEC  
                         l720 2E10                           l740 2EBA                           l724 2E1E  
                         l736 2EAE                           l690 2FC8                           l754 2F1C  
                         l770 2F7A                           l694 2FD4                           l790 2E5C  
                         l782 2E40                           l698 2FE0                           l794 2E6A  
                         l786 2E4E                           u100 2EA2                           u130 2F0E  
                         u160 2F6C         ??_read_digital_keypad 0001                          _main 2E22  
                        start 0000                  ___param_bank 000010                         ?_main 0001  
                ?_init_config 0001                         _PORTB 000F81                         _PORTC 000F82  
                       _TRISB 000F93                         _TRISC 000F94                         tablat 000FF5  
                       status 000FD8               __initialization 2DD6                  __end_of_main 2E70  
                      ??_main 000A                 __activetblptr 000000                  __pdataCOMRAM 000B  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 2DE8                 ___rparam_used 000001  
              __pcstackCOMRAM 0001          __size_of_init_config 0010            __size_of_patteren1 0076  
          __size_of_patteren2 005E            __size_of_patteren3 005E            __size_of_patteren4 005E  
 __end_of_read_digital_keypad 2E22                 patteren3@flag 0009                 patteren4@flag 0009  
                     __Hparam 0000                       __Lparam 0000                       __pcinit 2DD6  
                     __ramtop 0600                       __ptext0 2E22                       __ptext1 2DEE  
                     __ptext2 2F2C                       __ptext3 2ECE                       __ptext4 2E70  
                     __ptext5 2F8A                       __ptext6 2DC6                       main@key 000A  
           __end_of_patteren1 3000             __end_of_patteren2 2ECE             __end_of_patteren3 2F2C  
           __end_of_patteren4 2F8A          end_of_initialization 2DE8                 __pidataCOMRAM 3000  
         start_initialization 2DD6                 ??_init_config 0001           __end_of_init_config 2DD6  
__size_of_read_digital_keypad 0034                     _patteren1 2F8A                     _patteren2 2E70  
                   _patteren3 2ECE                     _patteren4 2F2C                patteren1@delay 0001  
              patteren2@delay 0001                patteren1@count 0005                patteren3@delay 0005  
              patteren2@count 0005                patteren4@delay 0005                    ?_patteren1 0001  
                  ?_patteren2 0001                    ?_patteren3 0001                    ?_patteren4 0001  
                    __Hrparam 0000                      __Lrparam 0000                   _init_config 2DC6  
               __size_of_main 004E       read_digital_keypad@once 000B                   ??_patteren1 0001  
                 ??_patteren2 0001                   ??_patteren3 0001                   ??_patteren4 0001  
         _read_digital_keypad 2DEE  read_digital_keypad@detection 0001          ?_read_digital_keypad 0001  
