

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Jun  1 05:19:38 2023

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           	psect	idataCOMRAM
    20  003000                     __pidataCOMRAM:
    21                           	opt stack 0
    22                           
    23                           ;initializer for read_digital_keypad@once
    24  003000  01                 	db	1
    25  0000                     _PORTB	set	3969
    26  0000                     _PORTC	set	3970
    27  0000                     _TRISB	set	3987
    28  0000                     _TRISC	set	3988
    29                           
    30                           ; #config settings
    31                           
    32                           	psect	cinit
    33  002DDA                     __pcinit:
    34                           	opt stack 0
    35  002DDA                     start_initialization:
    36                           	opt stack 0
    37  002DDA                     __initialization:
    38                           	opt stack 0
    39                           
    40                           ; Initialize objects allocated to COMRAM (1 bytes)
    41                           ; load TBLPTR registers with __pidataCOMRAM
    42  002DDA  0E00               	movlw	low __pidataCOMRAM
    43  002DDC  6EF6               	movwf	tblptrl,c
    44  002DDE  0E30               	movlw	high __pidataCOMRAM
    45  002DE0  6EF7               	movwf	tblptrh,c
    46  002DE2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    47  002DE4  6EF8               	movwf	tblptru,c
    48  002DE6  0009               	tblrd		*+	;fetch initializer
    49  002DE8  CFF5 F00B          	movff	tablat,__pdataCOMRAM
    50  002DEC                     end_of_initialization:
    51                           	opt stack 0
    52  002DEC                     __end_of__initialization:
    53                           	opt stack 0
    54  002DEC  0100               	movlb	0
    55  002DEE  EF14  F017         	goto	_main	;jump to C main() function
    56                           tblptru	equ	0xFF8
    57                           tblptrh	equ	0xFF7
    58                           tblptrl	equ	0xFF6
    59                           tablat	equ	0xFF5
    60                           
    61                           	psect	dataCOMRAM
    62  00000B                     __pdataCOMRAM:
    63                           	opt stack 0
    64  00000B                     read_digital_keypad@once:
    65                           	opt stack 0
    66  00000B                     	ds	1
    67                           tblptru	equ	0xFF8
    68                           tblptrh	equ	0xFF7
    69                           tblptrl	equ	0xFF6
    70                           tablat	equ	0xFF5
    71                           
    72                           	psect	cstackCOMRAM
    73  000001                     __pcstackCOMRAM:
    74                           	opt stack 0
    75  000001                     ??_read_digital_keypad:
    76  000001                     ??_patteren3:
    77  000001                     ??_patteren4:
    78  000001                     patteren1@delay:
    79                           	opt stack 0
    80  000001                     patteren2@delay:
    81                           	opt stack 0
    82                           
    83                           ; 4 bytes @ 0x0
    84  000001                     	ds	1
    85  000002                     read_digital_keypad@detection:
    86                           	opt stack 0
    87                           
    88                           ; 1 bytes @ 0x1
    89  000002                     	ds	3
    90  000005                     patteren1@count:
    91                           	opt stack 0
    92  000005                     patteren2@count:
    93                           	opt stack 0
    94  000005                     patteren3@delay:
    95                           	opt stack 0
    96  000005                     patteren4@delay:
    97                           	opt stack 0
    98                           
    99                           ; 4 bytes @ 0x4
   100  000005                     	ds	4
   101  000009                     patteren3@flag:
   102                           	opt stack 0
   103  000009                     patteren4@flag:
   104                           	opt stack 0
   105                           
   106                           ; 1 bytes @ 0x8
   107  000009                     	ds	1
   108  00000A                     main@key:
   109                           	opt stack 0
   110                           
   111                           ; 1 bytes @ 0x9
   112  00000A                     	ds	1
   113                           tblptru	equ	0xFF8
   114                           tblptrh	equ	0xFF7
   115                           tblptrl	equ	0xFF6
   116                           tablat	equ	0xFF5
   117                           
   118 ;;
   119 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   120 ;;
   121 ;; *************** function _main *****************
   122 ;; Defined at:
   123 ;;		line 23 in file "main.c"
   124 ;; Parameters:    Size  Location     Type
   125 ;;		None
   126 ;; Auto vars:     Size  Location     Type
   127 ;;  key             1    9[COMRAM] unsigned char 
   128 ;; Return value:  Size  Location     Type
   129 ;;                  1    wreg      void 
   130 ;; Registers used:
   131 ;;		wreg, status,2, status,0, cstack
   132 ;; Tracked objects:
   133 ;;		On entry : 0/0
   134 ;;		On exit  : 0/0
   135 ;;		Unchanged: 0/0
   136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   137 ;;      Params:         0       0       0       0       0       0       0
   138 ;;      Locals:         1       0       0       0       0       0       0
   139 ;;      Temps:          0       0       0       0       0       0       0
   140 ;;      Totals:         1       0       0       0       0       0       0
   141 ;;Total ram usage:        1 bytes
   142 ;; Hardware stack levels required when called:    1
   143 ;; This function calls:
   144 ;;		_init_config
   145 ;;		_patteren1
   146 ;;		_patteren2
   147 ;;		_patteren3
   148 ;;		_patteren4
   149 ;;		_read_digital_keypad
   150 ;; This function is called by:
   151 ;;		Startup code after reset
   152 ;; This function uses a non-reentrant model
   153 ;;
   154                           
   155                           	psect	text0
   156  002E28                     __ptext0:
   157                           	opt stack 0
   158  002E28                     _main:
   159                           	opt stack 30
   160                           
   161                           ;main.c: 25: init_config();
   162                           
   163                           ;incstack = 0
   164  002E28  ECE5  F016         	call	_init_config	;wreg free
   165                           
   166                           ;main.c: 26: unsigned char key;
   167                           ;main.c: 27: patteren1();
   168  002E2C  ECC5  F017         	call	_patteren1	;wreg free
   169  002E30                     l23:
   170                           
   171                           ;main.c: 29: {
   172                           ;main.c: 31: key=read_digital_keypad(1);
   173  002E30  0E01               	movlw	1
   174  002E32  ECF9  F016         	call	_read_digital_keypad
   175  002E36  6E0A               	movwf	main@key,c
   176                           
   177                           ;main.c: 32: if(key==0x0e)
   178  002E38  0E0E               	movlw	14
   179  002E3A  180A               	xorwf	main@key,w,c
   180  002E3C  A4D8               	btfss	status,2,c
   181  002E3E  D003               	goto	l781
   182                           
   183                           ;main.c: 33: {
   184                           ;main.c: 34: patteren1();
   185  002E40  ECC5  F017         	call	_patteren1	;wreg free
   186                           
   187                           ;main.c: 35: }
   188  002E44  D7F5               	goto	l23
   189  002E46                     l781:
   190                           
   191                           ;main.c: 36: else if(key==0x0d)
   192  002E46  0E0D               	movlw	13
   193  002E48  180A               	xorwf	main@key,w,c
   194  002E4A  A4D8               	btfss	status,2,c
   195  002E4C  D003               	goto	l785
   196                           
   197                           ;main.c: 37: {
   198                           ;main.c: 38: patteren2();
   199  002E4E  EC38  F017         	call	_patteren2	;wreg free
   200                           
   201                           ;main.c: 39: }
   202  002E52  D7EE               	goto	l23
   203  002E54                     l785:
   204                           
   205                           ;main.c: 40: else if(key==0x0b)
   206  002E54  0E0B               	movlw	11
   207  002E56  180A               	xorwf	main@key,w,c
   208  002E58  A4D8               	btfss	status,2,c
   209  002E5A  D003               	goto	l789
   210                           
   211                           ;main.c: 41: {
   212                           ;main.c: 42: patteren3();
   213  002E5C  EC67  F017         	call	_patteren3	;wreg free
   214                           
   215                           ;main.c: 43: }
   216  002E60  D7E7               	goto	l23
   217  002E62                     l789:
   218                           
   219                           ;main.c: 44: else if(key==0x07)
   220  002E62  0E07               	movlw	7
   221  002E64  180A               	xorwf	main@key,w,c
   222  002E66  A4D8               	btfss	status,2,c
   223  002E68  D7E3               	goto	l23
   224                           
   225                           ;main.c: 45: {
   226                           ;main.c: 46: patteren4();
   227  002E6A  EC96  F017         	call	_patteren4	;wreg free
   228  002E6E  D7E0               	goto	l23
   229  002E70                     __end_of_main:
   230                           	opt stack 0
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           status	equ	0xFD8
   236                           
   237 ;; *************** function _read_digital_keypad *****************
   238 ;; Defined at:
   239 ;;		line 66 in file "main.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;  detection       1    wreg     unsigned char 
   242 ;; Auto vars:     Size  Location     Type
   243 ;;  detection       1    1[COMRAM] unsigned char 
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      unsigned char 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   253 ;;      Params:         0       0       0       0       0       0       0
   254 ;;      Locals:         1       0       0       0       0       0       0
   255 ;;      Temps:          1       0       0       0       0       0       0
   256 ;;      Totals:         2       0       0       0       0       0       0
   257 ;;Total ram usage:        2 bytes
   258 ;; Hardware stack levels used:    1
   259 ;; This function calls:
   260 ;;		Nothing
   261 ;; This function is called by:
   262 ;;		_main
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           	psect	text1
   267  002DF2                     __ptext1:
   268                           	opt stack 0
   269  002DF2                     _read_digital_keypad:
   270                           	opt stack 30
   271                           
   272                           ;incstack = 0
   273                           ;read_digital_keypad@detection stored from wreg
   274  002DF2  6E02               	movwf	read_digital_keypad@detection,c
   275                           
   276                           ;main.c: 68: static unsigned char once=1;
   277                           ;main.c: 70: if(detection ==1)
   278  002DF4  0402               	decf	read_digital_keypad@detection,w,c
   279  002DF6  A4D8               	btfss	status,2,c
   280  002DF8  0012               	return	
   281                           
   282                           ;main.c: 71: {
   283                           ;main.c: 72: if((PORTC & 0x0f) && once)
   284  002DFA  CF82 F001          	movff	3970,??_read_digital_keypad	;volatile
   285  002DFE  0E0F               	movlw	15
   286  002E00  1601               	andwf	??_read_digital_keypad,f,c
   287  002E02  B4D8               	btfsc	status,2,c
   288  002E04  D008               	goto	l719
   289  002E06  500B               	movf	read_digital_keypad@once,w,c
   290  002E08  B4D8               	btfsc	status,2,c
   291  002E0A  D005               	goto	l719
   292                           
   293                           ;main.c: 73: {
   294                           ;main.c: 74: once =0;
   295  002E0C  0E00               	movlw	0
   296  002E0E  6E0B               	movwf	read_digital_keypad@once,c
   297                           
   298                           ;main.c: 75: return (PORTC & 0x0f);
   299  002E10  5082               	movf	3970,w,c	;volatile
   300  002E12  0B0F               	andlw	15
   301                           
   302                           ;main.c: 76: }
   303  002E14  0012               	return	
   304  002E16                     l719:
   305                           
   306                           ;main.c: 79: else if( (PORTC & 0x0f)==0x0f)
   307  002E16  5082               	movf	3970,w,c	;volatile
   308  002E18  0B0F               	andlw	15
   309  002E1A  0A0F               	xorlw	15
   310  002E1C  A4D8               	btfss	status,2,c
   311  002E1E  0012               	return	
   312                           
   313                           ;main.c: 80: {
   314                           ;main.c: 81: once=1;
   315  002E20  0E01               	movlw	1
   316  002E22  6E0B               	movwf	read_digital_keypad@once,c
   317                           
   318                           ;main.c: 82: return 0x0f;
   319  002E24  0E0F               	movlw	15
   320  002E26  0012               	return	
   321  002E28                     __end_of_read_digital_keypad:
   322                           	opt stack 0
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           status	equ	0xFD8
   328                           
   329 ;; *************** function _patteren4 *****************
   330 ;; Defined at:
   331 ;;		line 180 in file "main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  delay           4    4[COMRAM] unsigned long 
   336 ;;  flag            1    8[COMRAM] unsigned char 
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, status,2, status,0
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   346 ;;      Params:         0       0       0       0       0       0       0
   347 ;;      Locals:         5       0       0       0       0       0       0
   348 ;;      Temps:          4       0       0       0       0       0       0
   349 ;;      Totals:         9       0       0       0       0       0       0
   350 ;;Total ram usage:        9 bytes
   351 ;; Hardware stack levels used:    1
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text2
   360  002F2C                     __ptext2:
   361                           	opt stack 0
   362  002F2C                     _patteren4:
   363                           	opt stack 30
   364                           
   365                           ;main.c: 182: unsigned long int delay=0;
   366                           
   367                           ;incstack = 0
   368  002F2C  0E00               	movlw	0
   369  002F2E  6E05               	movwf	patteren4@delay,c
   370  002F30  0E00               	movlw	0
   371  002F32  6E06               	movwf	patteren4@delay+1,c
   372  002F34  0E00               	movlw	0
   373  002F36  6E07               	movwf	patteren4@delay+2,c
   374  002F38  0E00               	movlw	0
   375  002F3A  6E08               	movwf	patteren4@delay+3,c
   376                           
   377                           ;main.c: 183: unsigned char flag=1;
   378  002F3C  0E01               	movlw	1
   379  002F3E  6E09               	movwf	patteren4@flag,c
   380                           
   381                           ;main.c: 184: if(delay++ >= 50000)
   382  002F40  C005  F001         	movff	patteren4@delay,??_patteren4
   383  002F44  C006  F002         	movff	patteren4@delay+1,??_patteren4+1
   384  002F48  C007  F003         	movff	patteren4@delay+2,??_patteren4+2
   385  002F4C  C008  F004         	movff	patteren4@delay+3,??_patteren4+3
   386  002F50  2A05               	incf	patteren4@delay,f,c
   387  002F52  0E00               	movlw	0
   388  002F54  2206               	addwfc	patteren4@delay+1,f,c
   389  002F56  2207               	addwfc	patteren4@delay+2,f,c
   390  002F58  2208               	addwfc	patteren4@delay+3,f,c
   391  002F5A  5004               	movf	??_patteren4+3,w,c
   392  002F5C  1003               	iorwf	??_patteren4+2,w,c
   393  002F5E  E106               	bnz	u160
   394  002F60  0E50               	movlw	80
   395  002F62  5C01               	subwf	??_patteren4,w,c
   396  002F64  0EC3               	movlw	195
   397  002F66  5802               	subwfb	??_patteren4+1,w,c
   398  002F68  A0D8               	btfss	status,0,c
   399  002F6A  0012               	return	
   400  002F6C                     u160:
   401                           
   402                           ;main.c: 185: {
   403                           ;main.c: 186: if(flag==1)
   404  002F6C  0409               	decf	patteren4@flag,w,c
   405  002F6E  A4D8               	btfss	status,2,c
   406  002F70  D004               	goto	l769
   407                           
   408                           ;main.c: 187: {
   409                           ;main.c: 188: PORTB=0xf0;
   410  002F72  0EF0               	movlw	240
   411  002F74  6E81               	movwf	3969,c	;volatile
   412                           
   413                           ;main.c: 189: flag++;
   414  002F76  2A09               	incf	patteren4@flag,f,c
   415                           
   416                           ;main.c: 191: }
   417  002F78  0012               	return	
   418  002F7A                     l769:
   419                           
   420                           ;main.c: 192: else if(flag==2)
   421  002F7A  0E02               	movlw	2
   422  002F7C  1809               	xorwf	patteren4@flag,w,c
   423  002F7E  A4D8               	btfss	status,2,c
   424  002F80  0012               	return	
   425                           
   426                           ;main.c: 193: {
   427                           ;main.c: 194: PORTB=~PORTB;
   428  002F82  1E81               	comf	3969,f,c	;volatile
   429                           
   430                           ;main.c: 195: flag=1;
   431  002F84  0E01               	movlw	1
   432  002F86  6E09               	movwf	patteren4@flag,c
   433  002F88  0012               	return	
   434  002F8A                     __end_of_patteren4:
   435                           	opt stack 0
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           status	equ	0xFD8
   441                           
   442 ;; *************** function _patteren3 *****************
   443 ;; Defined at:
   444 ;;		line 154 in file "main.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;  delay           4    4[COMRAM] unsigned long 
   449 ;;  flag            1    8[COMRAM] unsigned char 
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   459 ;;      Params:         0       0       0       0       0       0       0
   460 ;;      Locals:         5       0       0       0       0       0       0
   461 ;;      Temps:          4       0       0       0       0       0       0
   462 ;;      Totals:         9       0       0       0       0       0       0
   463 ;;Total ram usage:        9 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text3
   473  002ECE                     __ptext3:
   474                           	opt stack 0
   475  002ECE                     _patteren3:
   476                           	opt stack 30
   477                           
   478                           ;main.c: 157: unsigned long int delay=0;
   479                           
   480                           ;incstack = 0
   481  002ECE  0E00               	movlw	0
   482  002ED0  6E05               	movwf	patteren3@delay,c
   483  002ED2  0E00               	movlw	0
   484  002ED4  6E06               	movwf	patteren3@delay+1,c
   485  002ED6  0E00               	movlw	0
   486  002ED8  6E07               	movwf	patteren3@delay+2,c
   487  002EDA  0E00               	movlw	0
   488  002EDC  6E08               	movwf	patteren3@delay+3,c
   489                           
   490                           ;main.c: 158: unsigned char flag=1;
   491  002EDE  0E01               	movlw	1
   492  002EE0  6E09               	movwf	patteren3@flag,c
   493                           
   494                           ;main.c: 159: if(delay++ >= 50000)
   495  002EE2  C005  F001         	movff	patteren3@delay,??_patteren3
   496  002EE6  C006  F002         	movff	patteren3@delay+1,??_patteren3+1
   497  002EEA  C007  F003         	movff	patteren3@delay+2,??_patteren3+2
   498  002EEE  C008  F004         	movff	patteren3@delay+3,??_patteren3+3
   499  002EF2  2A05               	incf	patteren3@delay,f,c
   500  002EF4  0E00               	movlw	0
   501  002EF6  2206               	addwfc	patteren3@delay+1,f,c
   502  002EF8  2207               	addwfc	patteren3@delay+2,f,c
   503  002EFA  2208               	addwfc	patteren3@delay+3,f,c
   504  002EFC  5004               	movf	??_patteren3+3,w,c
   505  002EFE  1003               	iorwf	??_patteren3+2,w,c
   506  002F00  E106               	bnz	u130
   507  002F02  0E50               	movlw	80
   508  002F04  5C01               	subwf	??_patteren3,w,c
   509  002F06  0EC3               	movlw	195
   510  002F08  5802               	subwfb	??_patteren3+1,w,c
   511  002F0A  A0D8               	btfss	status,0,c
   512  002F0C  0012               	return	
   513  002F0E                     u130:
   514                           
   515                           ;main.c: 160: {
   516                           ;main.c: 161: if(flag==1)
   517  002F0E  0409               	decf	patteren3@flag,w,c
   518  002F10  A4D8               	btfss	status,2,c
   519  002F12  D004               	goto	l753
   520                           
   521                           ;main.c: 162: {
   522                           ;main.c: 163: PORTB=0xaa;
   523  002F14  0EAA               	movlw	170
   524  002F16  6E81               	movwf	3969,c	;volatile
   525                           
   526                           ;main.c: 164: flag++;
   527  002F18  2A09               	incf	patteren3@flag,f,c
   528                           
   529                           ;main.c: 166: }
   530  002F1A  0012               	return	
   531  002F1C                     l753:
   532                           
   533                           ;main.c: 168: else if(flag==2)
   534  002F1C  0E02               	movlw	2
   535  002F1E  1809               	xorwf	patteren3@flag,w,c
   536  002F20  A4D8               	btfss	status,2,c
   537  002F22  0012               	return	
   538                           
   539                           ;main.c: 169: {
   540                           ;main.c: 170: PORTB=~PORTB;
   541  002F24  1E81               	comf	3969,f,c	;volatile
   542                           
   543                           ;main.c: 171: flag=1;
   544  002F26  0E01               	movlw	1
   545  002F28  6E09               	movwf	patteren3@flag,c
   546  002F2A  0012               	return	
   547  002F2C                     __end_of_patteren3:
   548                           	opt stack 0
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           status	equ	0xFD8
   554                           
   555 ;; *************** function _patteren2 *****************
   556 ;; Defined at:
   557 ;;		line 128 in file "main.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  delay           4    0[COMRAM] unsigned long 
   562 ;;  count           1    4[COMRAM] unsigned char 
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   572 ;;      Params:         0       0       0       0       0       0       0
   573 ;;      Locals:         5       0       0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0       0       0
   575 ;;      Totals:         5       0       0       0       0       0       0
   576 ;;Total ram usage:        5 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; This function calls:
   579 ;;		Nothing
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text4
   586  002E70                     __ptext4:
   587                           	opt stack 0
   588  002E70                     _patteren2:
   589                           	opt stack 30
   590                           
   591                           ;main.c: 130: unsigned char count=0;
   592                           
   593                           ;incstack = 0
   594  002E70  0E00               	movlw	0
   595  002E72  6E05               	movwf	patteren2@count,c
   596                           
   597                           ;main.c: 131: unsigned long int delay=0;
   598  002E74  0E00               	movlw	0
   599  002E76  6E01               	movwf	patteren2@delay,c
   600  002E78  0E00               	movlw	0
   601  002E7A  6E02               	movwf	patteren2@delay+1,c
   602  002E7C  0E00               	movlw	0
   603  002E7E  6E03               	movwf	patteren2@delay+2,c
   604  002E80  0E00               	movlw	0
   605  002E82  6E04               	movwf	patteren2@delay+3,c
   606                           
   607                           ;main.c: 132: if(++delay >=5000)
   608  002E84  0E01               	movlw	1
   609  002E86  2601               	addwf	patteren2@delay,f,c
   610  002E88  0E00               	movlw	0
   611  002E8A  2202               	addwfc	patteren2@delay+1,f,c
   612  002E8C  2203               	addwfc	patteren2@delay+2,f,c
   613  002E8E  2204               	addwfc	patteren2@delay+3,f,c
   614  002E90  5004               	movf	patteren2@delay+3,w,c
   615  002E92  1003               	iorwf	patteren2@delay+2,w,c
   616  002E94  E106               	bnz	u100
   617  002E96  0E88               	movlw	136
   618  002E98  5C01               	subwf	patteren2@delay,w,c
   619  002E9A  0E13               	movlw	19
   620  002E9C  5802               	subwfb	patteren2@delay+1,w,c
   621  002E9E  A0D8               	btfss	status,0,c
   622  002EA0  D00C               	goto	l739
   623  002EA2                     u100:
   624                           
   625                           ;main.c: 133: {
   626                           ;main.c: 134: if(count <8)
   627  002EA2  0E08               	movlw	8
   628  002EA4  6005               	cpfslt	patteren2@count,c
   629  002EA6  D003               	goto	l735
   630                           
   631                           ;main.c: 135: {
   632                           ;main.c: 136: PORTB=PORTB<<1 | 1;
   633  002EA8  80D8               	bsf	status,0,c
   634  002EAA  3681               	rlcf	3969,f,c	;volatile
   635                           
   636                           ;main.c: 137: }
   637  002EAC  D006               	goto	l739
   638  002EAE                     l735:
   639                           
   640                           ;main.c: 138: else if( count <16)
   641  002EAE  0E10               	movlw	16
   642  002EB0  6005               	cpfslt	patteren2@count,c
   643  002EB2  D003               	goto	l739
   644                           
   645                           ;main.c: 139: {
   646                           ;main.c: 140: PORTB=PORTB<<1;
   647  002EB4  5081               	movf	3969,w,c	;volatile
   648  002EB6  2481               	addwf	3969,w,c	;volatile
   649  002EB8  6E81               	movwf	3969,c	;volatile
   650  002EBA                     l739:
   651                           
   652                           ;main.c: 141: }
   653                           ;main.c: 143: }
   654                           ;main.c: 144: count ++;
   655  002EBA  2A05               	incf	patteren2@count,f,c
   656                           
   657                           ;main.c: 145: delay=0;
   658  002EBC  0E00               	movlw	0
   659  002EBE  6E01               	movwf	patteren2@delay,c
   660  002EC0  0E00               	movlw	0
   661  002EC2  6E02               	movwf	patteren2@delay+1,c
   662  002EC4  0E00               	movlw	0
   663  002EC6  6E03               	movwf	patteren2@delay+2,c
   664  002EC8  0E00               	movlw	0
   665  002ECA  6E04               	movwf	patteren2@delay+3,c
   666  002ECC  0012               	return		;funcret
   667  002ECE                     __end_of_patteren2:
   668                           	opt stack 0
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           status	equ	0xFD8
   674                           
   675 ;; *************** function _patteren1 *****************
   676 ;; Defined at:
   677 ;;		line 90 in file "main.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  delay           4    0[COMRAM] unsigned long 
   682 ;;  count           1    4[COMRAM] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, status,2, status,0
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   692 ;;      Params:         0       0       0       0       0       0       0
   693 ;;      Locals:         5       0       0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0
   695 ;;      Totals:         5       0       0       0       0       0       0
   696 ;;Total ram usage:        5 bytes
   697 ;; Hardware stack levels used:    1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text5
   706  002F8A                     __ptext5:
   707                           	opt stack 0
   708  002F8A                     _patteren1:
   709                           	opt stack 30
   710                           
   711                           ;main.c: 92: unsigned char count=0;
   712                           
   713                           ;incstack = 0
   714  002F8A  0E00               	movlw	0
   715  002F8C  6E05               	movwf	patteren1@count,c
   716                           
   717                           ;main.c: 93: unsigned long int delay=0;
   718  002F8E  0E00               	movlw	0
   719  002F90  6E01               	movwf	patteren1@delay,c
   720  002F92  0E00               	movlw	0
   721  002F94  6E02               	movwf	patteren1@delay+1,c
   722  002F96  0E00               	movlw	0
   723  002F98  6E03               	movwf	patteren1@delay+2,c
   724  002F9A  0E00               	movlw	0
   725  002F9C  6E04               	movwf	patteren1@delay+3,c
   726                           
   727                           ;main.c: 95: if(++delay >=5000)
   728  002F9E  0E01               	movlw	1
   729  002FA0  2601               	addwf	patteren1@delay,f,c
   730  002FA2  0E00               	movlw	0
   731  002FA4  2202               	addwfc	patteren1@delay+1,f,c
   732  002FA6  2203               	addwfc	patteren1@delay+2,f,c
   733  002FA8  2204               	addwfc	patteren1@delay+3,f,c
   734  002FAA  5004               	movf	patteren1@delay+3,w,c
   735  002FAC  1003               	iorwf	patteren1@delay+2,w,c
   736  002FAE  E106               	bnz	u10
   737  002FB0  0E88               	movlw	136
   738  002FB2  5C01               	subwf	patteren1@delay,w,c
   739  002FB4  0E13               	movlw	19
   740  002FB6  5802               	subwfb	patteren1@delay+1,w,c
   741  002FB8  A0D8               	btfss	status,0,c
   742  002FBA  0012               	return	
   743  002FBC                     u10:
   744                           
   745                           ;main.c: 96: {
   746                           ;main.c: 97: if(count <8)
   747  002FBC  0E08               	movlw	8
   748  002FBE  6005               	cpfslt	patteren1@count,c
   749  002FC0  D003               	goto	l689
   750                           
   751                           ;main.c: 98: {
   752                           ;main.c: 99: PORTB=PORTB<<1 | 1;
   753  002FC2  80D8               	bsf	status,0,c
   754  002FC4  3681               	rlcf	3969,f,c	;volatile
   755                           
   756                           ;main.c: 100: }
   757  002FC6  D012               	goto	l701
   758  002FC8                     l689:
   759                           
   760                           ;main.c: 101: else if( count <16)
   761  002FC8  0E10               	movlw	16
   762  002FCA  6005               	cpfslt	patteren1@count,c
   763  002FCC  D003               	goto	l693
   764                           
   765                           ;main.c: 102: {
   766                           ;main.c: 103: PORTB=PORTB<<1;
   767  002FCE  5081               	movf	3969,w,c	;volatile
   768  002FD0  2481               	addwf	3969,w,c	;volatile
   769  002FD2  D00B               	goto	L1
   770  002FD4                     l693:
   771                           
   772                           ;main.c: 107: else if(count <23)
   773  002FD4  0E17               	movlw	23
   774  002FD6  6005               	cpfslt	patteren1@count,c
   775  002FD8  D003               	goto	l697
   776                           
   777                           ;main.c: 108: {
   778                           ;main.c: 109: PORTB=PORTB>>1 | 0x80;
   779  002FDA  80D8               	bsf	status,0,c
   780  002FDC  3281               	rrcf	3969,f,c	;volatile
   781                           
   782                           ;main.c: 111: }
   783  002FDE  D006               	goto	l701
   784  002FE0                     l697:
   785                           
   786                           ;main.c: 112: else if(count <31)
   787  002FE0  0E1F               	movlw	31
   788  002FE2  6005               	cpfslt	patteren1@count,c
   789  002FE4  D003               	goto	l701
   790                           
   791                           ;main.c: 113: {
   792                           ;main.c: 114: PORTB=PORTB>>1;
   793  002FE6  90D8               	bcf	status,0,c
   794  002FE8  3081               	rrcf	3969,w,c	;volatile
   795  002FEA                     L1:
   796  002FEA  6E81               	movwf	3969,c	;volatile
   797  002FEC                     l701:
   798                           
   799                           ;main.c: 116: }
   800                           ;main.c: 117: count ++;
   801  002FEC  2A05               	incf	patteren1@count,f,c
   802                           
   803                           ;main.c: 118: delay=0;
   804  002FEE  0E00               	movlw	0
   805  002FF0  6E01               	movwf	patteren1@delay,c
   806  002FF2  0E00               	movlw	0
   807  002FF4  6E02               	movwf	patteren1@delay+1,c
   808  002FF6  0E00               	movlw	0
   809  002FF8  6E03               	movwf	patteren1@delay+2,c
   810  002FFA  0E00               	movlw	0
   811  002FFC  6E04               	movwf	patteren1@delay+3,c
   812  002FFE  0012               	return	
   813  003000                     __end_of_patteren1:
   814                           	opt stack 0
   815                           tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           tblptrl	equ	0xFF6
   818                           tablat	equ	0xFF5
   819                           status	equ	0xFD8
   820                           
   821 ;; *************** function _init_config *****************
   822 ;; Defined at:
   823 ;;		line 57 in file "main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   837 ;;      Params:         0       0       0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0
   839 ;;      Temps:          0       0       0       0       0       0       0
   840 ;;      Totals:         0       0       0       0       0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_main
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text6
   851  002DCA                     __ptext6:
   852                           	opt stack 0
   853  002DCA                     _init_config:
   854                           	opt stack 30
   855                           
   856                           ;main.c: 59: TRISB=0x00;
   857                           
   858                           ;incstack = 0
   859  002DCA  0E00               	movlw	0
   860  002DCC  6E93               	movwf	3987,c	;volatile
   861                           
   862                           ;main.c: 60: TRISC=TRISC|0x0F;
   863  002DCE  5094               	movf	3988,w,c	;volatile
   864  002DD0  090F               	iorlw	15
   865  002DD2  6E94               	movwf	3988,c	;volatile
   866                           
   867                           ;main.c: 61: PORTB=0x00;
   868  002DD4  0E00               	movlw	0
   869  002DD6  6E81               	movwf	3969,c	;volatile
   870  002DD8  0012               	return		;funcret
   871  002DDA                     __end_of_init_config:
   872                           	opt stack 0
   873  0000                     tblptru	equ	0xFF8
   874                           tblptrh	equ	0xFF7
   875                           tblptrl	equ	0xFF6
   876                           tablat	equ	0xFF5
   877                           status	equ	0xFD8
   878                           tblptru	equ	0xFF8
   879                           tblptrh	equ	0xFF7
   880                           tblptrl	equ	0xFF6
   881                           tablat	equ	0xFF5
   882                           status	equ	0xFD8
   883                           
   884                           	psect	rparam
   885  0000                     tblptru	equ	0xFF8
   886                           tblptrh	equ	0xFF7
   887                           tblptrl	equ	0xFF6
   888                           tablat	equ	0xFF5
   889                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_patteren3
    _main->_patteren4

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     285
                                              9 COMRAM     1     1      0
                        _init_config
                          _patteren1
                          _patteren2
                          _patteren3
                          _patteren4
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _patteren4                                            9     9      0      45
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _patteren3                                            9     9      0      45
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _patteren2                                            5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _patteren1                                            5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
   _patteren1
   _patteren2
   _patteren3
   _patteren4
   _read_digital_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       B       1       11.6%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B       3        0.0%
DATA                 0      0       B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Jun  1 05:19:38 2023

                          l23 2E30                            u10 2FBC                           l701 2FEC  
                         l735 2EAE                           l719 2E16                           l753 2F1C  
                         l739 2EBA                           l693 2FD4                           l781 2E46  
                         l697 2FE0                           l689 2FC8                           l769 2F7A  
                         l785 2E54                           l789 2E62                           u100 2EA2  
                         u130 2F0E                           u160 2F6C         ??_read_digital_keypad 0001  
                        _main 2E28                          start 0000                  ___param_bank 000010  
                       ?_main 0001                  ?_init_config 0001                         _PORTB 000F81  
                       _PORTC 000F82                         _TRISB 000F93                         _TRISC 000F94  
                       tablat 000FF5                         status 000FD8               __initialization 2DDA  
                __end_of_main 2E70                        ??_main 000A                 __activetblptr 000000  
                __pdataCOMRAM 000B                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                    __accesstop 0060       __end_of__initialization 2DEC  
               ___rparam_used 000001                __pcstackCOMRAM 0001          __size_of_init_config 0010  
          __size_of_patteren1 0076            __size_of_patteren2 005E            __size_of_patteren3 005E  
          __size_of_patteren4 005E   __end_of_read_digital_keypad 2E28                 patteren3@flag 0009  
               patteren4@flag 0009                       __Hparam 0000                       __Lparam 0000  
                     __pcinit 2DDA                       __ramtop 0600                       __ptext0 2E28  
                     __ptext1 2DF2                       __ptext2 2F2C                       __ptext3 2ECE  
                     __ptext4 2E70                       __ptext5 2F8A                       __ptext6 2DCA  
                     main@key 000A             __end_of_patteren1 3000             __end_of_patteren2 2ECE  
           __end_of_patteren3 2F2C             __end_of_patteren4 2F8A          end_of_initialization 2DEC  
               __pidataCOMRAM 3000           start_initialization 2DDA                 ??_init_config 0001  
         __end_of_init_config 2DDA  __size_of_read_digital_keypad 0036                     _patteren1 2F8A  
                   _patteren2 2E70                     _patteren3 2ECE                     _patteren4 2F2C  
              patteren1@delay 0001                patteren2@delay 0001                patteren1@count 0005  
              patteren3@delay 0005                patteren2@count 0005                patteren4@delay 0005  
                  ?_patteren1 0001                    ?_patteren2 0001                    ?_patteren3 0001  
                  ?_patteren4 0001                      __Hrparam 0000                      __Lrparam 0000  
                 _init_config 2DCA                 __size_of_main 0048       read_digital_keypad@once 000B  
                 ??_patteren1 0001                   ??_patteren2 0001                   ??_patteren3 0001  
                 ??_patteren4 0001           _read_digital_keypad 2DF2  read_digital_keypad@detection 0002  
        ?_read_digital_keypad 0001  
