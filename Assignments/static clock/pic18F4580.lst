

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri Jun  9 03:27:43 2023

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	idataCOMRAM
    22  000454                     __pidataCOMRAM:
    23                           	opt stack 0
    24                           
    25                           ;initializer for _data
    26  000454  E7                 	db	231
    27  000455  21                 	db	33
    28  000456  CB                 	db	203
    29  000457  6B                 	db	107
    30  000458  2D                 	db	45
    31  000459  6E                 	db	110
    32  00045A  EE                 	db	238
    33  00045B  23                 	db	35
    34  00045C  EF                 	db	239
    35  00045D  6F                 	db	111
    36                           
    37                           ;initializer for _hour
    38  00045E  000C               	dw	12
    39  0000                     _TMR0	set	4054
    40  0000                     _PORTA	set	3968
    41  0000                     _PORTD	set	3971
    42  0000                     _TRISA	set	3986
    43  0000                     _TRISD	set	3989
    44  0000                     _GIE	set	32663
    45  0000                     _PEIE	set	32662
    46  0000                     _PSA	set	32427
    47  0000                     _T08BIT	set	32430
    48  0000                     _T0CS	set	32429
    49  0000                     _TMR0IE	set	32661
    50  0000                     _TMR0IF	set	32658
    51  0000                     _TMR0ON	set	32431
    52                           
    53                           ; #config settings
    54                           
    55                           	psect	cinit
    56  0003EE                     __pcinit:
    57                           	opt stack 0
    58  0003EE                     start_initialization:
    59                           	opt stack 0
    60  0003EE                     __initialization:
    61                           	opt stack 0
    62                           
    63                           ; Clear objects allocated to COMRAM (12 bytes)
    64  0003EE  EE00  F023         	lfsr	0,__pbssCOMRAM
    65  0003F2  0E0C               	movlw	12
    66  0003F4                     clear_0:
    67  0003F4  6AEE               	clrf	postinc0,c
    68  0003F6  06E8               	decf	wreg,f,c
    69  0003F8  E1FD               	bnz	clear_0
    70                           
    71                           ; Initialize objects allocated to COMRAM (12 bytes)
    72                           ; load TBLPTR registers with __pidataCOMRAM
    73  0003FA  0E54               	movlw	low __pidataCOMRAM
    74  0003FC  6EF6               	movwf	tblptrl,c
    75  0003FE  0E04               	movlw	high __pidataCOMRAM
    76  000400  6EF7               	movwf	tblptrh,c
    77  000402  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    78  000404  6EF8               	movwf	tblptru,c
    79  000406  EE00  F02F         	lfsr	0,__pdataCOMRAM
    80  00040A  EE10 F00C          	lfsr	1,12
    81  00040E                     copy_data0:
    82  00040E  0009               	tblrd		*+
    83  000410  CFF5 FFEE          	movff	tablat,postinc0
    84  000414  50E5               	movf	postdec1,w,c
    85  000416  50E1               	movf	fsr1l,w,c
    86  000418  E1FA               	bnz	copy_data0
    87  00041A                     end_of_initialization:
    88                           	opt stack 0
    89  00041A                     __end_of__initialization:
    90                           	opt stack 0
    91  00041A  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    92  00041C  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    93  00041E  0100               	movlb	0
    94  000420  EF0D  F000         	goto	_main	;jump to C main() function
    95                           tblptru	equ	0xFF8
    96                           tblptrh	equ	0xFF7
    97                           tblptrl	equ	0xFF6
    98                           tablat	equ	0xFF5
    99                           postinc0	equ	0xFEE
   100                           wreg	equ	0xFE8
   101                           postdec1	equ	0xFE5
   102                           fsr1l	equ	0xFE1
   103                           
   104                           	psect	bssCOMRAM
   105  000023                     __pbssCOMRAM:
   106                           	opt stack 0
   107  000023                     _ssd:
   108                           	opt stack 0
   109  000023                     	ds	4
   110  000027                     _half_sec:
   111                           	opt stack 0
   112  000027                     	ds	2
   113  000029                     _minute:
   114                           	opt stack 0
   115  000029                     	ds	2
   116  00002B                     	ds	2
   117  00002D                     isr@count:
   118                           	opt stack 0
   119  00002D                     	ds	2
   120                           tblptru	equ	0xFF8
   121                           tblptrh	equ	0xFF7
   122                           tblptrl	equ	0xFF6
   123                           tablat	equ	0xFF5
   124                           postinc0	equ	0xFEE
   125                           wreg	equ	0xFE8
   126                           postdec1	equ	0xFE5
   127                           fsr1l	equ	0xFE1
   128                           
   129                           	psect	dataCOMRAM
   130  00002F                     __pdataCOMRAM:
   131                           	opt stack 0
   132  00002F                     _data:
   133                           	opt stack 0
   134  00002F                     	ds	10
   135  000039                     _hour:
   136                           	opt stack 0
   137  000039                     	ds	2
   138                           tblptru	equ	0xFF8
   139                           tblptrh	equ	0xFF7
   140                           tblptrl	equ	0xFF6
   141                           tablat	equ	0xFF5
   142                           postinc0	equ	0xFEE
   143                           wreg	equ	0xFE8
   144                           postdec1	equ	0xFE5
   145                           fsr1l	equ	0xFE1
   146                           
   147                           	psect	cstackCOMRAM
   148  000001                     __pcstackCOMRAM:
   149                           	opt stack 0
   150  000001                     ??_isr:
   151                           
   152                           ; 1 bytes @ 0x0
   153  000001                     	ds	14
   154  00000F                     ?___awdiv:
   155                           	opt stack 0
   156  00000F                     ___awdiv@dividend:
   157                           	opt stack 0
   158                           
   159                           ; 2 bytes @ 0xE
   160  00000F                     	ds	2
   161  000011                     ___awdiv@divisor:
   162                           	opt stack 0
   163                           
   164                           ; 2 bytes @ 0x10
   165  000011                     	ds	2
   166  000013                     ___awdiv@counter:
   167                           	opt stack 0
   168                           
   169                           ; 1 bytes @ 0x12
   170  000013                     	ds	1
   171  000014                     ___awdiv@sign:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x13
   175  000014                     	ds	1
   176  000015                     ___awdiv@quotient:
   177                           	opt stack 0
   178                           
   179                           ; 2 bytes @ 0x14
   180  000015                     	ds	2
   181  000017                     ?___awmod:
   182                           	opt stack 0
   183  000017                     ___awmod@dividend:
   184                           	opt stack 0
   185                           
   186                           ; 2 bytes @ 0x16
   187  000017                     	ds	2
   188  000019                     ___awmod@divisor:
   189                           	opt stack 0
   190                           
   191                           ; 2 bytes @ 0x18
   192  000019                     	ds	2
   193  00001B                     ___awmod@counter:
   194                           	opt stack 0
   195                           
   196                           ; 1 bytes @ 0x1A
   197  00001B                     	ds	1
   198  00001C                     ___awmod@sign:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x1B
   202  00001C                     	ds	1
   203  00001D                     ??_main:
   204                           
   205                           ; 1 bytes @ 0x1C
   206  00001D                     	ds	2
   207  00001F                     main@j:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0x1E
   211  00001F                     	ds	2
   212  000021                     main@i:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x20
   216  000021                     	ds	2
   217                           tblptru	equ	0xFF8
   218                           tblptrh	equ	0xFF7
   219                           tblptrl	equ	0xFF6
   220                           tablat	equ	0xFF5
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           postdec1	equ	0xFE5
   224                           fsr1l	equ	0xFE1
   225                           
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 17 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;  j               2   30[COMRAM] unsigned int 
   236 ;;  i               2   32[COMRAM] int 
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   246 ;;      Params:         0       0       0       0       0       0       0
   247 ;;      Locals:         4       0       0       0       0       0       0
   248 ;;      Temps:          2       0       0       0       0       0       0
   249 ;;      Totals:         6       0       0       0       0       0       0
   250 ;;Total ram usage:        6 bytes
   251 ;; Hardware stack levels required when called:    3
   252 ;; This function calls:
   253 ;;		___awdiv
   254 ;;		___awmod
   255 ;;		_init_config
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text0
   262  00001A                     __ptext0:
   263                           	opt stack 0
   264  00001A                     _main:
   265                           	opt stack 28
   266                           
   267                           ;main.c: 19: init_config();
   268                           
   269                           ;incstack = 0
   270  00001A  EC1F  F002         	call	_init_config	;wreg free
   271                           
   272                           ;main.c: 20: ssd[1]=data[(hour % 10)];
   273  00001E  C039  F017         	movff	_hour,___awmod@dividend
   274  000022  C03A  F018         	movff	_hour+1,___awmod@dividend+1
   275  000026  0E00               	movlw	0
   276  000028  6E1A               	movwf	___awmod@divisor+1,c
   277  00002A  0E0A               	movlw	10
   278  00002C  6E19               	movwf	___awmod@divisor,c
   279  00002E  ECBF  F001         	call	___awmod	;wreg free
   280  000032  0E2F               	movlw	low _data
   281  000034  2417               	addwf	?___awmod,w,c
   282  000036  6ED9               	movwf	fsr2l,c
   283  000038  0E00               	movlw	high _data
   284  00003A  2018               	addwfc	?___awmod+1,w,c
   285  00003C  6EDA               	movwf	fsr2h,c
   286  00003E  50DF               	movf	indf2,w,c
   287  000040  6E24               	movwf	_ssd+1,c
   288                           
   289                           ;main.c: 21: ssd[0]=data[((hour / 10)%10)];
   290  000042  0E00               	movlw	0
   291  000044  6E12               	movwf	___awdiv@divisor+1,c
   292  000046  0E0A               	movlw	10
   293  000048  6E11               	movwf	___awdiv@divisor,c
   294  00004A  C039  F00F         	movff	_hour,___awdiv@dividend
   295  00004E  C03A  F010         	movff	_hour+1,___awdiv@dividend+1
   296  000052  EC7D  F001         	call	___awdiv	;wreg free
   297  000056  C00F  F017         	movff	?___awdiv,___awmod@dividend
   298  00005A  C010  F018         	movff	?___awdiv+1,___awmod@dividend+1
   299  00005E  0E00               	movlw	0
   300  000060  6E1A               	movwf	___awmod@divisor+1,c
   301  000062  0E0A               	movlw	10
   302  000064  6E19               	movwf	___awmod@divisor,c
   303  000066  ECBF  F001         	call	___awmod	;wreg free
   304  00006A  0E2F               	movlw	low _data
   305  00006C  2417               	addwf	?___awmod,w,c
   306  00006E  6ED9               	movwf	fsr2l,c
   307  000070  0E00               	movlw	high _data
   308  000072  2018               	addwfc	?___awmod+1,w,c
   309  000074  6EDA               	movwf	fsr2h,c
   310  000076  50DF               	movf	indf2,w,c
   311  000078  6E23               	movwf	_ssd,c
   312                           
   313                           ;main.c: 22: ssd[3]=data[minute % 10];
   314  00007A  C029  F017         	movff	_minute,___awmod@dividend
   315  00007E  C02A  F018         	movff	_minute+1,___awmod@dividend+1
   316  000082  0E00               	movlw	0
   317  000084  6E1A               	movwf	___awmod@divisor+1,c
   318  000086  0E0A               	movlw	10
   319  000088  6E19               	movwf	___awmod@divisor,c
   320  00008A  ECBF  F001         	call	___awmod	;wreg free
   321  00008E  0E2F               	movlw	low _data
   322  000090  2417               	addwf	?___awmod,w,c
   323  000092  6ED9               	movwf	fsr2l,c
   324  000094  0E00               	movlw	high _data
   325  000096  2018               	addwfc	?___awmod+1,w,c
   326  000098  6EDA               	movwf	fsr2h,c
   327  00009A  50DF               	movf	indf2,w,c
   328  00009C  6E26               	movwf	_ssd+3,c
   329                           
   330                           ;main.c: 23: ssd[2]=data[(minute/10)%10];
   331  00009E  0E00               	movlw	0
   332  0000A0  6E12               	movwf	___awdiv@divisor+1,c
   333  0000A2  0E0A               	movlw	10
   334  0000A4  6E11               	movwf	___awdiv@divisor,c
   335  0000A6  C029  F00F         	movff	_minute,___awdiv@dividend
   336  0000AA  C02A  F010         	movff	_minute+1,___awdiv@dividend+1
   337  0000AE  EC7D  F001         	call	___awdiv	;wreg free
   338  0000B2  C00F  F017         	movff	?___awdiv,___awmod@dividend
   339  0000B6  C010  F018         	movff	?___awdiv+1,___awmod@dividend+1
   340  0000BA  0E00               	movlw	0
   341  0000BC  6E1A               	movwf	___awmod@divisor+1,c
   342  0000BE  0E0A               	movlw	10
   343  0000C0  6E19               	movwf	___awmod@divisor,c
   344  0000C2  ECBF  F001         	call	___awmod	;wreg free
   345  0000C6  0E2F               	movlw	low _data
   346  0000C8  2417               	addwf	?___awmod,w,c
   347  0000CA  6ED9               	movwf	fsr2l,c
   348  0000CC  0E00               	movlw	high _data
   349  0000CE  2018               	addwfc	?___awmod+1,w,c
   350  0000D0  6EDA               	movwf	fsr2h,c
   351  0000D2  50DF               	movf	indf2,w,c
   352  0000D4  6E25               	movwf	_ssd+2,c
   353  0000D6                     l922:
   354                           
   355                           ;main.c: 26: {
   356                           ;main.c: 27: for(int i=0;i < 4;i++)
   357  0000D6  0E00               	movlw	0
   358  0000D8  6E22               	movwf	main@i+1,c
   359  0000DA  0E00               	movlw	0
   360  0000DC  6E21               	movwf	main@i,c
   361  0000DE                     l924:
   362  0000DE  BE22               	btfsc	main@i+1,7,c
   363  0000E0  D006               	goto	l928
   364  0000E2  5022               	movf	main@i+1,w,c
   365  0000E4  E12A               	bnz	l946
   366  0000E6  0E04               	movlw	4
   367  0000E8  5C21               	subwf	main@i,w,c
   368  0000EA  B0D8               	btfsc	status,0,c
   369  0000EC  D026               	goto	l946
   370  0000EE                     l928:
   371                           
   372                           ;main.c: 28: {
   373                           ;main.c: 29: PORTD=ssd[i];
   374  0000EE  0E23               	movlw	low _ssd
   375  0000F0  2421               	addwf	main@i,w,c
   376  0000F2  6ED9               	movwf	fsr2l,c
   377  0000F4  0E00               	movlw	high _ssd
   378  0000F6  2022               	addwfc	main@i+1,w,c
   379  0000F8  6EDA               	movwf	fsr2h,c
   380  0000FA  50DF               	movf	indf2,w,c
   381  0000FC  6E83               	movwf	3971,c	;volatile
   382                           
   383                           ;main.c: 30: PORTA=(PORTA & 0Xf0 ) | (1<<i);
   384  0000FE  C021  F01D         	movff	main@i,??_main
   385  000102  0E01               	movlw	1
   386  000104  6E1E               	movwf	(??_main+1)& (0+255),c
   387  000106  2A1D               	incf	??_main,f,c
   388  000108  D002               	goto	u374
   389  00010A                     u375:
   390  00010A  90D8               	bcf	status,0,c
   391  00010C  361E               	rlcf	??_main+1,f,c
   392  00010E                     u374:
   393  00010E  2E1D               	decfsz	??_main,f,c
   394  000110  D7FC               	goto	u375
   395  000112  5080               	movf	3968,w,c	;volatile
   396  000114  0BF0               	andlw	240
   397  000116  101E               	iorwf	??_main+1,w,c
   398  000118  6E80               	movwf	3968,c	;volatile
   399                           
   400                           ;main.c: 31: for(unsigned int j =0;j<1000;j++);
   401  00011A  0E00               	movlw	0
   402  00011C  6E20               	movwf	main@j+1,c
   403  00011E  0E00               	movlw	0
   404  000120  6E1F               	movwf	main@j,c
   405  000122                     l934:
   406  000122  0EE8               	movlw	232
   407  000124  5C1F               	subwf	main@j,w,c
   408  000126  0E03               	movlw	3
   409  000128  5820               	subwfb	main@j+1,w,c
   410  00012A  B0D8               	btfsc	status,0,c
   411  00012C  D003               	goto	l942
   412  00012E  4A1F               	infsnz	main@j,f,c
   413  000130  2A20               	incf	main@j+1,f,c
   414  000132  D7F7               	goto	l934
   415  000134                     l942:
   416  000134  4A21               	infsnz	main@i,f,c
   417  000136  2A22               	incf	main@i+1,f,c
   418  000138  D7D2               	goto	l924
   419  00013A                     l946:
   420                           
   421                           ;main.c: 32: }
   422                           ;main.c: 33: if(half_sec == 2)
   423  00013A  0E02               	movlw	2
   424  00013C  1827               	xorwf	_half_sec,w,c
   425  00013E  1028               	iorwf	_half_sec+1,w,c
   426  000140  A4D8               	btfss	status,2,c
   427  000142  D064               	goto	l968
   428                           
   429                           ;main.c: 34: {
   430                           ;main.c: 36: half_sec=0;
   431  000144  0E00               	movlw	0
   432  000146  6E28               	movwf	_half_sec+1,c
   433  000148  0E00               	movlw	0
   434  00014A  6E27               	movwf	_half_sec,c
   435                           
   436                           ;main.c: 37: minute++;
   437  00014C  4A29               	infsnz	_minute,f,c
   438  00014E  2A2A               	incf	_minute+1,f,c
   439                           
   440                           ;main.c: 38: if(minute == 60)
   441  000150  0E3C               	movlw	60
   442  000152  1829               	xorwf	_minute,w,c
   443  000154  102A               	iorwf	_minute+1,w,c
   444  000156  A4D8               	btfss	status,2,c
   445  000158  D00F               	goto	l962
   446                           
   447                           ;main.c: 39: {
   448                           ;main.c: 40: hour++;
   449  00015A  4A39               	infsnz	_hour,f,c
   450  00015C  2A3A               	incf	_hour+1,f,c
   451                           
   452                           ;main.c: 41: minute=0;
   453  00015E  0E00               	movlw	0
   454  000160  6E2A               	movwf	_minute+1,c
   455  000162  0E00               	movlw	0
   456  000164  6E29               	movwf	_minute,c
   457                           
   458                           ;main.c: 42: if(hour == 24)
   459  000166  0E18               	movlw	24
   460  000168  1839               	xorwf	_hour,w,c
   461  00016A  103A               	iorwf	_hour+1,w,c
   462  00016C  A4D8               	btfss	status,2,c
   463  00016E  D004               	goto	l962
   464                           
   465                           ;main.c: 43: {
   466                           ;main.c: 44: hour=0;
   467  000170  0E00               	movlw	0
   468  000172  6E3A               	movwf	_hour+1,c
   469  000174  0E00               	movlw	0
   470  000176  6E39               	movwf	_hour,c
   471  000178                     l962:
   472                           
   473                           ;main.c: 45: }
   474                           ;main.c: 47: }
   475                           ;main.c: 49: ssd[0]=data[(hour / 10)%10];
   476  000178  0E00               	movlw	0
   477  00017A  6E12               	movwf	___awdiv@divisor+1,c
   478  00017C  0E0A               	movlw	10
   479  00017E  6E11               	movwf	___awdiv@divisor,c
   480  000180  C039  F00F         	movff	_hour,___awdiv@dividend
   481  000184  C03A  F010         	movff	_hour+1,___awdiv@dividend+1
   482  000188  EC7D  F001         	call	___awdiv	;wreg free
   483  00018C  C00F  F017         	movff	?___awdiv,___awmod@dividend
   484  000190  C010  F018         	movff	?___awdiv+1,___awmod@dividend+1
   485  000194  0E00               	movlw	0
   486  000196  6E1A               	movwf	___awmod@divisor+1,c
   487  000198  0E0A               	movlw	10
   488  00019A  6E19               	movwf	___awmod@divisor,c
   489  00019C  ECBF  F001         	call	___awmod	;wreg free
   490  0001A0  0E2F               	movlw	low _data
   491  0001A2  2417               	addwf	?___awmod,w,c
   492  0001A4  6ED9               	movwf	fsr2l,c
   493  0001A6  0E00               	movlw	high _data
   494  0001A8  2018               	addwfc	?___awmod+1,w,c
   495  0001AA  6EDA               	movwf	fsr2h,c
   496  0001AC  50DF               	movf	indf2,w,c
   497  0001AE  6E23               	movwf	_ssd,c
   498                           
   499                           ;main.c: 50: ssd[3]=data[minute % 10];
   500  0001B0  C029  F017         	movff	_minute,___awmod@dividend
   501  0001B4  C02A  F018         	movff	_minute+1,___awmod@dividend+1
   502  0001B8  0E00               	movlw	0
   503  0001BA  6E1A               	movwf	___awmod@divisor+1,c
   504  0001BC  0E0A               	movlw	10
   505  0001BE  6E19               	movwf	___awmod@divisor,c
   506  0001C0  ECBF  F001         	call	___awmod	;wreg free
   507  0001C4  0E2F               	movlw	low _data
   508  0001C6  2417               	addwf	?___awmod,w,c
   509  0001C8  6ED9               	movwf	fsr2l,c
   510  0001CA  0E00               	movlw	high _data
   511  0001CC  2018               	addwfc	?___awmod+1,w,c
   512  0001CE  6EDA               	movwf	fsr2h,c
   513  0001D0  50DF               	movf	indf2,w,c
   514  0001D2  6E26               	movwf	_ssd+3,c
   515                           
   516                           ;main.c: 51: ssd[2]=data[(minute/10)%10];
   517  0001D4  0E00               	movlw	0
   518  0001D6  6E12               	movwf	___awdiv@divisor+1,c
   519  0001D8  0E0A               	movlw	10
   520  0001DA  6E11               	movwf	___awdiv@divisor,c
   521  0001DC  C029  F00F         	movff	_minute,___awdiv@dividend
   522  0001E0  C02A  F010         	movff	_minute+1,___awdiv@dividend+1
   523  0001E4  EC7D  F001         	call	___awdiv	;wreg free
   524  0001E8  C00F  F017         	movff	?___awdiv,___awmod@dividend
   525  0001EC  C010  F018         	movff	?___awdiv+1,___awmod@dividend+1
   526  0001F0  0E00               	movlw	0
   527  0001F2  6E1A               	movwf	___awmod@divisor+1,c
   528  0001F4  0E0A               	movlw	10
   529  0001F6  6E19               	movwf	___awmod@divisor,c
   530  0001F8  ECBF  F001         	call	___awmod	;wreg free
   531  0001FC  0E2F               	movlw	low _data
   532  0001FE  2417               	addwf	?___awmod,w,c
   533  000200  6ED9               	movwf	fsr2l,c
   534  000202  0E00               	movlw	high _data
   535  000204  2018               	addwfc	?___awmod+1,w,c
   536  000206  6EDA               	movwf	fsr2h,c
   537  000208  50DF               	movf	indf2,w,c
   538  00020A  6E25               	movwf	_ssd+2,c
   539  00020C                     l968:
   540                           
   541                           ;main.c: 53: }
   542                           ;main.c: 54: if(half_sec % 2)
   543  00020C  A027               	btfss	_half_sec,0,c
   544  00020E  D013               	goto	l972
   545                           
   546                           ;main.c: 55: ssd[1]=data[(hour % 10 )] | 0x10;
   547  000210  C039  F017         	movff	_hour,___awmod@dividend
   548  000214  C03A  F018         	movff	_hour+1,___awmod@dividend+1
   549  000218  0E00               	movlw	0
   550  00021A  6E1A               	movwf	___awmod@divisor+1,c
   551  00021C  0E0A               	movlw	10
   552  00021E  6E19               	movwf	___awmod@divisor,c
   553  000220  ECBF  F001         	call	___awmod	;wreg free
   554  000224  0E2F               	movlw	low _data
   555  000226  2417               	addwf	?___awmod,w,c
   556  000228  6ED9               	movwf	fsr2l,c
   557  00022A  0E00               	movlw	high _data
   558  00022C  2018               	addwfc	?___awmod+1,w,c
   559  00022E  6EDA               	movwf	fsr2h,c
   560  000230  50DF               	movf	indf2,w,c
   561  000232  0910               	iorlw	16
   562  000234  D011               	goto	L1
   563  000236                     l972:
   564                           
   565                           ;main.c: 56: else
   566                           ;main.c: 57: ssd[1]=data[(hour % 10 )];
   567  000236  C039  F017         	movff	_hour,___awmod@dividend
   568  00023A  C03A  F018         	movff	_hour+1,___awmod@dividend+1
   569  00023E  0E00               	movlw	0
   570  000240  6E1A               	movwf	___awmod@divisor+1,c
   571  000242  0E0A               	movlw	10
   572  000244  6E19               	movwf	___awmod@divisor,c
   573  000246  ECBF  F001         	call	___awmod	;wreg free
   574  00024A  0E2F               	movlw	low _data
   575  00024C  2417               	addwf	?___awmod,w,c
   576  00024E  6ED9               	movwf	fsr2l,c
   577  000250  0E00               	movlw	high _data
   578  000252  2018               	addwfc	?___awmod+1,w,c
   579  000254  6EDA               	movwf	fsr2h,c
   580  000256  50DF               	movf	indf2,w,c
   581  000258                     L1:
   582  000258  6E24               	movwf	_ssd+1,c
   583  00025A  D73D               	goto	l922
   584  00025C                     __end_of_main:
   585                           	opt stack 0
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           postdec1	equ	0xFE5
   593                           fsr1l	equ	0xFE1
   594                           indf2	equ	0xFDF
   595                           fsr2h	equ	0xFDA
   596                           fsr2l	equ	0xFD9
   597                           status	equ	0xFD8
   598                           
   599 ;; *************** function _init_config *****************
   600 ;; Defined at:
   601 ;;		line 68 in file "main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   615 ;;      Params:         0       0       0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0
   618 ;;      Totals:         0       0       0       0       0       0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels used:    1
   621 ;; Hardware stack levels required when called:    2
   622 ;; This function calls:
   623 ;;		_init_timer0
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text1
   630  00043E                     __ptext1:
   631                           	opt stack 0
   632  00043E                     _init_config:
   633                           	opt stack 28
   634                           
   635                           ;main.c: 70: TRISD=0X00;
   636                           
   637                           ;incstack = 0
   638  00043E  0E00               	movlw	0
   639  000440  6E95               	movwf	3989,c	;volatile
   640                           
   641                           ;main.c: 71: TRISA=TRISA & 0XF0;
   642  000442  5092               	movf	3986,w,c	;volatile
   643  000444  0BF0               	andlw	240
   644  000446  6E92               	movwf	3986,c	;volatile
   645                           
   646                           ;main.c: 72: PORTA=PORTA & 0XF0;
   647  000448  5080               	movf	3968,w,c	;volatile
   648  00044A  0BF0               	andlw	240
   649  00044C  6E80               	movwf	3968,c	;volatile
   650                           
   651                           ;main.c: 73: init_timer0();
   652  00044E  EC12  F002         	call	_init_timer0	;wreg free
   653  000452  0012               	return		;funcret
   654  000454                     __end_of_init_config:
   655                           	opt stack 0
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           postinc0	equ	0xFEE
   661                           wreg	equ	0xFE8
   662                           postdec1	equ	0xFE5
   663                           fsr1l	equ	0xFE1
   664                           indf2	equ	0xFDF
   665                           fsr2h	equ	0xFDA
   666                           fsr2l	equ	0xFD9
   667                           status	equ	0xFD8
   668                           
   669 ;; *************** function _init_timer0 *****************
   670 ;; Defined at:
   671 ;;		line 75 in file "main.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   685 ;;      Params:         0       0       0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_init_config
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text2
   700  000424                     __ptext2:
   701                           	opt stack 0
   702  000424                     _init_timer0:
   703                           	opt stack 28
   704                           
   705                           ;main.c: 77: GIE=1;
   706                           
   707                           ;incstack = 0
   708  000424  8EF2               	bsf	intcon,7,c	;volatile
   709                           
   710                           ;main.c: 78: PEIE=1;
   711  000426  8CF2               	bsf	intcon,6,c	;volatile
   712                           
   713                           ;main.c: 79: TMR0IE=1;
   714  000428  8AF2               	bsf	intcon,5,c	;volatile
   715                           
   716                           ;main.c: 80: TMR0IF=0;
   717  00042A  94F2               	bcf	intcon,2,c	;volatile
   718                           
   719                           ;main.c: 81: TMR0ON=1;
   720  00042C  8ED5               	bsf	4053,7,c	;volatile
   721                           
   722                           ;main.c: 82: T08BIT=1;
   723  00042E  8CD5               	bsf	4053,6,c	;volatile
   724                           
   725                           ;main.c: 83: T0CS=0;
   726  000430  9AD5               	bcf	4053,5,c	;volatile
   727                           
   728                           ;main.c: 84: PSA=1;
   729  000432  86D5               	bsf	4053,3,c	;volatile
   730                           
   731                           ;main.c: 85: TMR0=6;
   732  000434  0E00               	movlw	0
   733  000436  6ED7               	movwf	4055,c	;volatile
   734  000438  0E06               	movlw	6
   735  00043A  6ED6               	movwf	4054,c	;volatile
   736  00043C  0012               	return		;funcret
   737  00043E                     __end_of_init_timer0:
   738                           	opt stack 0
   739                           tblptru	equ	0xFF8
   740                           tblptrh	equ	0xFF7
   741                           tblptrl	equ	0xFF6
   742                           tablat	equ	0xFF5
   743                           intcon	equ	0xFF2
   744                           postinc0	equ	0xFEE
   745                           wreg	equ	0xFE8
   746                           postdec1	equ	0xFE5
   747                           fsr1l	equ	0xFE1
   748                           indf2	equ	0xFDF
   749                           fsr2h	equ	0xFDA
   750                           fsr2l	equ	0xFD9
   751                           status	equ	0xFD8
   752                           
   753 ;; *************** function ___awmod *****************
   754 ;; Defined at:
   755 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/awmod.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  dividend        2   22[COMRAM] int 
   758 ;;  divisor         2   24[COMRAM] int 
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  sign            1   27[COMRAM] unsigned char 
   761 ;;  counter         1   26[COMRAM] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  2   22[COMRAM] int 
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   771 ;;      Params:         4       0       0       0       0       0       0
   772 ;;      Locals:         2       0       0       0       0       0       0
   773 ;;      Temps:          0       0       0       0       0       0       0
   774 ;;      Totals:         6       0       0       0       0       0       0
   775 ;;Total ram usage:        6 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    1
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text3
   786  00037E                     __ptext3:
   787                           	opt stack 0
   788  00037E                     ___awmod:
   789                           	opt stack 29
   790                           
   791                           ;incstack = 0
   792  00037E  0E00               	movlw	0
   793  000380  6E1C               	movwf	___awmod@sign,c
   794  000382  AE18               	btfss	___awmod@dividend+1,7,c
   795  000384  D006               	goto	l884
   796  000386  6C17               	negf	___awmod@dividend,c
   797  000388  1E18               	comf	___awmod@dividend+1,f,c
   798  00038A  B0D8               	btfsc	status,0,c
   799  00038C  2A18               	incf	___awmod@dividend+1,f,c
   800  00038E  0E01               	movlw	1
   801  000390  6E1C               	movwf	___awmod@sign,c
   802  000392                     l884:
   803  000392  AE1A               	btfss	___awmod@divisor+1,7,c
   804  000394  D004               	goto	l888
   805  000396  6C19               	negf	___awmod@divisor,c
   806  000398  1E1A               	comf	___awmod@divisor+1,f,c
   807  00039A  B0D8               	btfsc	status,0,c
   808  00039C  2A1A               	incf	___awmod@divisor+1,f,c
   809  00039E                     l888:
   810  00039E  5019               	movf	___awmod@divisor,w,c
   811  0003A0  101A               	iorwf	___awmod@divisor+1,w,c
   812  0003A2  B4D8               	btfsc	status,2,c
   813  0003A4  D018               	goto	l904
   814  0003A6  0E01               	movlw	1
   815  0003A8  6E1B               	movwf	___awmod@counter,c
   816  0003AA  D004               	goto	l894
   817  0003AC                     l892:
   818  0003AC  90D8               	bcf	status,0,c
   819  0003AE  3619               	rlcf	___awmod@divisor,f,c
   820  0003B0  361A               	rlcf	___awmod@divisor+1,f,c
   821  0003B2  2A1B               	incf	___awmod@counter,f,c
   822  0003B4                     l894:
   823  0003B4  AE1A               	btfss	___awmod@divisor+1,7,c
   824  0003B6  D7FA               	goto	l892
   825  0003B8                     l896:
   826  0003B8  5019               	movf	___awmod@divisor,w,c
   827  0003BA  5C17               	subwf	___awmod@dividend,w,c
   828  0003BC  501A               	movf	___awmod@divisor+1,w,c
   829  0003BE  5818               	subwfb	___awmod@dividend+1,w,c
   830  0003C0  A0D8               	btfss	status,0,c
   831  0003C2  D004               	goto	l900
   832  0003C4  5019               	movf	___awmod@divisor,w,c
   833  0003C6  5E17               	subwf	___awmod@dividend,f,c
   834  0003C8  501A               	movf	___awmod@divisor+1,w,c
   835  0003CA  5A18               	subwfb	___awmod@dividend+1,f,c
   836  0003CC                     l900:
   837  0003CC  90D8               	bcf	status,0,c
   838  0003CE  321A               	rrcf	___awmod@divisor+1,f,c
   839  0003D0  3219               	rrcf	___awmod@divisor,f,c
   840  0003D2  2E1B               	decfsz	___awmod@counter,f,c
   841  0003D4  D7F1               	goto	l896
   842  0003D6                     l904:
   843  0003D6  501C               	movf	___awmod@sign,w,c
   844  0003D8  B4D8               	btfsc	status,2,c
   845  0003DA  D004               	goto	l908
   846  0003DC  6C17               	negf	___awmod@dividend,c
   847  0003DE  1E18               	comf	___awmod@dividend+1,f,c
   848  0003E0  B0D8               	btfsc	status,0,c
   849  0003E2  2A18               	incf	___awmod@dividend+1,f,c
   850  0003E4                     l908:
   851  0003E4  C017  F017         	movff	___awmod@dividend,?___awmod
   852  0003E8  C018  F018         	movff	___awmod@dividend+1,?___awmod+1
   853  0003EC  0012               	return	
   854  0003EE                     __end_of___awmod:
   855                           	opt stack 0
   856                           tblptru	equ	0xFF8
   857                           tblptrh	equ	0xFF7
   858                           tblptrl	equ	0xFF6
   859                           tablat	equ	0xFF5
   860                           intcon	equ	0xFF2
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           postdec1	equ	0xFE5
   864                           fsr1l	equ	0xFE1
   865                           indf2	equ	0xFDF
   866                           fsr2h	equ	0xFDA
   867                           fsr2l	equ	0xFD9
   868                           status	equ	0xFD8
   869                           
   870 ;; *************** function ___awdiv *****************
   871 ;; Defined at:
   872 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/awdiv.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  dividend        2   14[COMRAM] int 
   875 ;;  divisor         2   16[COMRAM] int 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  quotient        2   20[COMRAM] int 
   878 ;;  sign            1   19[COMRAM] unsigned char 
   879 ;;  counter         1   18[COMRAM] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  2   14[COMRAM] int 
   882 ;; Registers used:
   883 ;;		wreg, status,2, status,0
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   889 ;;      Params:         4       0       0       0       0       0       0
   890 ;;      Locals:         4       0       0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0       0       0
   892 ;;      Totals:         8       0       0       0       0       0       0
   893 ;;Total ram usage:        8 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; Hardware stack levels required when called:    1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text4
   904  0002FA                     __ptext4:
   905                           	opt stack 0
   906  0002FA                     ___awdiv:
   907                           	opt stack 29
   908                           
   909                           ;incstack = 0
   910  0002FA  0E00               	movlw	0
   911  0002FC  6E14               	movwf	___awdiv@sign,c
   912  0002FE  AE12               	btfss	___awdiv@divisor+1,7,c
   913  000300  D006               	goto	l840
   914  000302  6C11               	negf	___awdiv@divisor,c
   915  000304  1E12               	comf	___awdiv@divisor+1,f,c
   916  000306  B0D8               	btfsc	status,0,c
   917  000308  2A12               	incf	___awdiv@divisor+1,f,c
   918  00030A  0E01               	movlw	1
   919  00030C  6E14               	movwf	___awdiv@sign,c
   920  00030E                     l840:
   921  00030E  AE10               	btfss	___awdiv@dividend+1,7,c
   922  000310  D006               	goto	l846
   923  000312  6C0F               	negf	___awdiv@dividend,c
   924  000314  1E10               	comf	___awdiv@dividend+1,f,c
   925  000316  B0D8               	btfsc	status,0,c
   926  000318  2A10               	incf	___awdiv@dividend+1,f,c
   927  00031A  0E01               	movlw	1
   928  00031C  1A14               	xorwf	___awdiv@sign,f,c
   929  00031E                     l846:
   930  00031E  0E00               	movlw	0
   931  000320  6E16               	movwf	___awdiv@quotient+1,c
   932  000322  0E00               	movlw	0
   933  000324  6E15               	movwf	___awdiv@quotient,c
   934  000326  5011               	movf	___awdiv@divisor,w,c
   935  000328  1012               	iorwf	___awdiv@divisor+1,w,c
   936  00032A  B4D8               	btfsc	status,2,c
   937  00032C  D01C               	goto	l868
   938  00032E  0E01               	movlw	1
   939  000330  6E13               	movwf	___awdiv@counter,c
   940  000332  D004               	goto	l854
   941  000334                     l852:
   942  000334  90D8               	bcf	status,0,c
   943  000336  3611               	rlcf	___awdiv@divisor,f,c
   944  000338  3612               	rlcf	___awdiv@divisor+1,f,c
   945  00033A  2A13               	incf	___awdiv@counter,f,c
   946  00033C                     l854:
   947  00033C  AE12               	btfss	___awdiv@divisor+1,7,c
   948  00033E  D7FA               	goto	l852
   949  000340                     l856:
   950  000340  90D8               	bcf	status,0,c
   951  000342  3615               	rlcf	___awdiv@quotient,f,c
   952  000344  3616               	rlcf	___awdiv@quotient+1,f,c
   953  000346  5011               	movf	___awdiv@divisor,w,c
   954  000348  5C0F               	subwf	___awdiv@dividend,w,c
   955  00034A  5012               	movf	___awdiv@divisor+1,w,c
   956  00034C  5810               	subwfb	___awdiv@dividend+1,w,c
   957  00034E  A0D8               	btfss	status,0,c
   958  000350  D005               	goto	l864
   959  000352  5011               	movf	___awdiv@divisor,w,c
   960  000354  5E0F               	subwf	___awdiv@dividend,f,c
   961  000356  5012               	movf	___awdiv@divisor+1,w,c
   962  000358  5A10               	subwfb	___awdiv@dividend+1,f,c
   963  00035A  8015               	bsf	___awdiv@quotient,0,c
   964  00035C                     l864:
   965  00035C  90D8               	bcf	status,0,c
   966  00035E  3212               	rrcf	___awdiv@divisor+1,f,c
   967  000360  3211               	rrcf	___awdiv@divisor,f,c
   968  000362  2E13               	decfsz	___awdiv@counter,f,c
   969  000364  D7ED               	goto	l856
   970  000366                     l868:
   971  000366  5014               	movf	___awdiv@sign,w,c
   972  000368  B4D8               	btfsc	status,2,c
   973  00036A  D004               	goto	l872
   974  00036C  6C15               	negf	___awdiv@quotient,c
   975  00036E  1E16               	comf	___awdiv@quotient+1,f,c
   976  000370  B0D8               	btfsc	status,0,c
   977  000372  2A16               	incf	___awdiv@quotient+1,f,c
   978  000374                     l872:
   979  000374  C015  F00F         	movff	___awdiv@quotient,?___awdiv
   980  000378  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
   981  00037C  0012               	return	
   982  00037E                     __end_of___awdiv:
   983                           	opt stack 0
   984                           tblptru	equ	0xFF8
   985                           tblptrh	equ	0xFF7
   986                           tblptrl	equ	0xFF6
   987                           tablat	equ	0xFF5
   988                           intcon	equ	0xFF2
   989                           postinc0	equ	0xFEE
   990                           wreg	equ	0xFE8
   991                           postdec1	equ	0xFE5
   992                           fsr1l	equ	0xFE1
   993                           indf2	equ	0xFDF
   994                           fsr2h	equ	0xFDA
   995                           fsr2l	equ	0xFD9
   996                           status	equ	0xFD8
   997                           
   998 ;; *************** function _isr *****************
   999 ;; Defined at:
  1000 ;;		line 87 in file "main.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1014 ;;      Params:         0       0       0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0
  1016 ;;      Temps:         14       0       0       0       0       0       0
  1017 ;;      Totals:        14       0       0       0       0       0       0
  1018 ;;Total ram usage:       14 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		Interrupt level 2
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	intcode
  1028  000008                     __pintcode:
  1029                           	opt stack 0
  1030  000008                     _isr:
  1031                           	opt stack 28
  1032                           
  1033                           ;incstack = 0
  1034  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1035  00000A  CFFA F001          	movff	pclath,??_isr
  1036  00000E  CFFB F002          	movff	pclatu,??_isr+1
  1037  000012  ED2E  F001         	call	int_func,f	;refresh shadow registers
  1038                           pclatu	equ	0xFFB
  1039                           pclath	equ	0xFFA
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           intcon	equ	0xFF2
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           postdec1	equ	0xFE5
  1048                           fsr1l	equ	0xFE1
  1049                           indf2	equ	0xFDF
  1050                           fsr2h	equ	0xFDA
  1051                           fsr2l	equ	0xFD9
  1052                           status	equ	0xFD8
  1053                           
  1054                           	psect	intcode_body
  1055  00025C                     __pintcode_body:
  1056                           	opt stack 28
  1057  00025C                     int_func:
  1058                           	opt stack 28
  1059  00025C  0006               	pop		; remove dummy address from shadow register refresh
  1060  00025E  CFE9 F003          	movff	fsr0l,??_isr+2
  1061  000262  CFEA F004          	movff	fsr0h,??_isr+3
  1062  000266  CFE1 F005          	movff	fsr1l,??_isr+4
  1063  00026A  CFE2 F006          	movff	fsr1h,??_isr+5
  1064  00026E  CFD9 F007          	movff	fsr2l,??_isr+6
  1065  000272  CFDA F008          	movff	fsr2h,??_isr+7
  1066  000276  CFF3 F009          	movff	prodl,??_isr+8
  1067  00027A  CFF4 F00A          	movff	prodh,??_isr+9
  1068  00027E  CFF6 F00B          	movff	tblptrl,??_isr+10
  1069  000282  CFF7 F00C          	movff	tblptrh,??_isr+11
  1070  000286  CFF8 F00D          	movff	tblptru,??_isr+12
  1071  00028A  CFF5 F00E          	movff	tablat,??_isr+13
  1072                           
  1073                           ;main.c: 91: static int count;
  1074                           ;main.c: 92: if(TMR0IF)
  1075  00028E  A4F2               	btfss	intcon,2,c	;volatile
  1076  000290  D016               	goto	i2l70
  1077                           
  1078                           ;main.c: 93: {
  1079                           ;main.c: 94: TMR0=TMR0 +8;
  1080  000292  0E08               	movlw	8
  1081  000294  24D6               	addwf	4054,w,c	;volatile
  1082  000296  6ED6               	movwf	4054,c	;volatile
  1083  000298  0E00               	movlw	0
  1084  00029A  20D7               	addwfc	4055,w,c	;volatile
  1085  00029C  6ED7               	movwf	4055,c	;volatile
  1086                           
  1087                           ;main.c: 95: if(count++ == 10000)
  1088  00029E  4A2D               	infsnz	isr@count,f,c
  1089  0002A0  2A2E               	incf	isr@count+1,f,c
  1090  0002A2  0E11               	movlw	17
  1091  0002A4  182D               	xorwf	isr@count,w,c
  1092  0002A6  E10A               	bnz	i2l830
  1093  0002A8  0E27               	movlw	39
  1094  0002AA  182E               	xorwf	isr@count+1,w,c
  1095  0002AC  A4D8               	btfss	status,2,c
  1096  0002AE  D006               	goto	i2l830
  1097                           
  1098                           ;main.c: 96: {
  1099                           ;main.c: 97: half_sec++;
  1100  0002B0  4A27               	infsnz	_half_sec,f,c
  1101  0002B2  2A28               	incf	_half_sec+1,f,c
  1102                           
  1103                           ;main.c: 99: count=0;
  1104  0002B4  0E00               	movlw	0
  1105  0002B6  6E2E               	movwf	isr@count+1,c
  1106  0002B8  0E00               	movlw	0
  1107  0002BA  6E2D               	movwf	isr@count,c
  1108  0002BC                     i2l830:
  1109                           
  1110                           ;main.c: 101: }
  1111                           ;main.c: 102: TMR0IF=0;
  1112  0002BC  94F2               	bcf	intcon,2,c	;volatile
  1113  0002BE                     i2l70:
  1114  0002BE  C00E  FFF5         	movff	??_isr+13,tablat
  1115  0002C2  C00D  FFF8         	movff	??_isr+12,tblptru
  1116  0002C6  C00C  FFF7         	movff	??_isr+11,tblptrh
  1117  0002CA  C00B  FFF6         	movff	??_isr+10,tblptrl
  1118  0002CE  C00A  FFF4         	movff	??_isr+9,prodh
  1119  0002D2  C009  FFF3         	movff	??_isr+8,prodl
  1120  0002D6  C008  FFDA         	movff	??_isr+7,fsr2h
  1121  0002DA  C007  FFD9         	movff	??_isr+6,fsr2l
  1122  0002DE  C006  FFE2         	movff	??_isr+5,fsr1h
  1123  0002E2  C005  FFE1         	movff	??_isr+4,fsr1l
  1124  0002E6  C004  FFEA         	movff	??_isr+3,fsr0h
  1125  0002EA  C003  FFE9         	movff	??_isr+2,fsr0l
  1126  0002EE  C002  FFFB         	movff	??_isr+1,pclatu
  1127  0002F2  C001  FFFA         	movff	??_isr,pclath
  1128  0002F6  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1129  0002F8  0011               	retfie		f
  1130  0002FA                     __end_of_isr:
  1131                           	opt stack 0
  1132  0000                     pclatu	equ	0xFFB
  1133                           pclath	equ	0xFFA
  1134                           tblptru	equ	0xFF8
  1135                           tblptrh	equ	0xFF7
  1136                           tblptrl	equ	0xFF6
  1137                           tablat	equ	0xFF5
  1138                           prodh	equ	0xFF4
  1139                           prodl	equ	0xFF3
  1140                           intcon	equ	0xFF2
  1141                           postinc0	equ	0xFEE
  1142                           fsr0h	equ	0xFEA
  1143                           fsr0l	equ	0xFE9
  1144                           wreg	equ	0xFE8
  1145                           postdec1	equ	0xFE5
  1146                           fsr1h	equ	0xFE2
  1147                           fsr1l	equ	0xFE1
  1148                           indf2	equ	0xFDF
  1149                           fsr2h	equ	0xFDA
  1150                           fsr2l	equ	0xFD9
  1151                           status	equ	0xFD8
  1152                           pclatu	equ	0xFFB
  1153                           pclath	equ	0xFFA
  1154                           tblptru	equ	0xFF8
  1155                           tblptrh	equ	0xFF7
  1156                           tblptrl	equ	0xFF6
  1157                           tablat	equ	0xFF5
  1158                           prodh	equ	0xFF4
  1159                           prodl	equ	0xFF3
  1160                           intcon	equ	0xFF2
  1161                           postinc0	equ	0xFEE
  1162                           fsr0h	equ	0xFEA
  1163                           fsr0l	equ	0xFE9
  1164                           wreg	equ	0xFE8
  1165                           postdec1	equ	0xFE5
  1166                           fsr1h	equ	0xFE2
  1167                           fsr1l	equ	0xFE1
  1168                           indf2	equ	0xFDF
  1169                           fsr2h	equ	0xFDA
  1170                           fsr2l	equ	0xFD9
  1171                           status	equ	0xFD8
  1172                           
  1173                           	psect	rparam
  1174  0000                     pclatu	equ	0xFFB
  1175                           pclath	equ	0xFFA
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           prodh	equ	0xFF4
  1181                           prodl	equ	0xFF3
  1182                           intcon	equ	0xFF2
  1183                           postinc0	equ	0xFEE
  1184                           fsr0h	equ	0xFEA
  1185                           fsr0l	equ	0xFE9
  1186                           wreg	equ	0xFE8
  1187                           postdec1	equ	0xFE5
  1188                           fsr1h	equ	0xFE2
  1189                           fsr1l	equ	0xFE1
  1190                           indf2	equ	0xFDF
  1191                           fsr2h	equ	0xFDA
  1192                           fsr2l	equ	0xFD9
  1193                           status	equ	0xFD8
  1194                           
  1195                           	psect	temp
  1196  00003B                     btemp:
  1197                           	opt stack 0
  1198  00003B                     	ds	1
  1199  0000                     int$flags	set	btemp
  1200                           pclatu	equ	0xFFB
  1201                           pclath	equ	0xFFA
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           prodh	equ	0xFF4
  1207                           prodl	equ	0xFF3
  1208                           intcon	equ	0xFF2
  1209                           postinc0	equ	0xFEE
  1210                           fsr0h	equ	0xFEA
  1211                           fsr0l	equ	0xFE9
  1212                           wreg	equ	0xFE8
  1213                           postdec1	equ	0xFE5
  1214                           fsr1h	equ	0xFE2
  1215                           fsr1l	equ	0xFE1
  1216                           indf2	equ	0xFDF
  1217                           fsr2h	equ	0xFDA
  1218                           fsr2l	equ	0xFD9
  1219                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      58
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1850
                                             28 COMRAM     6     6      0
                            ___awdiv
                            ___awmod
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1070
                                             22 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     644
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _init_config
     _init_timer0

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      3A       1       61.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3A       3        0.0%
DATA                 0      0      3A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Jun  9 03:27:43 2023

           ___awdiv@sign 0014                      l900 03CC                      l840 030E  
                    l904 03D6                      l922 00D6                      l852 0334  
                    l908 03E4                      l924 00DE                      l854 033C  
                    l846 031E                      l942 0134                      l934 0122  
                    l872 0374                      l864 035C                      l856 0340  
                    l928 00EE                      l962 0178                      l946 013A  
                    l868 0366                      l892 03AC                      l884 0392  
                    l972 0236                      l894 03B4                      l896 03B8  
                    l888 039E                      l968 020C                      _GIE 007F97  
                    u374 010E                      u375 010A                      _PSA 007EAB  
                    _sec 002B                      _isr 0008                      _ssd 0023  
           ___awmod@sign 001C                      wreg 000FE8                     ?_isr 0001  
                   _T0CS 007EAD                     _PEIE 007F96                     i2l70 02BE  
                   _TMR0 000FD6                     _data 002F                     _main 001A  
                   _hour 0039                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     btemp 003B  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 0016             ___param_bank 000010                    ??_isr 0001  
                  ?_main 0001          __end_of___awdiv 037E          __end_of___awmod 03EE  
        ___awdiv@divisor 0011             ?_init_config 0001                    i2l830 02BC  
        ___awdiv@counter 0013                    _PORTA 000F80                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISD 000F95             ?_init_timer0 0001  
                  main@i 0021                    main@j 001F                    tablat 000FF5  
                  status 000FD8          __initialization 03EE             __end_of_main 025C  
                 ??_main 001D            __activetblptr 000000                   _T08BIT 007EAE  
       ___awdiv@dividend 000F                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 _TMR0ON 007EAF                ??___awdiv 0013                ??___awmod 001B  
                 clear_0 03F4         ___awdiv@quotient 0015                   _minute 0029  
        ___awmod@divisor 0019          ___awmod@counter 001B             __pdataCOMRAM 002F  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 041A            ___rparam_used 000001  
         __pcstackCOMRAM 0001     __size_of_init_config 0016     __size_of_init_timer0 001A  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 02FA  
                ___awmod 037E                  __pcinit 03EE                  __ramtop 0600  
                __ptext0 001A                  __ptext1 043E                  __ptext2 0424  
                __ptext3 037E                  __ptext4 02FA             __size_of_isr 02F2  
       ___awmod@dividend 0017           __pintcode_body 025C     end_of_initialization 041A  
                int_func 025C                  postdec1 000FE5                  postinc0 000FEE  
          __pidataCOMRAM 0454      start_initialization 03EE              __end_of_isr 02FA  
          ??_init_config 000F            ??_init_timer0 000F              __pbssCOMRAM 0023  
              __pintcode 0008                 ?___awdiv 000F                 ?___awmod 0017  
    __end_of_init_config 0454      __end_of_init_timer0 043E                copy_data0 040E  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 0084  
       __size_of___awmod 0070              _init_config 043E              _init_timer0 0424  
               _half_sec 0027            __size_of_main 0242                 int$flags 003B  
               isr@count 002D                 intlevel2 0000  
