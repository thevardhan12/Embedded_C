

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue Jun  6 03:24:21 2023

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           	psect	idataCOMRAM
    20  002D94                     __pidataCOMRAM:
    21                           	opt stack 0
    22                           
    23                           ;initializer for _data
    24  002D94  E7                 	db	231
    25  002D95  21                 	db	33
    26  002D96  CB                 	db	203
    27  002D97  6B                 	db	107
    28  002D98  2D                 	db	45
    29  002D99  6E                 	db	110
    30  002D9A  EE                 	db	238
    31  002D9B  23                 	db	35
    32  002D9C  EF                 	db	239
    33  002D9D  6F                 	db	111
    34  0000                     _PORTA	set	3968
    35  0000                     _PORTC	set	3970
    36  0000                     _PORTD	set	3971
    37  0000                     _TRISA	set	3986
    38  0000                     _TRISD	set	3989
    39  0000                     _TRISC0	set	31904
    40                           
    41                           ; #config settings
    42                           
    43                           	psect	cinit
    44  002DB2                     __pcinit:
    45                           	opt stack 0
    46  002DB2                     start_initialization:
    47                           	opt stack 0
    48  002DB2                     __initialization:
    49                           	opt stack 0
    50                           
    51                           ; Clear objects allocated to COMRAM (4 bytes)
    52  002DB2  6A21               	clrf	(__pbssCOMRAM+3)& (0+255),c
    53  002DB4  6A20               	clrf	(__pbssCOMRAM+2)& (0+255),c
    54  002DB6  6A1F               	clrf	(__pbssCOMRAM+1)& (0+255),c
    55  002DB8  6A1E               	clrf	__pbssCOMRAM& (0+255),c
    56                           
    57                           ; Initialize objects allocated to COMRAM (10 bytes)
    58                           ; load TBLPTR registers with __pidataCOMRAM
    59  002DBA  0E94               	movlw	low __pidataCOMRAM
    60  002DBC  6EF6               	movwf	tblptrl,c
    61  002DBE  0E2D               	movlw	high __pidataCOMRAM
    62  002DC0  6EF7               	movwf	tblptrh,c
    63  002DC2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    64  002DC4  6EF8               	movwf	tblptru,c
    65  002DC6  EE00  F014         	lfsr	0,__pdataCOMRAM
    66  002DCA  EE10 F00A          	lfsr	1,10
    67  002DCE                     copy_data0:
    68  002DCE  0009               	tblrd		*+
    69  002DD0  CFF5 FFEE          	movff	tablat,postinc0
    70  002DD4  50E5               	movf	postdec1,w,c
    71  002DD6  50E1               	movf	fsr1l,w,c
    72  002DD8  E1FA               	bnz	copy_data0
    73  002DDA                     end_of_initialization:
    74                           	opt stack 0
    75  002DDA                     __end_of__initialization:
    76                           	opt stack 0
    77  002DDA  0100               	movlb	0
    78  002DDC  EF6D  F017         	goto	_main	;jump to C main() function
    79                           tblptru	equ	0xFF8
    80                           tblptrh	equ	0xFF7
    81                           tblptrl	equ	0xFF6
    82                           tablat	equ	0xFF5
    83                           postinc0	equ	0xFEE
    84                           postdec1	equ	0xFE5
    85                           fsr1l	equ	0xFE1
    86                           
    87                           	psect	bssCOMRAM
    88  00001E                     __pbssCOMRAM:
    89                           	opt stack 0
    90  00001E                     _ssd:
    91                           	opt stack 0
    92  00001E                     	ds	4
    93                           tblptru	equ	0xFF8
    94                           tblptrh	equ	0xFF7
    95                           tblptrl	equ	0xFF6
    96                           tablat	equ	0xFF5
    97                           postinc0	equ	0xFEE
    98                           postdec1	equ	0xFE5
    99                           fsr1l	equ	0xFE1
   100                           
   101                           	psect	dataCOMRAM
   102  000014                     __pdataCOMRAM:
   103                           	opt stack 0
   104  000014                     _data:
   105                           	opt stack 0
   106  000014                     	ds	10
   107                           tblptru	equ	0xFF8
   108                           tblptrh	equ	0xFF7
   109                           tblptrl	equ	0xFF6
   110                           tablat	equ	0xFF5
   111                           postinc0	equ	0xFEE
   112                           postdec1	equ	0xFE5
   113                           fsr1l	equ	0xFE1
   114                           
   115                           	psect	cstackCOMRAM
   116  000001                     __pcstackCOMRAM:
   117                           	opt stack 0
   118  000001                     ?___lwdiv:
   119                           	opt stack 0
   120  000001                     display@ssd:
   121                           	opt stack 0
   122  000001                     ___lwdiv@dividend:
   123                           	opt stack 0
   124                           
   125                           ; 2 bytes @ 0x0
   126  000001                     	ds	2
   127  000003                     ??_display:
   128  000003                     ___lwdiv@divisor:
   129                           	opt stack 0
   130                           
   131                           ; 2 bytes @ 0x2
   132  000003                     	ds	2
   133  000005                     display@j:
   134                           	opt stack 0
   135  000005                     ___lwdiv@quotient:
   136                           	opt stack 0
   137                           
   138                           ; 2 bytes @ 0x4
   139  000005                     	ds	2
   140  000007                     ___lwdiv@counter:
   141                           	opt stack 0
   142  000007                     display@i:
   143                           	opt stack 0
   144                           
   145                           ; 2 bytes @ 0x6
   146  000007                     	ds	1
   147  000008                     ?___lwmod:
   148                           	opt stack 0
   149  000008                     ___lwmod@dividend:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x7
   153  000008                     	ds	2
   154  00000A                     ___lwmod@divisor:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x9
   158  00000A                     	ds	2
   159  00000C                     ___lwmod@counter:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0xB
   163  00000C                     	ds	1
   164  00000D                     main@delay:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0xC
   168  00000D                     	ds	2
   169  00000F                     main@key:
   170                           	opt stack 0
   171                           
   172                           ; 1 bytes @ 0xE
   173  00000F                     	ds	1
   174  000010                     main@wait:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0xF
   178  000010                     	ds	2
   179  000012                     main@count:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x11
   183  000012                     	ds	2
   184                           tblptru	equ	0xFF8
   185                           tblptrh	equ	0xFF7
   186                           tblptrl	equ	0xFF6
   187                           tablat	equ	0xFF5
   188                           postinc0	equ	0xFEE
   189                           postdec1	equ	0xFE5
   190                           fsr1l	equ	0xFE1
   191                           
   192 ;;
   193 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   194 ;;
   195 ;; *************** function _main *****************
   196 ;; Defined at:
   197 ;;		line 17 in file "main.c"
   198 ;; Parameters:    Size  Location     Type
   199 ;;		None
   200 ;; Auto vars:     Size  Location     Type
   201 ;;  count           2   17[COMRAM] unsigned int 
   202 ;;  wait            2   15[COMRAM] unsigned int 
   203 ;;  delay           2   12[COMRAM] unsigned int 
   204 ;;  key             1   14[COMRAM] unsigned char 
   205 ;; Return value:  Size  Location     Type
   206 ;;                  1    wreg      void 
   207 ;; Registers used:
   208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   209 ;; Tracked objects:
   210 ;;		On entry : 0/0
   211 ;;		On exit  : 0/0
   212 ;;		Unchanged: 0/0
   213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   214 ;;      Params:         0       0       0       0       0       0       0
   215 ;;      Locals:         7       0       0       0       0       0       0
   216 ;;      Temps:          0       0       0       0       0       0       0
   217 ;;      Totals:         7       0       0       0       0       0       0
   218 ;;Total ram usage:        7 bytes
   219 ;; Hardware stack levels required when called:    1
   220 ;; This function calls:
   221 ;;		___lwdiv
   222 ;;		___lwmod
   223 ;;		_display
   224 ;;		_init_config
   225 ;;		_read_digital_key
   226 ;; This function is called by:
   227 ;;		Startup code after reset
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text0
   232  002EDA                     __ptext0:
   233                           	opt stack 0
   234  002EDA                     _main:
   235                           	opt stack 30
   236                           
   237                           ;main.c: 19: init_config();
   238                           
   239                           ;incstack = 0
   240  002EDA  ECCF  F016         	call	_init_config	;wreg free
   241                           
   242                           ;main.c: 20: unsigned char key;
   243                           ;main.c: 21: unsigned int delay=0,wait=0;
   244  002EDE  0E00               	movlw	0
   245  002EE0  6E0E               	movwf	main@delay+1,c
   246  002EE2  0E00               	movlw	0
   247  002EE4  6E0D               	movwf	main@delay,c
   248  002EE6  0E00               	movlw	0
   249  002EE8  6E11               	movwf	main@wait+1,c
   250  002EEA  0E00               	movlw	0
   251  002EEC  6E10               	movwf	main@wait,c
   252                           
   253                           ;main.c: 23: unsigned int count=0;
   254  002EEE  0E00               	movlw	0
   255  002EF0  6E13               	movwf	main@count+1,c
   256  002EF2  0E00               	movlw	0
   257  002EF4  6E12               	movwf	main@count,c
   258  002EF6                     l838:
   259                           
   260                           ;main.c: 25: {
   261                           ;main.c: 26: key=read_digital_key();
   262  002EF6  ECC7  F016         	call	_read_digital_key	;wreg free
   263  002EFA  6E0F               	movwf	main@key,c
   264                           
   265                           ;main.c: 32: if(key==0)
   266  002EFC  500F               	movf	main@key,w,c
   267  002EFE  A4D8               	btfss	status,2,c
   268  002F00  D00C               	goto	l844
   269                           
   270                           ;main.c: 33: {
   271                           ;main.c: 34: if(++wait == 200)
   272  002F02  4A10               	infsnz	main@wait,f,c
   273  002F04  2A11               	incf	main@wait+1,f,c
   274  002F06  0EC8               	movlw	200
   275  002F08  1810               	xorwf	main@wait,w,c
   276  002F0A  1011               	iorwf	main@wait+1,w,c
   277  002F0C  A4D8               	btfss	status,2,c
   278  002F0E  D015               	goto	l854
   279                           
   280                           ;main.c: 35: count=0;
   281  002F10  0E00               	movlw	0
   282  002F12  6E13               	movwf	main@count+1,c
   283  002F14  0E00               	movlw	0
   284  002F16  6E12               	movwf	main@count,c
   285                           
   286                           ;main.c: 36: }
   287  002F18  D010               	goto	l854
   288  002F1A                     l844:
   289                           
   290                           ;main.c: 38: else if(wait>0 && wait <200)
   291  002F1A  5010               	movf	main@wait,w,c
   292  002F1C  1011               	iorwf	main@wait+1,w,c
   293  002F1E  B4D8               	btfsc	status,2,c
   294  002F20  D008               	goto	l852
   295  002F22  5011               	movf	main@wait+1,w,c
   296  002F24  E106               	bnz	l852
   297  002F26  0EC8               	movlw	200
   298  002F28  5C10               	subwf	main@wait,w,c
   299  002F2A  B0D8               	btfsc	status,0,c
   300  002F2C  D002               	goto	l852
   301                           
   302                           ;main.c: 39: {
   303                           ;main.c: 40: count++;
   304  002F2E  4A12               	infsnz	main@count,f,c
   305  002F30  2A13               	incf	main@count+1,f,c
   306  002F32                     l852:
   307                           
   308                           ;main.c: 43: else
   309                           ;main.c: 44: {
   310                           ;main.c: 45: wait=0;
   311  002F32  0E00               	movlw	0
   312  002F34  6E11               	movwf	main@wait+1,c
   313  002F36  0E00               	movlw	0
   314  002F38  6E10               	movwf	main@wait,c
   315  002F3A                     l854:
   316                           
   317                           ;main.c: 46: }
   318                           ;main.c: 47: ssd[3]=data[count % 10];
   319  002F3A  C012  F008         	movff	main@count,___lwmod@dividend
   320  002F3E  C013  F009         	movff	main@count+1,___lwmod@dividend+1
   321  002F42  0E00               	movlw	0
   322  002F44  6E0B               	movwf	___lwmod@divisor+1,c
   323  002F46  0E0A               	movlw	10
   324  002F48  6E0A               	movwf	___lwmod@divisor,c
   325  002F4A  ECF0  F016         	call	___lwmod	;wreg free
   326  002F4E  0E14               	movlw	low _data
   327  002F50  2408               	addwf	?___lwmod,w,c
   328  002F52  6ED9               	movwf	fsr2l,c
   329  002F54  0E00               	movlw	high _data
   330  002F56  2009               	addwfc	?___lwmod+1,w,c
   331  002F58  6EDA               	movwf	fsr2h,c
   332  002F5A  50DF               	movf	indf2,w,c
   333  002F5C  6E21               	movwf	_ssd+3,c
   334                           
   335                           ;main.c: 48: ssd[2]=data[(count / 10)%10];
   336  002F5E  0E00               	movlw	0
   337  002F60  6E04               	movwf	___lwdiv@divisor+1,c
   338  002F62  0E0A               	movlw	10
   339  002F64  6E03               	movwf	___lwdiv@divisor,c
   340  002F66  C012  F001         	movff	main@count,___lwdiv@dividend
   341  002F6A  C013  F002         	movff	main@count+1,___lwdiv@dividend+1
   342  002F6E  EC11  F017         	call	___lwdiv	;wreg free
   343  002F72  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   344  002F76  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   345  002F7A  0E00               	movlw	0
   346  002F7C  6E0B               	movwf	___lwmod@divisor+1,c
   347  002F7E  0E0A               	movlw	10
   348  002F80  6E0A               	movwf	___lwmod@divisor,c
   349  002F82  ECF0  F016         	call	___lwmod	;wreg free
   350  002F86  0E14               	movlw	low _data
   351  002F88  2408               	addwf	?___lwmod,w,c
   352  002F8A  6ED9               	movwf	fsr2l,c
   353  002F8C  0E00               	movlw	high _data
   354  002F8E  2009               	addwfc	?___lwmod+1,w,c
   355  002F90  6EDA               	movwf	fsr2h,c
   356  002F92  50DF               	movf	indf2,w,c
   357  002F94  6E20               	movwf	_ssd+2,c
   358                           
   359                           ;main.c: 49: ssd[1]=data[(count /100)%10];
   360  002F96  0E00               	movlw	0
   361  002F98  6E04               	movwf	___lwdiv@divisor+1,c
   362  002F9A  0E64               	movlw	100
   363  002F9C  6E03               	movwf	___lwdiv@divisor,c
   364  002F9E  C012  F001         	movff	main@count,___lwdiv@dividend
   365  002FA2  C013  F002         	movff	main@count+1,___lwdiv@dividend+1
   366  002FA6  EC11  F017         	call	___lwdiv	;wreg free
   367  002FAA  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   368  002FAE  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   369  002FB2  0E00               	movlw	0
   370  002FB4  6E0B               	movwf	___lwmod@divisor+1,c
   371  002FB6  0E0A               	movlw	10
   372  002FB8  6E0A               	movwf	___lwmod@divisor,c
   373  002FBA  ECF0  F016         	call	___lwmod	;wreg free
   374  002FBE  0E14               	movlw	low _data
   375  002FC0  2408               	addwf	?___lwmod,w,c
   376  002FC2  6ED9               	movwf	fsr2l,c
   377  002FC4  0E00               	movlw	high _data
   378  002FC6  2009               	addwfc	?___lwmod+1,w,c
   379  002FC8  6EDA               	movwf	fsr2h,c
   380  002FCA  50DF               	movf	indf2,w,c
   381  002FCC  6E1F               	movwf	_ssd+1,c
   382                           
   383                           ;main.c: 50: ssd[0]=data[(count/1000)];
   384  002FCE  C012  F001         	movff	main@count,___lwdiv@dividend
   385  002FD2  C013  F002         	movff	main@count+1,___lwdiv@dividend+1
   386  002FD6  0E03               	movlw	3
   387  002FD8  6E04               	movwf	___lwdiv@divisor+1,c
   388  002FDA  0EE8               	movlw	232
   389  002FDC  6E03               	movwf	___lwdiv@divisor,c
   390  002FDE  EC11  F017         	call	___lwdiv	;wreg free
   391  002FE2  0E14               	movlw	low _data
   392  002FE4  2401               	addwf	?___lwdiv,w,c
   393  002FE6  6ED9               	movwf	fsr2l,c
   394  002FE8  0E00               	movlw	high _data
   395  002FEA  2002               	addwfc	?___lwdiv+1,w,c
   396  002FEC  6EDA               	movwf	fsr2h,c
   397  002FEE  50DF               	movf	indf2,w,c
   398  002FF0  6E1E               	movwf	_ssd,c
   399                           
   400                           ;main.c: 51: display(ssd);
   401  002FF2  0E1E               	movlw	low _ssd
   402  002FF4  6E01               	movwf	display@ssd,c
   403  002FF6  0E00               	movlw	high _ssd
   404  002FF8  6E02               	movwf	display@ssd+1,c
   405  002FFA  EC3A  F017         	call	_display	;wreg free
   406  002FFE  D77B               	goto	l838
   407  003000                     __end_of_main:
   408                           	opt stack 0
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           postinc0	equ	0xFEE
   414                           postdec1	equ	0xFE5
   415                           fsr1l	equ	0xFE1
   416                           indf2	equ	0xFDF
   417                           fsr2h	equ	0xFDA
   418                           fsr2l	equ	0xFD9
   419                           status	equ	0xFD8
   420                           
   421 ;; *************** function _read_digital_key *****************
   422 ;; Defined at:
   423 ;;		line 71 in file "main.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      unsigned char 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   437 ;;      Params:         0       0       0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0       0       0
   439 ;;      Temps:          0       0       0       0       0       0       0
   440 ;;      Totals:         0       0       0       0       0       0       0
   441 ;;Total ram usage:        0 bytes
   442 ;; Hardware stack levels used:    1
   443 ;; This function calls:
   444 ;;		Nothing
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text1
   451  002D8E                     __ptext1:
   452                           	opt stack 0
   453  002D8E                     _read_digital_key:
   454                           	opt stack 30
   455                           
   456                           ;main.c: 73: return (PORTC & 1);
   457                           
   458                           ;incstack = 0
   459  002D8E  5082               	movf	3970,w,c	;volatile
   460  002D90  0B01               	andlw	1
   461  002D92  0012               	return	
   462  002D94                     __end_of_read_digital_key:
   463                           	opt stack 0
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           postinc0	equ	0xFEE
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           indf2	equ	0xFDF
   472                           fsr2h	equ	0xFDA
   473                           fsr2l	equ	0xFD9
   474                           status	equ	0xFD8
   475                           
   476 ;; *************** function _init_config *****************
   477 ;; Defined at:
   478 ;;		line 64 in file "main.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   492 ;;      Params:         0       0       0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0       0       0
   495 ;;      Totals:         0       0       0       0       0       0       0
   496 ;;Total ram usage:        0 bytes
   497 ;; Hardware stack levels used:    1
   498 ;; This function calls:
   499 ;;		Nothing
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text2
   506  002D9E                     __ptext2:
   507                           	opt stack 0
   508  002D9E                     _init_config:
   509                           	opt stack 30
   510                           
   511                           ;main.c: 66: TRISD=0X00;
   512                           
   513                           ;incstack = 0
   514  002D9E  0E00               	movlw	0
   515  002DA0  6E95               	movwf	3989,c	;volatile
   516                           
   517                           ;main.c: 67: TRISA=TRISA & 0XF0;
   518  002DA2  5092               	movf	3986,w,c	;volatile
   519  002DA4  0BF0               	andlw	240
   520  002DA6  6E92               	movwf	3986,c	;volatile
   521                           
   522                           ;main.c: 68: TRISC0=1;
   523  002DA8  8094               	bsf	3988,0,c	;volatile
   524                           
   525                           ;main.c: 69: PORTD=PORTD & 0XF0;
   526  002DAA  5083               	movf	3971,w,c	;volatile
   527  002DAC  0BF0               	andlw	240
   528  002DAE  6E83               	movwf	3971,c	;volatile
   529  002DB0  0012               	return		;funcret
   530  002DB2                     __end_of_init_config:
   531                           	opt stack 0
   532                           tblptru	equ	0xFF8
   533                           tblptrh	equ	0xFF7
   534                           tblptrl	equ	0xFF6
   535                           tablat	equ	0xFF5
   536                           postinc0	equ	0xFEE
   537                           postdec1	equ	0xFE5
   538                           fsr1l	equ	0xFE1
   539                           indf2	equ	0xFDF
   540                           fsr2h	equ	0xFDA
   541                           fsr2l	equ	0xFD9
   542                           status	equ	0xFD8
   543                           
   544 ;; *************** function _display *****************
   545 ;; Defined at:
   546 ;;		line 76 in file "main.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;  ssd             2    0[COMRAM] PTR unsigned char 
   549 ;;		 -> ssd(4), 
   550 ;; Auto vars:     Size  Location     Type
   551 ;;  j               2    4[COMRAM] unsigned int 
   552 ;;  i               2    6[COMRAM] int 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   562 ;;      Params:         2       0       0       0       0       0       0
   563 ;;      Locals:         4       0       0       0       0       0       0
   564 ;;      Temps:          2       0       0       0       0       0       0
   565 ;;      Totals:         8       0       0       0       0       0       0
   566 ;;Total ram usage:        8 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_main
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text3
   576  002E74                     __ptext3:
   577                           	opt stack 0
   578  002E74                     _display:
   579                           	opt stack 30
   580                           
   581                           ;main.c: 78: for(int i=0;i < 4;i++)
   582                           
   583                           ;incstack = 0
   584  002E74  0E00               	movlw	0
   585  002E76  6E08               	movwf	display@i+1,c
   586  002E78  0E00               	movlw	0
   587  002E7A  6E07               	movwf	display@i,c
   588  002E7C                     l770:
   589  002E7C  BE08               	btfsc	display@i+1,7,c
   590  002E7E  D006               	goto	l774
   591  002E80  5008               	movf	display@i+1,w,c
   592  002E82  E12A               	bnz	l46
   593  002E84  0E04               	movlw	4
   594  002E86  5C07               	subwf	display@i,w,c
   595  002E88  B0D8               	btfsc	status,0,c
   596  002E8A  0012               	return	
   597  002E8C                     l774:
   598                           
   599                           ;main.c: 79: {
   600                           ;main.c: 80: PORTD=ssd[i];
   601  002E8C  5007               	movf	display@i,w,c
   602  002E8E  2401               	addwf	display@ssd,w,c
   603  002E90  6ED9               	movwf	fsr2l,c
   604  002E92  5008               	movf	display@i+1,w,c
   605  002E94  2002               	addwfc	display@ssd+1,w,c
   606  002E96  6EDA               	movwf	fsr2h,c
   607  002E98  50DF               	movf	indf2,w,c
   608  002E9A  6E83               	movwf	3971,c	;volatile
   609                           
   610                           ;main.c: 81: PORTA=(PORTA & 0Xf0 ) | (1<<i);
   611  002E9C  C007  F003         	movff	display@i,??_display
   612  002EA0  0E01               	movlw	1
   613  002EA2  6E04               	movwf	(??_display+1)& (0+255),c
   614  002EA4  2A03               	incf	??_display,f,c
   615  002EA6  D002               	goto	u174
   616  002EA8                     u175:
   617  002EA8  90D8               	bcf	status,0,c
   618  002EAA  3604               	rlcf	??_display+1,f,c
   619  002EAC                     u174:
   620  002EAC  2E03               	decfsz	??_display,f,c
   621  002EAE  D7FC               	goto	u175
   622  002EB0  5080               	movf	3968,w,c	;volatile
   623  002EB2  0BF0               	andlw	240
   624  002EB4  1004               	iorwf	??_display+1,w,c
   625  002EB6  6E80               	movwf	3968,c	;volatile
   626                           
   627                           ;main.c: 82: for(unsigned int j =0;j<1000;j++);
   628  002EB8  0E00               	movlw	0
   629  002EBA  6E06               	movwf	display@j+1,c
   630  002EBC  0E00               	movlw	0
   631  002EBE  6E05               	movwf	display@j,c
   632  002EC0                     l780:
   633  002EC0  0EE8               	movlw	232
   634  002EC2  5C05               	subwf	display@j,w,c
   635  002EC4  0E03               	movlw	3
   636  002EC6  5806               	subwfb	display@j+1,w,c
   637  002EC8  B0D8               	btfsc	status,0,c
   638  002ECA  D003               	goto	l788
   639  002ECC  4A05               	infsnz	display@j,f,c
   640  002ECE  2A06               	incf	display@j+1,f,c
   641  002ED0  D7F7               	goto	l780
   642  002ED2                     l788:
   643  002ED2  4A07               	infsnz	display@i,f,c
   644  002ED4  2A08               	incf	display@i+1,f,c
   645  002ED6  D7D2               	goto	l770
   646  002ED8                     l46:
   647  002ED8  0012               	return		;funcret
   648  002EDA                     __end_of_display:
   649                           	opt stack 0
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           postinc0	equ	0xFEE
   655                           postdec1	equ	0xFE5
   656                           fsr1l	equ	0xFE1
   657                           indf2	equ	0xFDF
   658                           fsr2h	equ	0xFDA
   659                           fsr2l	equ	0xFD9
   660                           status	equ	0xFD8
   661                           
   662 ;; *************** function ___lwmod *****************
   663 ;; Defined at:
   664 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  dividend        2    7[COMRAM] unsigned int 
   667 ;;  divisor         2    9[COMRAM] unsigned int 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  counter         1   11[COMRAM] unsigned char 
   670 ;; Return value:  Size  Location     Type
   671 ;;                  2    7[COMRAM] unsigned int 
   672 ;; Registers used:
   673 ;;		wreg, status,2, status,0
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   679 ;;      Params:         4       0       0       0       0       0       0
   680 ;;      Locals:         1       0       0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0       0       0
   682 ;;      Totals:         5       0       0       0       0       0       0
   683 ;;Total ram usage:        5 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; This function calls:
   686 ;;		Nothing
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text4
   693  002DE0                     __ptext4:
   694                           	opt stack 0
   695  002DE0                     ___lwmod:
   696                           	opt stack 30
   697                           
   698                           ;incstack = 0
   699  002DE0  500A               	movf	___lwmod@divisor,w,c
   700  002DE2  100B               	iorwf	___lwmod@divisor+1,w,c
   701  002DE4  B4D8               	btfsc	status,2,c
   702  002DE6  D018               	goto	l459
   703  002DE8  0E01               	movlw	1
   704  002DEA  6E0C               	movwf	___lwmod@counter,c
   705  002DEC  D004               	goto	l820
   706  002DEE                     l818:
   707  002DEE  90D8               	bcf	status,0,c
   708  002DF0  360A               	rlcf	___lwmod@divisor,f,c
   709  002DF2  360B               	rlcf	___lwmod@divisor+1,f,c
   710  002DF4  2A0C               	incf	___lwmod@counter,f,c
   711  002DF6                     l820:
   712  002DF6  AE0B               	btfss	___lwmod@divisor+1,7,c
   713  002DF8  D7FA               	goto	l818
   714  002DFA                     l822:
   715  002DFA  500A               	movf	___lwmod@divisor,w,c
   716  002DFC  5C08               	subwf	___lwmod@dividend,w,c
   717  002DFE  500B               	movf	___lwmod@divisor+1,w,c
   718  002E00  5809               	subwfb	___lwmod@dividend+1,w,c
   719  002E02  A0D8               	btfss	status,0,c
   720  002E04  D004               	goto	l826
   721  002E06  500A               	movf	___lwmod@divisor,w,c
   722  002E08  5E08               	subwf	___lwmod@dividend,f,c
   723  002E0A  500B               	movf	___lwmod@divisor+1,w,c
   724  002E0C  5A09               	subwfb	___lwmod@dividend+1,f,c
   725  002E0E                     l826:
   726  002E0E  90D8               	bcf	status,0,c
   727  002E10  320B               	rrcf	___lwmod@divisor+1,f,c
   728  002E12  320A               	rrcf	___lwmod@divisor,f,c
   729  002E14  2E0C               	decfsz	___lwmod@counter,f,c
   730  002E16  D7F1               	goto	l822
   731  002E18                     l459:
   732  002E18  C008  F008         	movff	___lwmod@dividend,?___lwmod
   733  002E1C  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
   734  002E20  0012               	return		;funcret
   735  002E22                     __end_of___lwmod:
   736                           	opt stack 0
   737                           tblptru	equ	0xFF8
   738                           tblptrh	equ	0xFF7
   739                           tblptrl	equ	0xFF6
   740                           tablat	equ	0xFF5
   741                           postinc0	equ	0xFEE
   742                           postdec1	equ	0xFE5
   743                           fsr1l	equ	0xFE1
   744                           indf2	equ	0xFDF
   745                           fsr2h	equ	0xFDA
   746                           fsr2l	equ	0xFD9
   747                           status	equ	0xFD8
   748                           
   749 ;; *************** function ___lwdiv *****************
   750 ;; Defined at:
   751 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  dividend        2    0[COMRAM] unsigned int 
   754 ;;  divisor         2    2[COMRAM] unsigned int 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  quotient        2    4[COMRAM] unsigned int 
   757 ;;  counter         1    6[COMRAM] unsigned char 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  2    0[COMRAM] unsigned int 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   767 ;;      Params:         4       0       0       0       0       0       0
   768 ;;      Locals:         3       0       0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0       0       0
   770 ;;      Totals:         7       0       0       0       0       0       0
   771 ;;Total ram usage:        7 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text5
   781  002E22                     __ptext5:
   782                           	opt stack 0
   783  002E22                     ___lwdiv:
   784                           	opt stack 30
   785                           
   786                           ;incstack = 0
   787  002E22  0E00               	movlw	0
   788  002E24  6E06               	movwf	___lwdiv@quotient+1,c
   789  002E26  0E00               	movlw	0
   790  002E28  6E05               	movwf	___lwdiv@quotient,c
   791  002E2A  5003               	movf	___lwdiv@divisor,w,c
   792  002E2C  1004               	iorwf	___lwdiv@divisor+1,w,c
   793  002E2E  B4D8               	btfsc	status,2,c
   794  002E30  D01C               	goto	l449
   795  002E32  0E01               	movlw	1
   796  002E34  6E07               	movwf	___lwdiv@counter,c
   797  002E36  D004               	goto	l800
   798  002E38                     l798:
   799  002E38  90D8               	bcf	status,0,c
   800  002E3A  3603               	rlcf	___lwdiv@divisor,f,c
   801  002E3C  3604               	rlcf	___lwdiv@divisor+1,f,c
   802  002E3E  2A07               	incf	___lwdiv@counter,f,c
   803  002E40                     l800:
   804  002E40  AE04               	btfss	___lwdiv@divisor+1,7,c
   805  002E42  D7FA               	goto	l798
   806  002E44                     l802:
   807  002E44  90D8               	bcf	status,0,c
   808  002E46  3605               	rlcf	___lwdiv@quotient,f,c
   809  002E48  3606               	rlcf	___lwdiv@quotient+1,f,c
   810  002E4A  5003               	movf	___lwdiv@divisor,w,c
   811  002E4C  5C01               	subwf	___lwdiv@dividend,w,c
   812  002E4E  5004               	movf	___lwdiv@divisor+1,w,c
   813  002E50  5802               	subwfb	___lwdiv@dividend+1,w,c
   814  002E52  A0D8               	btfss	status,0,c
   815  002E54  D005               	goto	l810
   816  002E56  5003               	movf	___lwdiv@divisor,w,c
   817  002E58  5E01               	subwf	___lwdiv@dividend,f,c
   818  002E5A  5004               	movf	___lwdiv@divisor+1,w,c
   819  002E5C  5A02               	subwfb	___lwdiv@dividend+1,f,c
   820  002E5E  8005               	bsf	___lwdiv@quotient,0,c
   821  002E60                     l810:
   822  002E60  90D8               	bcf	status,0,c
   823  002E62  3204               	rrcf	___lwdiv@divisor+1,f,c
   824  002E64  3203               	rrcf	___lwdiv@divisor,f,c
   825  002E66  2E07               	decfsz	___lwdiv@counter,f,c
   826  002E68  D7ED               	goto	l802
   827  002E6A                     l449:
   828  002E6A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   829  002E6E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   830  002E72  0012               	return		;funcret
   831  002E74                     __end_of___lwdiv:
   832                           	opt stack 0
   833  0000                     tblptru	equ	0xFF8
   834                           tblptrh	equ	0xFF7
   835                           tblptrl	equ	0xFF6
   836                           tablat	equ	0xFF5
   837                           postinc0	equ	0xFEE
   838                           postdec1	equ	0xFE5
   839                           fsr1l	equ	0xFE1
   840                           indf2	equ	0xFDF
   841                           fsr2h	equ	0xFDA
   842                           fsr2l	equ	0xFD9
   843                           status	equ	0xFD8
   844                           tblptru	equ	0xFF8
   845                           tblptrh	equ	0xFF7
   846                           tblptrl	equ	0xFF6
   847                           tablat	equ	0xFF5
   848                           postinc0	equ	0xFEE
   849                           postdec1	equ	0xFE5
   850                           fsr1l	equ	0xFE1
   851                           indf2	equ	0xFDF
   852                           fsr2h	equ	0xFDA
   853                           fsr2l	equ	0xFD9
   854                           status	equ	0xFD8
   855                           
   856                           	psect	rparam
   857  0000                     tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           tblptrl	equ	0xFF6
   860                           tablat	equ	0xFF5
   861                           postinc0	equ	0xFEE
   862                           postdec1	equ	0xFE5
   863                           fsr1l	equ	0xFE1
   864                           indf2	equ	0xFDF
   865                           fsr2h	equ	0xFDA
   866                           fsr2l	equ	0xFD9
   867                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@ssd	PTR unsigned char  size(2) Largest target is 4
		 -> ssd(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    1495
                                             12 COMRAM     7     7      0
                            ___lwdiv
                            ___lwmod
                            _display
                        _init_config
                   _read_digital_key
 ---------------------------------------------------------------------------------
 (1) _read_digital_key                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              8     6      2     222
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     543
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     546
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _display
   _init_config
   _read_digital_key

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      21       1       34.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21       3        0.0%
DATA                 0      0      21      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue Jun  6 03:24:21 2023

                       l46 2ED8                        l800 2E40                        l449 2E6A  
                      l810 2E60                        l802 2E44                        l459 2E18  
                      l820 2DF6                        l822 2DFA                        l826 2E0E  
                      l818 2DEE                        l770 2E7C                        l780 2EC0  
                      l852 2F32                        l844 2F1A                        l774 2E8C  
                      l854 2F3A                        l838 2EF6                        l788 2ED2  
                      l798 2E38                        u174 2EAC                        u175 2EA8  
                      _ssd 001E                       _data 0014                       _main 2EDA  
                     fsr1l 000FE1                       indf2 000FDF                       fsr2l 000FD9  
                     start 0000               ___param_bank 000010                      ?_main 0001  
          __end_of___lwdiv 2E74            __end_of___lwmod 2E22               ?_init_config 0001  
                    _PORTA 000F80                      _PORTC 000F82                      _PORTD 000F83  
                    _TRISA 000F92                      _TRISD 000F95            __end_of_display 2EDA  
                    tablat 000FF5                      status 000FD8          ?_read_digital_key 0001  
       ??_read_digital_key 0001            __initialization 2DB2               __end_of_main 3000  
                   ??_main 000D              __activetblptr 000000                     _TRISC0 007CA0  
                ??___lwdiv 0005                  ??___lwmod 000C                  ??_display 0003  
             __pdataCOMRAM 0014                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                 __accesstop 0060    __end_of__initialization 2DDA  
            ___rparam_used 000001             __pcstackCOMRAM 0001       __size_of_init_config 0014  
                  __Hparam 0000                    __Lparam 0000                    ___lwdiv 2E22  
                  ___lwmod 2DE0                    __pcinit 2DB2                    __ramtop 0600  
__size_of_read_digital_key 0006                    __ptext0 2EDA                    __ptext1 2D8E  
                  __ptext2 2D9E                    __ptext3 2E74                    __ptext4 2DE0  
                  __ptext5 2E22                    _display 2E74                    main@key 000F  
     end_of_initialization 2DDA                    postdec1 000FE5                    postinc0 000FEE  
               display@ssd 0001              __pidataCOMRAM 2D94        start_initialization 2DB2  
         _read_digital_key 2D8E              ??_init_config 0001                __pbssCOMRAM 001E  
         ___lwdiv@dividend 0001                   ?___lwdiv 0001                   ?___lwmod 0008  
                 ?_display 0001           ___lwdiv@quotient 0005        __end_of_init_config 2DB2  
                main@delay 000D                  main@count 0012                  copy_data0 2DCE  
                 __Hrparam 0000                   __Lrparam 0000           __size_of___lwdiv 0052  
         __size_of___lwmod 0042                _init_config 2D9E           __size_of_display 0066  
          ___lwdiv@divisor 0003            ___lwdiv@counter 0007   __end_of_read_digital_key 2D94  
            __size_of_main 0126                   display@i 0007                   display@j 0005  
                 main@wait 0010           ___lwmod@dividend 0008            ___lwmod@divisor 000A  
          ___lwmod@counter 000C  
